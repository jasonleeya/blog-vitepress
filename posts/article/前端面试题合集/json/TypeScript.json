[{"title":"什么是 TypeScript？它与 JavaScript 有什么关系？","description":"","answer":""},{"title":"如何将 TypeScript 代码编译为 JavaScript 代码？","description":"","answer":""},{"title":"什么是 TypeScript 的类型系统？请列举一些常见的类型。","description":"","answer":""},{"title":"开发过程中为什么会选择使用 TypeScript, 相比于 JavaScript 开发，有哪些优点？","description":"","answer":""},{"title":"解释 keyof 和 typeof 的作用","description":"","answer":""},{"title":"type 和 interface 的区别","description":"","answer":""},{"title":"any、unknown 和 never 的区别是什么？","description":"","answer":""},{"title":"如何用 TypeScript 实现枚举类型的反向映射？","description":"","answer":""},{"title":"TypeScript is 这个关键字是做什么？","description":"","answer":""},{"title":"TypeScript in 这个关键字是做什么？","description":"","answer":""},{"title":"infer 关键字是什么?","description":"","answer":""},{"title":"const 和 readonly 的区别？","description":"","answer":""},{"title":"联合类型是什么？","description":"","answer":""},{"title":"介绍一下 TS 中的泛型","description":"","answer":""},{"title":"你了解 ts 工具类型 Exclude 与 Omit 的使用吗？及它们两个的区别？","description":"","answer":"<p><code>Exclude</code> 和 <code>Omit</code> 都是 TypeScript 中的 <strong>工具类型</strong>（Utility Types），它们的作用是处理和转换类型的集合，在实际开发中高效地操作类型。</p>\n<ol>\n<li><strong><code>Exclude</code> 类型</strong></li>\n</ol>\n<p><code>Exclude</code> 是 TypeScript 提供的一个工具类型，它的作用是从联合类型中排除指定的类型。</p>\n<p>语法：</p>\n<pre><code class=\"language-typescript\"><div class=\"language-typescript \"><span class=\"lang\">typescript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B07D48\">Exclude</span><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#B07D48\">T</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> U</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<ul>\n<li><code>T</code> 是目标类型。</li>\n<li><code>U</code> 是要排除的类型。</li>\n</ul>\n<p><code>Exclude&lt;T, U&gt;</code> 的作用是构建一个新的类型，它是从 <code>T</code> 中排除掉所有在 <code>U</code> 中的类型。</p>\n<p><strong>示例：</strong></p>\n<pre><code class=\"language-typescript\"><div class=\"language-typescript \"><span class=\"lang\">typescript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#AB5959\">type</span><span style=\"color:#2E8F82\"> A</span><span style=\"color:#999999\"> =</span><span style=\"color:#2E8F82\"> string</span><span style=\"color:#999999\"> |</span><span style=\"color:#2E8F82\"> number</span><span style=\"color:#999999\"> |</span><span style=\"color:#2E8F82\"> boolean</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">type</span><span style=\"color:#2E8F82\"> B</span><span style=\"color:#999999\"> =</span><span style=\"color:#2E8F82\"> string</span><span style=\"color:#999999\"> |</span><span style=\"color:#2E8F82\"> boolean</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#AB5959\">type</span><span style=\"color:#2E8F82\"> Result</span><span style=\"color:#999999\"> =</span><span style=\"color:#2E8F82\"> Exclude</span><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#2E8F82\">A</span><span style=\"color:#999999\">,</span><span style=\"color:#2E8F82\"> B</span><span style=\"color:#999999\">>;</span><span style=\"color:#A0ADA0\"> // Result 类型为: number</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p>在这个例子中，<code>Exclude&lt;A, B&gt;</code> 表示从 <code>A</code> 类型中排除掉了 <code>string</code> 和 <code>boolean</code>，因此 <code>Result</code> 的类型就是 <code>number</code>。</p>\n<ol start=\"2\">\n<li><code>Omit</code> 类型</li>\n</ol>\n<p><code>Omit</code> 是 TypeScript 中的另一个工具类型，它用于从一个类型中排除指定的键（属性）。</p>\n<p>语法：</p>\n<pre><code class=\"language-typescript\"><div class=\"language-typescript \"><span class=\"lang\">typescript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B07D48\">Omit</span><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#B07D48\">T</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> K</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<ul>\n<li><code>T</code> 是目标类型。</li>\n<li><code>K</code> 是要排除的属性键。</li>\n</ul>\n<p><code>Omit&lt;T, K&gt;</code> 会构建一个新的类型，它是从 <code>T</code> 中排除掉了 <code>K</code> 中的所有属性。</p>\n<p><strong>示例：</strong></p>\n<pre><code class=\"language-typescript\"><div class=\"language-typescript \"><span class=\"lang\">typescript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#AB5959\">interface</span><span style=\"color:#2E8F82\"> Person</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  name</span><span style=\"color:#999999\">: </span><span style=\"color:#2E8F82\">string</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  age</span><span style=\"color:#999999\">: </span><span style=\"color:#2E8F82\">number</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  address</span><span style=\"color:#999999\">: </span><span style=\"color:#2E8F82\">string</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#AB5959\">type</span><span style=\"color:#2E8F82\"> OmittedPerson</span><span style=\"color:#999999\"> =</span><span style=\"color:#2E8F82\"> Omit</span><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#2E8F82\">Person</span><span style=\"color:#999999\">,</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">address</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">>;</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">// OmittedPerson 类型为: { name: string; age: number; }</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p>在这个例子中，<code>Omit&lt;Person, 'address'&gt;</code> 表示从 <code>Person</code> 类型中排除了 <code>address</code> 属性，最终结果是一个不包含 <code>address</code> 属性的新类型 <code>{ name: string; age: number; }</code>。</p>\n<p><code>Exclude</code> 和 <code>Omit</code> 的区别</p>\n<ul>\n<li><strong><code>Exclude</code></strong>：用于处理联合类型，排除某些类型（通常是值类型）以产生一个新的联合类型。它关注的是类型的<strong>值</strong>，而不是对象的<strong>属性</strong>。</li>\n<li><strong><code>Omit</code></strong>：用于处理对象类型，从对象中排除掉指定的属性，生成一个新的对象类型。它关注的是类型的<strong>属性</strong>，而非值。</li>\n</ul>\n<p><strong>例子对比：</strong></p>\n<ul>\n<li>\n<p><strong><code>Exclude</code></strong>：从联合类型中移除指定的值类型。</p>\n<pre><code class=\"language-typescript\"><div class=\"language-typescript \"><span class=\"lang\">typescript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#AB5959\">type</span><span style=\"color:#2E8F82\"> A</span><span style=\"color:#999999\"> =</span><span style=\"color:#2E8F82\"> string</span><span style=\"color:#999999\"> |</span><span style=\"color:#2E8F82\"> number</span><span style=\"color:#999999\"> |</span><span style=\"color:#2E8F82\"> boolean</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">type</span><span style=\"color:#2E8F82\"> B</span><span style=\"color:#999999\"> =</span><span style=\"color:#2E8F82\"> string</span><span style=\"color:#999999\"> |</span><span style=\"color:#2E8F82\"> boolean</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#AB5959\">type</span><span style=\"color:#2E8F82\"> Result</span><span style=\"color:#999999\"> =</span><span style=\"color:#2E8F82\"> Exclude</span><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#2E8F82\">A</span><span style=\"color:#999999\">,</span><span style=\"color:#2E8F82\"> B</span><span style=\"color:#999999\">>;</span><span style=\"color:#A0ADA0\"> // Result 是 number</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong><code>Omit</code></strong>：从对象类型中移除指定的属性。</p>\n<pre><code class=\"language-typescript\"><div class=\"language-typescript \"><span class=\"lang\">typescript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#AB5959\">interface</span><span style=\"color:#2E8F82\"> Person</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  name</span><span style=\"color:#999999\">: </span><span style=\"color:#2E8F82\">string</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  age</span><span style=\"color:#999999\">: </span><span style=\"color:#2E8F82\">number</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  address</span><span style=\"color:#999999\">: </span><span style=\"color:#2E8F82\">string</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#AB5959\">type</span><span style=\"color:#2E8F82\"> OmittedPerson</span><span style=\"color:#999999\"> =</span><span style=\"color:#2E8F82\"> Omit</span><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#2E8F82\">Person</span><span style=\"color:#999999\">,</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">address</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">>;</span><span style=\"color:#A0ADA0\"> // OmittedPerson 是 { name: string; age: number }</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n</ul>\n"}]