[{"title":"express middleware(中间件) 工作原理是什么？","answer":""},{"title":"浏览器 和 Node 事件循环有区别吗？","answer":""},{"title":"process.nextTick, setTimeout 以及 setImmediate 三者的执行顺序？","answer":"<p>在 Node.js 中，<code>process.nextTick</code>、<code>setTimeout</code> 和 <code>setImmediate</code> 是三种用于在事件循环的不同阶段执行回调函数的方法。它们的执行顺序遵循特定的规则，这取决于事件循环的阶段。以下是这三者的执行顺序和细节：</p>\n<p><strong>1. <code>process.nextTick</code></strong></p>\n<ul>\n<li><strong>描述</strong>：<code>process.nextTick</code> 的回调函数会在当前操作完成后、事件循环的下一轮开始前立即执行。</li>\n<li><strong>执行时机</strong>：在当前执行栈中的所有代码运行完后，<code>process.nextTick</code> 队列中的回调函数会被执行。它的优先级高于 <code>setTimeout</code> 和 <code>setImmediate</code>。</li>\n</ul>\n<p><strong>2. <code>setTimeout</code></strong></p>\n<ul>\n<li><strong>描述</strong>：<code>setTimeout</code> 用于设置一个定时器，在指定的延迟时间后执行回调函数。</li>\n<li><strong>执行时机</strong>：<code>setTimeout</code> 的回调函数在指定的延迟时间后执行，具体的执行时间取决于事件循环的空闲状态和系统定时器的精度。即使延迟时间是 0，<code>setTimeout</code> 也不会立即执行，而是会等到当前操作结束并进入下一轮事件循环后执行。</li>\n</ul>\n<p><strong>3. <code>setImmediate</code></strong></p>\n<ul>\n<li><strong>描述</strong>：<code>setImmediate</code> 用于在当前事件循环的剩余部分执行回调函数。它在 I/O 事件之后执行回调。</li>\n<li><strong>执行时机</strong>：<code>setImmediate</code> 的回调函数会在当前事件循环的所有 <code>poll</code> 阶段处理完成后执行。如果在事件循环的 <code>poll</code> 阶段没有其他 I/O 事件，它会尽快执行。</li>\n</ul>\n<p><strong>执行顺序示例</strong></p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#393A34\">1</span><span style=\"color:#B07D48\">console</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">log</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">Start</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B07D48\">process</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">nextTick</span><span style=\"color:#999999\">(()</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  console</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">log</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">process.nextTick</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#59873A\">setTimeout</span><span style=\"color:#999999\">(()</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  console</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">log</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">setTimeout</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">},</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#59873A\">setImmediate</span><span style=\"color:#999999\">(()</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  console</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">log</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">setImmediate</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B07D48\">console</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">log</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">End</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>输出顺序</strong></p>\n<ol>\n<li><strong><code>Start</code></strong> - <code>console.log</code> 执行</li>\n<li><strong><code>End</code></strong> - <code>console.log</code> 执行</li>\n<li><strong><code>process.nextTick</code></strong> - <code>process.nextTick</code> 回调执行</li>\n<li><strong><code>setTimeout</code></strong> - <code>setTimeout</code> 回调执行</li>\n<li><strong><code>setImmediate</code></strong> - <code>setImmediate</code> 回调执行</li>\n</ol>\n"}]