[{"title":"CSS3 有哪些新特性","description":"","answer":"<ol>\n<li><strong>弹性布局</strong>（Flexbox）与<strong>网格布局</strong>（Grid）；</li>\n<li><strong>过渡动画</strong>（<code>transition</code>/<code>animation</code>）；</li>\n<li><strong>样式增强</strong>：圆角（<code>border-radius</code>）、阴影（<code>box-shadow/text-shadow</code>）、渐变（<code>gradient</code>）；</li>\n<li><strong>响应式设计</strong>：媒体查询（<code>@media</code>）；</li>\n<li><strong>变形与滤镜</strong>：<code>transform</code>（旋转/缩放）、<code>filter</code>（模糊/透明度）；</li>\n<li><strong>自定义字体</strong>（<code>@font-face</code>）和<strong>多列布局</strong>（<code>columns</code>）。</li>\n<li><strong>选择器的扩展</strong>:属性选择器：<code>[attr^=&quot;val&quot;]</code>（开头匹配）、<code>[attr$=&quot;val&quot;]</code>（结尾匹配）；<strong>结构伪类</strong>：<code>:nth-child(n)</code>、<code>:nth-of-type(n)</code>、<code>:empty</code>（无子元素）；UI状态伪类：<code>:enabled</code>、<code>:disabled</code>、<code>:checked</code>；否定伪类：<code>:not(selector)</code> 排除元素；伪元素语法：<code>::before</code>、<code>::after</code>（推荐双冒号，区分伪类）。</li>\n</ol>\n"},{"title":"介绍⼀下标准的 CSS 的盒⼦模型？","description":"","answer":"<p>标准 CSS 盒模型由 <strong>内容区（content）</strong>、<strong>内边距（padding）</strong>、<strong>边框（border）</strong> 和 <strong>外边距（margin）</strong> 组成。</p>\n<ul>\n<li><strong>核心规则</strong>：\n默认 <code>box-sizing: content-box</code>，元素的 <code>width/height</code> 仅定义内容区尺寸，总宽度为：\n<strong>总宽度 = width + padding + border</strong>（外边距 <code>margin</code> 影响布局但不计入元素自身尺寸）。</li>\n<li><strong>对比 IE 模型</strong>：\n通过 <code>box-sizing: border-box</code> 切换为 IE 模型，此时 <code>width/height</code> 包含内容、内边距和边框。</li>\n</ul>\n"},{"title":"描述块格式化上下文 (BFC) 及其工作原理","description":"","answer":"<p>BFC（块格式化上下文）是页面渲染的一块独立区域，内部元素布局不影响外部。它通过特定条件触发（如 <code>overflow: hidden</code>、<code>float</code>、<code>display: flex</code> 等），主要解决外边距重叠、浮动元素高度塌陷，以及阻止元素被浮动覆盖。BFC内元素垂直排列，且区域边界会包裹内部浮动内容，避免布局干扰。</p>\n"},{"title":"为什么要初始化 CSS 样式？","description":"","answer":"<p>初始化 CSS 主要是为了<strong>消除浏览器默认样式的差异</strong>，统一元素基础表现。不同浏览器对标签（如 <code>body</code> 的边距、<code>ul</code> 的列表符号）的默认样式不同，直接开发会导致布局错乱或冗余覆盖。通过重置（如 <code>margin: 0; padding: 0</code>）或标准化（如 Normalize.css），确保跨浏览器一致性，减少调试成本，提升开发效率。</p>\n"},{"title":"简述 CSS 选择器有哪些?","description":"","answer":"<ol>\n<li><strong>元素选择器</strong>：这是最基础的选择器，它根据HTML元素的类型进行选择。例如，<code>h1 { color: blue; }</code>会将所有的h1元素的文字颜色设置为蓝色。</li>\n<li><strong>ID选择器</strong>：通过元素的id属性进行选择，id选择器在CSS中具有很高的优先级。例如，<code>#myId { color: blue; }</code>会将id为myId的元素的文字颜色设置为蓝色。</li>\n<li><strong>类选择器</strong>：通过元素的class属性进行选择。例如，<code>.myClass { color: blue; }</code>会将class为myClass的所有元素的文字颜色设置为蓝色。</li>\n<li><strong>属性选择器</strong>：通过元素的属性进行选择。例如，<code>[href] { color: blue; }</code>会将所有含有href属性的元素的文字颜色设置为蓝色。</li>\n<li><strong>后代选择器</strong>：选中某元素的后代元素。例如，<code>div p { color: blue; }</code>会将所有在div元素内部的p元素的文字颜色设置为蓝色。</li>\n<li><strong>子元素选择器</strong>：选中某元素的直接子元素。例如，<code>div &gt; p { color: blue; }</code>会将所有直接在div元素下一级的p元素的文字颜色设置为蓝色。</li>\n<li><strong>相邻兄弟选择器</strong>：选中某元素的下一个兄弟元素。例如，<code>h1 + p { color: blue; }</code>会将所有紧跟在h1元素后面的p元素的文字颜色设置为蓝色。</li>\n<li><strong>通用选择器</strong>：选中所有元素。例如，<code>* { color: blue; }</code>会将所有元素的文字颜色设置为蓝色。</li>\n</ol>\n<p>此外，CSS3还引入了一些新的选择器，如：</p>\n<ul>\n<li><strong>结构伪类选择器</strong>：例如<code>:first-child</code>、<code>:last-child</code>、<code>:nth-child()</code>等，用来选择特定位置的元素。</li>\n<li><strong>否定伪类选择器</strong>：例如<code>:not()</code>，用来选择除某些元素以外的元素。</li>\n<li><strong>伪元素选择器</strong>：例如<code>::before</code>、<code>::after</code>，用来选择元素的一部分，或者在元素前后插入内容。</li>\n</ul>\n"},{"title":"CSS 样式的优先级（选择器的权重）是如何的?","description":"","answer":"<ol>\n<li><strong>!important</strong> &gt; <strong>内联样式</strong> &gt; <strong>ID 选择器</strong> &gt; <strong>类/伪类/属性</strong> &gt; <strong>元素/伪元素</strong> &gt; <strong>通配符/继承</strong>；</li>\n</ol>\n"},{"title":"什么是 CSS 文档流？","description":"","answer":"<p>CSS 文档流是元素默认的布局方式：<strong>块级元素</strong>从上到下垂直排列，<strong>行内元素</strong>从左到右水平排列，占据内容自然空间。脱离文档流的方式包括 <code>float</code>、<code>position: absolute/fixed</code>，此时元素不再影响其他元素布局（如浮动覆盖常规内容）。</p>\n"},{"title":"脱离文档流有哪些方法？","description":"","answer":""},{"title":"Padding 和 Margin 有什么区别？","description":"","answer":"<ul>\n<li><strong>Padding（内边距）</strong>：Padding 是元素的内边距，它位于元素的边框和内容之间,Padding 是元素的内部空间，它会影响元素的尺寸。</li>\n<li><strong>Margin（外边距）</strong>：Margin 是元素的外边距，它位于元素的边框和其他元素之间，Margin 是元素的外部空间，它不影响元素的尺寸，只影响元素与其他元素的距离，并且不显示元素的背景。</li>\n</ul>\n"},{"title":"CSS 引入的方式有哪些? link 和 @import 的区别是?","description":"","answer":"<p>CSS 引入方式：</p>\n<ol>\n<li><strong>内联样式</strong>（<code>&lt;div style=&quot;&quot;&gt;</code>）；</li>\n<li><strong>内部样式表</strong>（<code>&lt;style&gt;</code> 标签）；</li>\n<li><strong>外部链接</strong>（<code>&lt;link href=&quot;&quot;&gt;</code>）；</li>\n<li><strong>@import</strong>（CSS 内引入其他文件）。</li>\n</ol>\n<p><strong>区别</strong>：</p>\n<ul>\n<li><strong>加载方式</strong>：<code>&lt;link&gt;</code> 是 HTML 标签，<strong>并行加载</strong>；<code>@import</code> 是 CSS 语法，需等 HTML 解析完再加载，<strong>可能阻塞渲染</strong>；</li>\n<li><strong>兼容性</strong>：<code>@import</code> 不支持 IE5 以下，<code>&lt;link&gt;</code> 无兼容问题；</li>\n<li><strong>DOM 控制</strong>：<code>&lt;link&gt;</code> 可通过 JS 操作（如动态插入），<code>@import</code> 不可；</li>\n<li><strong>使用场景</strong>：<code>&lt;link&gt;</code> 推荐主样式，<code>@import</code> 适合模块化按需加载（但慎用，性能较差）。</li>\n</ul>\n"},{"title":"CSS 中 position 属性有哪些，大概讲一下？","description":"","answer":"<p>CSS 的 <code>position</code> 属性控制元素的定位方式：</p>\n<ol>\n<li><strong>static</strong>：默认值，元素在文档流中正常排列；</li>\n<li><strong>relative</strong>：相对定位，基于自身原位置偏移（不影响其他元素）；</li>\n<li><strong>absolute</strong>：绝对定位，相对于<strong>最近的非 static 祖先元素</strong>定位；</li>\n<li><strong>fixed</strong>：固定定位，相对于<strong>视口</strong>（滚动不移动）；</li>\n<li><strong>sticky</strong>：粘性定位，滚动到阈值时变为固定（如吸顶效果）。</li>\n</ol>\n<p><strong>注意</strong>：<code>absolute/fixed</code> 会脱离文档流，需通过 <code>top/left</code> 等调整位置。display: block;和display: inline;的区别?</p>\n"},{"title":"position 的 sticky 有什么应用场景？","description":"","answer":""},{"title":"CSS 隐藏元素的方法有哪些?","description":"","answer":"<p>CSS 隐藏元素的常见方法及区别：</p>\n<ol>\n<li><strong><code>display: none</code></strong>：元素不渲染，<strong>不占空间</strong>，无法交互，触发重排；</li>\n<li><strong><code>visibility: hidden</code></strong>：元素不可见，<strong>保留空间</strong>，无法交互，仅重绘；</li>\n<li><strong><code>opacity: 0</code></strong>：完全透明，<strong>保留空间</strong>，<strong>可交互</strong>（如点击）；</li>\n<li><strong><code>position + 偏移</code></strong>：如 <code>absolute; left: -9999px</code>，移出视口但占位；</li>\n<li><strong><code>clip-path: inset(100%)</code></strong>：裁剪隐藏，保留布局，兼容性较差；</li>\n<li><strong><code>width/height: 0</code> + <code>overflow: hidden</code></strong>：需清除内边距/边框。</li>\n</ol>\n"},{"title":"你知道哪些垂直居中的方法？","description":"","answer":"<ol>\n<li>\n<p><strong>Flex 布局</strong>：</p>\n<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">parent</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  display</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> flex</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  justify-content</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> center</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  align-items</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> center</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>Grid 布局</strong>：</p>\n<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">parent</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  display</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> grid</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  place-items</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> center</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>绝对定位 + Transform</strong>（未知宽高）：</p>\n<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">child</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  position</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> absolute</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  left</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 50</span><span style=\"color:#AB5959\">%</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  top</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 50</span><span style=\"color:#AB5959\">%</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  transform</span><span style=\"color:#999999\">:</span><span style=\"color:#998418\"> translate</span><span style=\"color:#999999\">(</span><span style=\"color:#2F798A\">-50</span><span style=\"color:#AB5959\">%</span><span style=\"color:#999999\">,</span><span style=\"color:#2F798A\"> -50</span><span style=\"color:#AB5959\">%</span><span style=\"color:#999999\">);</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>绝对定位 + Margin</strong>（已知宽高）：</p>\n<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">child</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  position</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> absolute</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  left</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">;</span><span style=\"color:#998418\"> right</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  top</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">;</span><span style=\"color:#998418\"> bottom</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  margin</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> auto</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>行内内容居中</strong>：</p>\n<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">parent</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  text-align</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> center</span><span style=\"color:#999999\">;</span><span style=\"color:#A0ADA0\">  /* 水平 */</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  line-height</span><span style=\"color:#999999\">:</span><span style=\"color:#393A34\"> 高度值</span><span style=\"color:#999999\">;</span><span style=\"color:#A0ADA0\">  /* 垂直（单行） */</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n</ol>\n"},{"title":"CSS 哪些属性可以继承？","description":"","answer":"<ol>\n<li><strong>字体相关</strong>：<code>font-family</code>、<code>font-size</code>、<code>font-weight</code>、<code>color</code>；</li>\n<li><strong>文本相关</strong>：<code>line-height</code>、<code>text-align</code>、<code>text-indent</code>、<code>letter-spacing</code>；</li>\n<li><strong>其他</strong>：<code>visibility</code>（隐藏继承）、<code>cursor</code>（光标样式）、<code>list-style</code>（列表符号）。</li>\n</ol>\n"},{"title":"简述 CSS 的浮动机制","description":"","answer":"<p>CSS浮动（float）使元素脱离标准文档流，向左/右移动直至触达容器边缘或另一个浮动元素，实现内容环绕或传统布局。</p>\n<p><strong>具体机制</strong>：</p>\n<ol>\n<li>\n<p><strong>元素脱离文档流</strong>：</p>\n<ul>\n<li>浮动元素不再占据原位置，后续非浮动元素会“环绕”其周围（类似文字环绕图片）。</li>\n</ul>\n</li>\n<li>\n<p><strong>浮动方向与定位规则</strong>：</p>\n<ul>\n<li><code>float: left/right</code> 元素依次靠左/右排列，直至容器边缘或遇到其他浮动元素。</li>\n</ul>\n</li>\n<li>\n<p><strong>父容器高度塌陷</strong>：</p>\n<ul>\n<li>父元素默认不计算浮动子元素高度，导致布局错乱（需清除浮动）。</li>\n</ul>\n</li>\n</ol>\n<p><strong>清除浮动方法</strong>：</p>\n<ul>\n<li><strong>空元素清除法</strong>：<pre><code class=\"language-html\"><div class=\"language-html \"><span class=\"lang\">html</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#B07D48\"> style</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">clear: both;</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">>&#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li><strong>父元素触发BFC</strong>：<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">parent</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  overflow</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> auto</span><span style=\"color:#999999\">;</span><span style=\"color:#A0ADA0\"> /* 或 overflow: hidden */</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li><strong>伪元素清除（推荐）</strong>：<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">parent</span><span style=\"color:#999999\">::</span><span style=\"color:#B07D48\">after</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  content</span><span style=\"color:#999999\">:</span><span style=\"color:#B5695977\"> \"\"</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  display</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> block</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  clear</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> both</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n</ul>\n<p><strong>应用场景</strong>：</p>\n<ul>\n<li>传统多栏布局（现多被 Flex/Grid 替代）；</li>\n<li>文字环绕图片、导航菜单项横向排列。</li>\n</ul>\n<p><strong>局限性</strong>：</p>\n<ul>\n<li>需手动清除浮动，维护成本高；</li>\n<li>布局灵活性不足，易出现错位问题。</li>\n</ul>\n"},{"title":"清除浮动的方法有哪些？","description":"","answer":"<ol>\n<li>\n<p><strong>空元素法</strong>：在浮动元素后添加 <code>&lt;div style=&quot;clear:both&quot;&gt;&lt;/div&gt;</code>；</p>\n</li>\n<li>\n<p><strong>伪元素法</strong>（推荐）：</p>\n<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">clearfix</span><span style=\"color:#999999\">::</span><span style=\"color:#B07D48\">after</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  content</span><span style=\"color:#999999\">:</span><span style=\"color:#B5695977\"> \"\"</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  display</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> block</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  clear</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> both</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>触发BFC</strong>：父元素设置 <code>overflow: hidden</code> 或 <code>display: flow-root</code>；</p>\n</li>\n<li>\n<p><strong>父元素定高</strong>：直接设置高度（不灵活，慎用）。</p>\n</li>\n</ol>\n<p><strong>核心原理</strong>：通过清除操作使父容器包裹浮动元素，避免高度塌陷。</p>\n"},{"title":"如何解决父容器高度塌陷问题？","description":"","answer":"<p>解决父容器高度塌陷的常见方法：</p>\n<ol>\n<li>\n<p><strong>清除浮动</strong>：</p>\n<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">parent</span><span style=\"color:#999999\">::</span><span style=\"color:#B07D48\">after</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  content</span><span style=\"color:#999999\">:</span><span style=\"color:#B5695977\"> \"\"</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  display</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> block</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  clear</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> both</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>触发 BFC</strong>：</p>\n<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">parent</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  overflow</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> hidden</span><span style=\"color:#999999\">;</span><span style=\"color:#A0ADA0\"> /* 或 display: flow-root（无副作用） */</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>现代布局替代</strong>：</p>\n<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">parent</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  display</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> flex</span><span style=\"color:#999999\">;</span><span style=\"color:#A0ADA0\"> /* 或 grid */</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n</ol>\n<p><strong>原理</strong>：强制父容器重新计算高度，包含浮动子元素。推荐伪元素法或 <code>flow-root</code>，避免 <code>overflow</code> 可能的内容裁剪问题。</p>\n"},{"title":"说说⼏种常⻅的 CSS 布局","description":"","answer":"<ol>\n<li><strong>传统浮动布局</strong>：\n<ul>\n<li>圣杯/双飞翼布局（三栏，两侧固定，中间自适应），需清除浮动。</li>\n</ul>\n</li>\n<li><strong>Flex 弹性布局</strong>：\n<ul>\n<li>一维布局（如导航栏、垂直居中），通过 <code>display: flex</code> 实现灵活对齐与分布。</li>\n</ul>\n</li>\n<li><strong>Grid 网格布局</strong>：\n<ul>\n<li>二维布局（如复杂网格、卡片排列），<code>display: grid</code> 支持行列定义，简化结构。</li>\n</ul>\n</li>\n<li><strong>定位布局</strong>：\n<ul>\n<li>结合 <code>position: absolute/fixed</code> 实现固定侧边栏、弹窗等脱离文档流的元素。</li>\n</ul>\n</li>\n<li><strong>响应式布局</strong>：\n<ul>\n<li>媒体查询（<code>@media</code>）适配不同屏幕尺寸，结合 Flex/Grid 动态调整布局。</li>\n</ul>\n</li>\n</ol>\n<p><strong>特点</strong>：Flex/Grid 更现代高效，传统浮动兼容性更好，响应式适配多端。</p>\n"},{"title":"讲一讲圣杯布局和双飞翼布局","description":"<p>圣杯布局和双飞翼布局都是经典的三栏自适应布局解决方案，核心目标是实现<strong>中间内容优先渲染</strong>、<strong>左右固定宽度</strong>、<strong>中间自适应</strong>的布局，且兼容旧浏览器。以下是两者的实现原理和区别：</p>\n<p><strong>1. 圣杯布局（Holy Grail Layout）</strong></p>\n<ul>\n<li><strong>实现步骤</strong>：\n<ol>\n<li><strong>结构</strong>：父容器包含左、中、右三栏，<strong>HTML中中间栏写在最前面</strong>（保证优先渲染）。</li>\n<li><strong>浮动</strong>：三栏全部左浮动，中间栏宽度设为<code>100%</code>占满父容器。</li>\n<li><strong>父容器留白</strong>：通过<code>padding</code>为左右栏预留位置（值等于左右栏的宽度）。</li>\n<li><strong>负边距调整</strong>：左栏用<code>margin-left: -100%</code>拉到父容器左侧预留区，右栏用<code>margin-left: -自身宽度</code>拉到右侧预留区。</li>\n<li><strong>相对定位</strong>：左右栏通过<code>position: relative</code>微调至正确位置。</li>\n</ol>\n</li>\n<li><strong>优点</strong>：HTML结构更简洁。</li>\n<li><strong>缺点</strong>：需处理相对定位和边距，窄屏下可能错乱。</li>\n</ul>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#B07D48\"> class</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">container</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#B07D48\"> class</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">center</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">>&#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#B07D48\"> class</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">left</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">>&#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#B07D48\"> class</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">right</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">>&#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">style</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#393A34\">.container </span><span style=\"color:#999999\">{</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  padding</span><span style=\"color:#393A34\">: </span><span style=\"color:#2F798A\">0</span><span style=\"color:#393A34\"> 200</span><span style=\"color:#B07D48\">px</span><span style=\"color:#393A34\">; </span><span style=\"color:#A0ADA0\">/* 左右栏宽度 */</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">.center, .left, .right </span><span style=\"color:#999999\">{</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  float</span><span style=\"color:#393A34\">: </span><span style=\"color:#B07D48\">left</span><span style=\"color:#393A34\">;</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  min</span><span style=\"color:#AB5959\">-</span><span style=\"color:#B07D48\">height</span><span style=\"color:#393A34\">: 200</span><span style=\"color:#B07D48\">px</span><span style=\"color:#393A34\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">.center </span><span style=\"color:#999999\">{</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  width</span><span style=\"color:#393A34\">: </span><span style=\"color:#2F798A\">100</span><span style=\"color:#AB5959\">%</span><span style=\"color:#393A34\">;</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  background</span><span style=\"color:#393A34\">: #</span><span style=\"color:#B07D48\">f00</span><span style=\"color:#393A34\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">.left </span><span style=\"color:#999999\">{</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  width</span><span style=\"color:#393A34\">: 200</span><span style=\"color:#B07D48\">px</span><span style=\"color:#393A34\">;</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  margin</span><span style=\"color:#AB5959\">-</span><span style=\"color:#B07D48\">left</span><span style=\"color:#393A34\">: </span><span style=\"color:#AB5959\">-</span><span style=\"color:#2F798A\">100</span><span style=\"color:#AB5959\">%</span><span style=\"color:#393A34\">;    </span><span style=\"color:#A0ADA0\">/* 拉到左侧 */</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  position</span><span style=\"color:#393A34\">: </span><span style=\"color:#B07D48\">relative</span><span style=\"color:#393A34\">;</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  left</span><span style=\"color:#393A34\">: </span><span style=\"color:#AB5959\">-</span><span style=\"color:#393A34\">200</span><span style=\"color:#B07D48\">px</span><span style=\"color:#393A34\">;          </span><span style=\"color:#A0ADA0\">/* 微调对齐 */</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  background</span><span style=\"color:#393A34\">: #0</span><span style=\"color:#B07D48\">f0</span><span style=\"color:#393A34\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">.right </span><span style=\"color:#999999\">{</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  width</span><span style=\"color:#393A34\">: 200</span><span style=\"color:#B07D48\">px</span><span style=\"color:#393A34\">;</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  margin</span><span style=\"color:#AB5959\">-</span><span style=\"color:#B07D48\">left</span><span style=\"color:#393A34\">: </span><span style=\"color:#AB5959\">-</span><span style=\"color:#393A34\">200</span><span style=\"color:#B07D48\">px</span><span style=\"color:#393A34\">;   </span><span style=\"color:#A0ADA0\">/* 拉到右侧 */</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  position</span><span style=\"color:#393A34\">: </span><span style=\"color:#B07D48\">relative</span><span style=\"color:#393A34\">;</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  right</span><span style=\"color:#393A34\">: </span><span style=\"color:#AB5959\">-</span><span style=\"color:#393A34\">200</span><span style=\"color:#B07D48\">px</span><span style=\"color:#393A34\">;         </span><span style=\"color:#A0ADA0\">/* 微调对齐 */</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  background</span><span style=\"color:#393A34\">: #00</span><span style=\"color:#B07D48\">f</span><span style=\"color:#393A34\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">style</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>2. 双飞翼布局（Double Wings Layout）</strong></p>\n<ul>\n<li><strong>改进点</strong>：避免圣杯布局的定位依赖，解决内容遮挡问题。</li>\n<li><strong>实现步骤</strong>：\n<ol>\n<li><strong>结构</strong>：中间栏外层增加一个容器（<code>&lt;div class=&quot;main&quot;&gt;</code>），内部嵌套内容层（<code>&lt;div class=&quot;content&quot;&gt;</code>）。</li>\n<li><strong>浮动与占位</strong>：三栏左浮动，中间栏容器宽度<code>100%</code>。</li>\n<li><strong>内容区腾挪</strong>：内容层通过<code>margin</code>为左右栏留出空间（值等于左右栏宽度）。</li>\n<li><strong>负边距定位</strong>：左右栏直接用<code>margin-left</code>负值拉到对应位置，无需相对定位。</li>\n</ol>\n</li>\n<li><strong>优点</strong>：稳定性更好，无需复杂定位。</li>\n<li><strong>缺点</strong>：多一层DOM结构。</li>\n</ul>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#B07D48\"> class</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">main</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">></span><span style=\"color:#393A34\">       &#x3C;!-- 外层容器 --></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#B07D48\"> class</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">content</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">>&#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span><span style=\"color:#393A34\"> &#x3C;!-- 内容区 --></span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#B07D48\"> class</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">left</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">>&#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#B07D48\"> class</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">right</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">>&#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">style</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#393A34\">.main, .left, .right </span><span style=\"color:#999999\">{</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  float</span><span style=\"color:#393A34\">: </span><span style=\"color:#B07D48\">left</span><span style=\"color:#393A34\">;</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  min</span><span style=\"color:#AB5959\">-</span><span style=\"color:#B07D48\">height</span><span style=\"color:#393A34\">: 200</span><span style=\"color:#B07D48\">px</span><span style=\"color:#393A34\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">.main </span><span style=\"color:#999999\">{</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  width</span><span style=\"color:#393A34\">: </span><span style=\"color:#2F798A\">100</span><span style=\"color:#AB5959\">%</span><span style=\"color:#393A34\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">.content </span><span style=\"color:#999999\">{</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  margin</span><span style=\"color:#393A34\">: </span><span style=\"color:#2F798A\">0</span><span style=\"color:#393A34\"> 200</span><span style=\"color:#B07D48\">px</span><span style=\"color:#393A34\">;  </span><span style=\"color:#A0ADA0\">/* 为左右栏腾出空间 */</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  background</span><span style=\"color:#393A34\">: #</span><span style=\"color:#B07D48\">f00</span><span style=\"color:#393A34\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">.left </span><span style=\"color:#999999\">{</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  width</span><span style=\"color:#393A34\">: 200</span><span style=\"color:#B07D48\">px</span><span style=\"color:#393A34\">;</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  margin</span><span style=\"color:#AB5959\">-</span><span style=\"color:#B07D48\">left</span><span style=\"color:#393A34\">: </span><span style=\"color:#AB5959\">-</span><span style=\"color:#2F798A\">100</span><span style=\"color:#AB5959\">%</span><span style=\"color:#393A34\">;  </span><span style=\"color:#A0ADA0\">/* 直接拉到左侧 */</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  background</span><span style=\"color:#393A34\">: #0</span><span style=\"color:#B07D48\">f0</span><span style=\"color:#393A34\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">.right </span><span style=\"color:#999999\">{</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  width</span><span style=\"color:#393A34\">: 200</span><span style=\"color:#B07D48\">px</span><span style=\"color:#393A34\">;</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  margin</span><span style=\"color:#AB5959\">-</span><span style=\"color:#B07D48\">left</span><span style=\"color:#393A34\">: </span><span style=\"color:#AB5959\">-</span><span style=\"color:#393A34\">200</span><span style=\"color:#B07D48\">px</span><span style=\"color:#393A34\">; </span><span style=\"color:#A0ADA0\">/* 直接拉到右侧 */</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  background</span><span style=\"color:#393A34\">: #00</span><span style=\"color:#B07D48\">f</span><span style=\"color:#393A34\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">style</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>关键区别</strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">特性</th>\n<th style=\"text-align:left\">圣杯布局</th>\n<th style=\"text-align:left\">双飞翼布局</th>\n</tr>\n</thead>\n</table>\n","answer":""},{"title":"Flex 布局了解多少？","description":"<p>Flex 布局是 CSS3 的弹性盒子模型，通过<strong>容器与项目的属性组合</strong>，高效实现一维空间内的动态排列、对齐与空间分配，简化复杂布局。</p>\n<p><strong>核心概念与属性</strong></p>\n<p><strong>1. 容器（Flex Container）属性</strong></p>\n<ul>\n<li><strong><code>display: flex | inline-flex</code></strong>：启用 Flex 布局。</li>\n<li><strong><code>flex-direction</code></strong>：主轴方向（<code>row</code> 水平 / <code>column</code> 垂直）。</li>\n<li><strong><code>justify-content</code></strong>：主轴对齐方式（<code>center</code>、<code>space-between</code>、<code>space-around</code>）。</li>\n<li><strong><code>align-items</code></strong>：交叉轴单行对齐（<code>stretch</code>、<code>flex-start</code>、<code>center</code>）。</li>\n<li><strong><code>flex-wrap</code></strong>：是否换行（<code>nowrap</code>、<code>wrap</code>）。</li>\n<li><strong><code>align-content</code></strong>：多行对齐方式（需启用 <code>flex-wrap</code>）。</li>\n</ul>\n<p><strong>2. 项目（Flex Item）属性</strong></p>\n<ul>\n<li><strong><code>order</code></strong>：项目排序（数值越小越靠前）。</li>\n<li><strong><code>flex-grow</code></strong>：放大比例（默认0不放大）。</li>\n<li><strong><code>flex-shrink</code></strong>：缩小比例（默认1可缩小）。</li>\n<li><strong><code>flex-basis</code></strong>：初始尺寸（如 <code>200px</code> 或 <code>auto</code>）。</li>\n<li><strong><code>flex</code></strong>：简写（<code>flex-grow</code> <code>flex-shrink</code> <code>flex-basis</code>）。</li>\n<li><strong><code>align-self</code></strong>：覆盖容器的 <code>align-items</code> 对齐方式。</li>\n</ul>\n<p><strong>典型应用场景</strong></p>\n<ol>\n<li><strong>水平/垂直居中</strong>：<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">container</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  display</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> flex</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  justify-content</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> center</span><span style=\"color:#999999\">;</span><span style=\"color:#A0ADA0\">  /* 水平居中 */</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  align-items</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> center</span><span style=\"color:#999999\">;</span><span style=\"color:#A0ADA0\">      /* 垂直居中 */</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li><strong>等分空间导航栏</strong>：<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">nav-item</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  flex</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 1</span><span style=\"color:#999999\">;</span><span style=\"color:#A0ADA0\">  /* 每个项目等分剩余空间 */</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li><strong>响应式换行布局</strong>：<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">container</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  flex-wrap</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> wrap</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  gap</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 10</span><span style=\"color:#AB5959\">px</span><span style=\"color:#999999\">;</span><span style=\"color:#A0ADA0\">  /* 项目间距 */</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n</ol>\n<p><strong>Flex 布局 vs Grid 布局</strong></p>\n<table>\n<thead>\n<tr>\n<th><strong>维度</strong></th>\n<th><strong>Flex（一维）</strong></th>\n<th><strong>Grid（二维）</strong></th>\n</tr>\n</thead>\n</table>\n","answer":""},{"title":"flex:1 是什么意思？","description":"","answer":""},{"title":"flex:auto 是什么意思?","description":"","answer":""},{"title":"Grid 布局了解多少？","description":"<p>Grid 布局是 CSS 的<strong>二维布局系统</strong>，通过行与列的网格结构精准控制元素位置与空间分配，适合复杂页面整体架构与响应式设计。</p>\n<p><strong>核心概念与属性</strong></p>\n<p><strong>1. 容器（Grid Container）属性</strong></p>\n<ul>\n<li><strong><code>display: grid | inline-grid</code></strong>：启用网格布局。</li>\n<li><strong><code>grid-template-columns</code></strong> / <strong><code>grid-template-rows</code></strong>：显式定义列宽与行高（支持 <code>fr</code>、<code>minmax()</code>、<code>repeat()</code>）。<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">container</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  grid-template-columns</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 1</span><span style=\"color:#AB5959\">fr</span><span style=\"color:#2F798A\"> 200</span><span style=\"color:#AB5959\">px</span><span style=\"color:#998418\"> repeat</span><span style=\"color:#999999\">(</span><span style=\"color:#2F798A\">3</span><span style=\"color:#999999\">,</span><span style=\"color:#2F798A\"> 100</span><span style=\"color:#AB5959\">px</span><span style=\"color:#999999\">);</span><span style=\"color:#A0ADA0\"> /* 三列：弹性、固定、重复 */</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  grid-template-rows</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> auto</span><span style=\"color:#998418\"> minmax</span><span style=\"color:#999999\">(</span><span style=\"color:#2F798A\">50</span><span style=\"color:#AB5959\">px</span><span style=\"color:#999999\">,</span><span style=\"color:#2F798A\"> 1</span><span style=\"color:#AB5959\">fr</span><span style=\"color:#999999\">);</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li><strong><code>gap</code></strong>：网格间距（替代 <code>grid-gap</code>，如 <code>gap: 20px 10px;</code>）。</li>\n<li><strong><code>grid-template-areas</code></strong>：命名网格区域，直观管理布局。<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">container</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  grid-template-areas</span><span style=\"color:#999999\">:</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#B5695977\">    \"</span><span style=\"color:#B56959\">header header</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#B5695977\">    \"</span><span style=\"color:#B56959\">sidebar main</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#B5695977\">    \"</span><span style=\"color:#B56959\">footer footer</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n</ul>\n<p><strong>2. 项目（Grid Item）属性</strong></p>\n<ul>\n<li>\n<p><strong><code>grid-column</code></strong> / <strong><code>grid-row</code></strong>：指定项目跨越的列或行（基于网格线或 <code>span</code>）。</p>\n<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">item</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  grid-column</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 1</span><span style=\"color:#393A34\"> / </span><span style=\"color:#2F798A\">3</span><span style=\"color:#999999\">;</span><span style=\"color:#A0ADA0\">  /* 从第1列线到第3列线 */</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  grid-row</span><span style=\"color:#999999\">:</span><span style=\"color:#393A34\"> span </span><span style=\"color:#2F798A\">2</span><span style=\"color:#999999\">;</span><span style=\"color:#A0ADA0\">    /* 跨越2行 */</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong><code>grid-area</code></strong>：直接关联命名的区域（需与容器 <code>grid-template-areas</code> 配合）。</p>\n<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">header</span><span style=\"color:#999999\"> {</span><span style=\"color:#998418\"> grid-area</span><span style=\"color:#999999\">:</span><span style=\"color:#393A34\"> header</span><span style=\"color:#999999\">;</span><span style=\"color:#999999\"> }</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong><code>justify-self</code></strong> / <strong><code>align-self</code></strong>：单个项目的对齐方式。</p>\n</li>\n</ul>\n<p><strong>典型应用场景</strong></p>\n<ol>\n<li><strong>经典页面布局</strong>：<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">container</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  display</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> grid</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  grid-template-columns</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 200</span><span style=\"color:#AB5959\">px</span><span style=\"color:#2F798A\"> 1</span><span style=\"color:#AB5959\">fr</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  grid-template-areas</span><span style=\"color:#999999\">:</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#B5695977\">    \"</span><span style=\"color:#B56959\">header header</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#B5695977\">    \"</span><span style=\"color:#B56959\">sidebar main</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#B5695977\">    \"</span><span style=\"color:#B56959\">footer footer</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  height</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 100</span><span style=\"color:#AB5959\">vh</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li><strong>响应式网格</strong>：<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">container</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  grid-template-columns</span><span style=\"color:#999999\">:</span><span style=\"color:#998418\"> repeat</span><span style=\"color:#999999\">(</span><span style=\"color:#A65E2B\">auto-fit</span><span style=\"color:#999999\">,</span><span style=\"color:#998418\"> minmax</span><span style=\"color:#999999\">(</span><span style=\"color:#2F798A\">250</span><span style=\"color:#AB5959\">px</span><span style=\"color:#999999\">,</span><span style=\"color:#2F798A\"> 1</span><span style=\"color:#AB5959\">fr</span><span style=\"color:#999999\">));</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  /* 自动填充，最小250px，空间不足则换行 */</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li><strong>等高列布局</strong>：<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">container</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  grid-auto-rows</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 1</span><span style=\"color:#AB5959\">fr</span><span style=\"color:#999999\">;</span><span style=\"color:#A0ADA0\"> /* 隐式行等高 */</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n</ol>\n<p><strong>Grid vs Flex</strong></p>\n<table>\n<thead>\n<tr>\n<th><strong>维度</strong></th>\n<th><strong>Grid（二维）</strong></th>\n<th><strong>Flex（一维）</strong></th>\n</tr>\n</thead>\n</table>\n","answer":""},{"title":" 什么是外边距重叠？重叠的结果是什么？","description":"","answer":"<p>外边距重叠（Margin Collapse）指相邻块级元素的垂直外边距合并为一个，规则如下：</p>\n<ol>\n<li><strong>兄弟元素</strong>：上下外边距取较大值（如 <code>margin-bottom: 20px</code> 和 <code>margin-top: 30px</code> → 间距 30px）；</li>\n<li><strong>父子元素</strong>：首个/末个子元素的边距与父元素合并（父无 <code>border/padding</code> 时触发）；</li>\n<li><strong>正负值</strong>：相加（如 <code>20px</code> 和 <code>-15px</code> → <code>5px</code>）；同为负时取更小值（绝对值更大）。</li>\n</ol>\n<p><strong>结果</strong>：实际间距小于预期，需通过触发 BFC（如父元素加 <code>overflow: hidden</code>）或添加 <code>padding/border</code> 避免。</p>\n"},{"title":"什么是 CSS 的 z-index 属性，有什么作用？","description":"","answer":"<p>z-index 控制定位元素在<strong>垂直层叠顺序</strong>，数值越大越靠上，解决元素重叠时的显示优先级问题。</p>\n<p><strong>具体作用与规则</strong>：</p>\n<ol>\n<li>\n<p><strong>层叠顺序</strong>：</p>\n<ul>\n<li>默认情况下，元素按HTML顺序层叠（后渲染的覆盖先前的），<code>z-index</code> 可调整这一顺序。</li>\n</ul>\n</li>\n<li>\n<p><strong>生效条件</strong>：</p>\n<ul>\n<li>仅对 <strong>定位元素</strong>（<code>position</code> 非 <code>static</code>）有效，如 <code>relative</code>、<code>absolute</code>、<code>fixed</code>。</li>\n</ul>\n</li>\n<li>\n<p><strong>数值范围</strong>：</p>\n<ul>\n<li>支持整数（正、负、零），数值越大层级越高，例如 <code>z-index: 9999</code>。</li>\n</ul>\n</li>\n<li>\n<p><strong>堆叠上下文（Stacking Context）</strong>：</p>\n<ul>\n<li><strong>父级限制</strong>：子元素的 <code>z-index</code> 只在父堆叠上下文中比较，无法跨越不同上下文；</li>\n<li><strong>上下文创建条件</strong>：\n<ul>\n<li>根元素（HTML）</li>\n<li><code>position: absolute/relative</code> + <code>z-index</code> 非 <code>auto</code></li>\n<li><code>opacity &lt; 1</code></li>\n<li><code>transform</code>、<code>filter</code>、<code>will-change</code> 等属性</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<p><strong>示例代码</strong>：</p>\n<pre><code class=\"language-html\"><div class=\"language-html \"><span class=\"lang\">html</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#B07D48\"> class</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">box1</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B07D48\"> style</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">position: relative; z-index: 2;</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">></span><span style=\"color:#393A34\">Box 1</span><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#B07D48\"> class</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">box2</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B07D48\"> style</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">position: absolute; z-index: 1;</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">></span><span style=\"color:#393A34\">Box 2</span><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">&#x3C;!-- Box1 覆盖 Box2 --></span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>常见问题与解决方案</strong>：</p>\n<ul>\n<li><strong>失效排查</strong>：\n<ul>\n<li>确认元素是否设置定位；</li>\n<li>检查父元素是否创建堆叠上下文（如 <code>opacity: 0.99</code>），导致子元素无法突破层级。</li>\n</ul>\n</li>\n<li><strong>负值应用</strong>：<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">background</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  position</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> relative</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  z-index</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> -1</span><span style=\"color:#999999\">;</span><span style=\"color:#A0ADA0\"> /* 作为背景层 */</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n</ul>\n<p><strong>最佳实践</strong>：</p>\n<ul>\n<li>避免滥用高数值（如9999），合理规划层级；</li>\n<li>使用CSS变量管理层级，如 <code>--z-modal: 100;</code>。</li>\n</ul>\n<p><strong>总结</strong>：z-index 是管理元素层叠的核心属性，理解堆叠上下文机制能有效解决复杂布局中的覆盖问题。</p>\n"},{"title":"transition 和 animation 的区别","description":"","answer":""},{"title":"px/em/rem/vh/vw/vmax/vmin 这些单位有什么区别？","description":"","answer":"<ul>\n<li><strong>px</strong>：绝对单位，固定像素值，不随页面缩放改变；</li>\n<li><strong>em</strong>：相对单位，基于<strong>父元素字体大小</strong>（如父 <code>font-size: 16px</code> → <code>1em = 16px</code>），多层嵌套会累积计算；</li>\n<li><strong>rem</strong>：相对单位，基于<strong>根元素（html）字体大小</strong>，始终全局统一，避免层级影响。</li>\n<li><strong>vh/vw</strong>（视口高度/宽度百分比），<code>1vh</code> = 视口高度的 1%（Viewport Height），<code>1vw</code> = 视口宽度的 1%（Viewport Width）</li>\n<li><strong>vmax/vmin</strong>（视口最大/最小边百分比），<code>1vmax</code> = 视口 <strong>宽度和高度中较大值</strong> 的 1%，<code>1vmin</code> = 视口 <strong>宽度和高度中较小值</strong> 的 1%，用于横屏/竖屏自适应</li>\n</ul>\n"},{"title":"简述伪类和伪元素","description":"","answer":"<p>伪类（如 <code>:hover</code>）用于选择元素的<strong>特定状态</strong>（如悬停），而伪元素（如 <code>::before</code>）用于创建<strong>虚拟元素</strong>（如插入内容）。\n<strong>区别</strong>：</p>\n<ol>\n<li><strong>语法</strong>：伪类单冒号（<code>:active</code>），伪元素双冒号（<code>::before</code>，兼容写法可单冒号）；</li>\n<li><strong>作用</strong>：伪类描述状态，伪元素生成新内容；</li>\n<li><strong>数量</strong>：一个选择器可含多个伪类，但只能有一个伪元素。</li>\n</ol>\n"},{"title":"用纯 CSS 创建一个三角形","description":"","answer":"<p>通过设置元素的宽高为 <code>0</code>，利用 <strong>边框透明</strong> 特性生成三角形。</p>\n<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">triangle</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  width</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  height</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  border</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 50</span><span style=\"color:#AB5959\">px</span><span style=\"color:#A65E2B\"> solid</span><span style=\"color:#A65E2B\"> transparent</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  border-top-color</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> red</span><span style=\"color:#999999\">;</span><span style=\"color:#A0ADA0\"> /* 方向：向下 */</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\"> </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n"},{"title":"CSS3 中 Filter 可以做什么？","description":"","answer":"<p>CSS3 的 <code>filter</code> 属性可为元素添加<strong>视觉效果滤镜</strong>，常用函数包括：</p>\n<ul>\n<li><strong>模糊</strong>：<code>blur(5px)</code>；</li>\n<li><strong>亮度/对比度</strong>：<code>brightness(1.2)</code>、<code>contrast(200%)</code>；</li>\n<li><strong>阴影</strong>：<code>drop-shadow(2px 2px 5px black)</code>（比 <code>box-shadow</code> 更自然）；</li>\n<li><strong>颜色处理</strong>：<code>grayscale(100%)</code>（灰度）、<code>hue-rotate(90deg)</code>（色相旋转）、<code>sepia(50%)</code>（复古色）；</li>\n<li><strong>透明度</strong>：<code>opacity(0.5)</code>；</li>\n<li><strong>反色</strong>：<code>invert(100%)</code>。</li>\n</ul>\n"},{"title":"CSS 实现自适应正方形、等宽高比矩形？","description":"","answer":"<p>实现自适应正方形或等宽高比矩形：</p>\n<ol>\n<li>\n<p><strong>正方形</strong>：</p>\n<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">square</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  width</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 50</span><span style=\"color:#AB5959\">%</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  padding-bottom</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 50</span><span style=\"color:#AB5959\">%</span><span style=\"color:#999999\">;</span><span style=\"color:#A0ADA0\"> /* 高度 = 宽度 */</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  position</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> relative</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">content</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  position</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> absolute</span><span style=\"color:#999999\">;</span><span style=\"color:#A0ADA0\"> /* 内容需绝对定位 */</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  width</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 100</span><span style=\"color:#AB5959\">%</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  height</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 100</span><span style=\"color:#AB5959\">%</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>等宽高比矩形（如16:9）</strong>：</p>\n<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">rectangle</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  width</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 100</span><span style=\"color:#AB5959\">%</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  padding-bottom</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 56.25</span><span style=\"color:#AB5959\">%</span><span style=\"color:#999999\">;</span><span style=\"color:#A0ADA0\"> /* 9/16=56.25% */</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>现代方案</strong>：</p>\n<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">box</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  aspect-ratio</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 1</span><span style=\"color:#393A34\">/</span><span style=\"color:#2F798A\">1</span><span style=\"color:#999999\">;</span><span style=\"color:#A0ADA0\"> /* 正方形 */</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  /* 或 aspect-ratio: 16/9; */</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n</ol>\n<p><strong>原理</strong>：利用 <code>padding</code> 百分比基于宽度的特性，或直接使用 <code>aspect-ratio</code>（兼容性需注意）。</p>\n"},{"title":"CSS 如何实现文本溢出截断省略？","description":"","answer":"<ul>\n<li>单行</li>\n</ul>\n<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">ellipsis</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  white-space</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> nowrap</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  overflow</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> hidden</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  text-overflow</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> ellipsis</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<ul>\n<li>多行</li>\n</ul>\n<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">ellipsis-multiline</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  display</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> -webkit-box</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  -webkit-box-orient</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> vertical</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  -webkit-line-clamp</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 3</span><span style=\"color:#999999\">;</span><span style=\"color:#A0ADA0\"> /* 设置显示的行数 */</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  overflow</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> hidden</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  text-overflow</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> ellipsis</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n"},{"title":"谈谈你对媒体查询的认识？","description":"","answer":"<p>媒体查询（<code>@media</code>）用于根据设备特性（如屏幕宽度、分辨率）应用不同CSS样式，实现响应式设计。</p>\n<p><strong>常见用法</strong>：</p>\n<ol>\n<li>\n<p><strong>视口适配</strong>：</p>\n<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">@</span><span style=\"color:#1E754F\">media</span><span style=\"color:#999999\"> (</span><span style=\"color:#998418\">max-width</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 768</span><span style=\"color:#AB5959\">px</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  /* 移动端样式 */</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>设备类型</strong>：</p>\n<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">@</span><span style=\"color:#1E754F\">media</span><span style=\"color:#A65E2B\"> print</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\"> ... }  </span><span style=\"color:#A0ADA0\">/* 打印样式 */</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>组合条件</strong>：</p>\n<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">@</span><span style=\"color:#1E754F\">media</span><span style=\"color:#999999\"> (</span><span style=\"color:#998418\">min-width</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 992</span><span style=\"color:#AB5959\">px</span><span style=\"color:#999999\">)</span><span style=\"color:#AB5959\"> and</span><span style=\"color:#999999\"> (</span><span style=\"color:#998418\">orientation</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> landscape</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\"> ... }  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n</ol>\n<p><strong>核心作用</strong>：通过断点（Breakpoint）动态调整布局、字体大小或隐藏元素，提升多端适配体验。</p>\n"},{"title":"CSS 中三栏布局的实现方案有哪些？","description":"","answer":"<p>三栏布局（两侧固定，中间自适应）常见实现方案：</p>\n<ol>\n<li>\n<p><strong>浮动布局</strong>：</p>\n<ul>\n<li>左右浮动定宽，中间通过 <code>margin</code> 留出空间，需清除浮动。</li>\n</ul>\n</li>\n<li>\n<p><strong>Flex 布局</strong>：</p>\n<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">container</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  display</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> flex</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">left</span><span style=\"color:#999999\">,</span><span style=\"color:#999999\"> .</span><span style=\"color:#B07D48\">right</span><span style=\"color:#999999\"> {</span><span style=\"color:#998418\"> width</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 200</span><span style=\"color:#AB5959\">px</span><span style=\"color:#999999\">;</span><span style=\"color:#999999\"> }</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">middle</span><span style=\"color:#999999\"> {</span><span style=\"color:#998418\"> flex</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 1</span><span style=\"color:#999999\">;</span><span style=\"color:#999999\"> }</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>Grid 布局</strong>：</p>\n<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">container</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  display</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> grid</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  grid-template-columns</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 200</span><span style=\"color:#AB5959\">px</span><span style=\"color:#2F798A\"> 1</span><span style=\"color:#AB5959\">fr</span><span style=\"color:#2F798A\"> 200</span><span style=\"color:#AB5959\">px</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>绝对定位</strong>：左右绝对定位，中间用 <code>margin</code> 占位。</p>\n</li>\n<li>\n<p><strong>圣杯/双飞翼布局</strong>：</p>\n<ul>\n<li>中间优先渲染，利用浮动、负边距和相对定位实现（经典但复杂）。</li>\n</ul>\n</li>\n</ol>\n<p><strong>特点</strong>：Flex/Grid 简洁高效，浮动兼容性好，传统方案适合深入理解布局原理。</p>\n"},{"title":"简述 CSS3 实现动画的方式？","description":"","answer":"<p>CSS3 实现动画的两种主要方式：</p>\n<ol>\n<li>\n<p><strong>过渡动画（Transition）</strong>：</p>\n<ul>\n<li>\n<p>通过 <code>transition</code> 属性平滑改变元素状态（如悬停）。</p>\n</li>\n<li>\n<p>示例：</p>\n<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">box</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  transition</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> all</span><span style=\"color:#2F798A\"> 0.3</span><span style=\"color:#AB5959\">s</span><span style=\"color:#A65E2B\"> ease-in</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">box</span><span style=\"color:#999999\">:</span><span style=\"color:#B07D48\">hover</span><span style=\"color:#999999\"> {</span><span style=\"color:#998418\"> width</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 200</span><span style=\"color:#AB5959\">px</span><span style=\"color:#999999\">;</span><span style=\"color:#999999\"> }</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>关键帧动画（Animation）</strong>：</p>\n<ul>\n<li>\n<p>使用 <code>@keyframes</code> 定义动画序列，通过 <code>animation</code> 属性应用。</p>\n</li>\n<li>\n<p>示例：</p>\n<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">@</span><span style=\"color:#1E754F\">keyframes</span><span style=\"color:#B07D48\"> slide</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#59873A\">  0%</span><span style=\"color:#999999\"> {</span><span style=\"color:#998418\"> transform</span><span style=\"color:#999999\">:</span><span style=\"color:#998418\"> translateX</span><span style=\"color:#999999\">(</span><span style=\"color:#2F798A\">0</span><span style=\"color:#999999\">);</span><span style=\"color:#999999\"> }</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#59873A\">  100%</span><span style=\"color:#999999\"> {</span><span style=\"color:#998418\"> transform</span><span style=\"color:#999999\">:</span><span style=\"color:#998418\"> translateX</span><span style=\"color:#999999\">(</span><span style=\"color:#2F798A\">100</span><span style=\"color:#AB5959\">px</span><span style=\"color:#999999\">);</span><span style=\"color:#999999\"> }</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">box</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  animation</span><span style=\"color:#999999\">:</span><span style=\"color:#393A34\"> slide </span><span style=\"color:#2F798A\">2</span><span style=\"color:#AB5959\">s</span><span style=\"color:#A65E2B\"> infinite</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n</ul>\n</li>\n</ol>\n<p><strong>区别</strong>：</p>\n<ul>\n<li><strong>Transition</strong>：需触发（如hover），单次状态变化；</li>\n<li><strong>Animation</strong>：自动执行，支持多阶段、循环等复杂控制。</li>\n</ul>\n"},{"title":"如何开启 GPU 加速？","description":"","answer":"<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">element</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  transform</span><span style=\"color:#999999\">:</span><span style=\"color:#998418\"> translateZ</span><span style=\"color:#999999\">(</span><span style=\"color:#2F798A\">0</span><span style=\"color:#999999\">);</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  /* 或 */</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  will-change</span><span style=\"color:#999999\">:</span><span style=\"color:#393A34\"> transform</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n"},{"title":"简述深入理解设备像素、CSS 像素、设备独立像素、DPR、PPI 之间的区别与适配⽅案 ？","description":"","answer":"<p>这些概念关联<strong>屏幕适配与显示精度</strong>，核心区别与适配方案如下：</p>\n<ol>\n<li><strong>设备像素（物理像素）</strong>：屏幕实际发光点，不可变（如 iPhone 13 的 1170×2532）。</li>\n<li><strong>CSS像素（逻辑像素）</strong>：代码中使用的抽象单位（如 <code>width: 100px</code>），通过 <code>viewport</code> 缩放与设备像素映射。</li>\n<li><strong>设备独立像素（DP/DIP）</strong>：与屏幕密度无关的虚拟单位（如 1DP ≈ 1/160英寸），系统级适配基准。</li>\n<li><strong>DPR（设备像素比）</strong>：<code>设备像素 / 设备独立像素</code>（如 DPR=2 时，1CSS 像素用 4 设备像素渲染）。</li>\n<li><strong>PPI（像素密度）</strong>：每英寸物理像素数，值越高越清晰（如 PPI=326 为 Retina 屏）。</li>\n</ol>\n<p><strong>适配方案</strong>：</p>\n<ul>\n<li><strong>Viewport 设置</strong>：<code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width&quot;&gt;</code> 使 CSS 像素与设备独立像素对齐；</li>\n<li><strong>响应式单位</strong>：用 <code>rem</code>、<code>vw</code> 替代 <code>px</code>，结合媒体查询适配不同尺寸；</li>\n<li><strong>高倍图适配</strong>：根据 DPR 切换 2x/3x 图片（如 <code>srcset</code> 属性）；</li>\n<li><strong>缩放处理</strong>：Canvas 等需根据 DPR 缩放避免模糊（如 <code>ctx.scale(DPR, DPR)</code>）。</li>\n</ul>\n"},{"title":"如何实现⼩于12px的字体效果？","description":"","answer":"<p>实现小于 <code>12px</code> 的字体效果可通过以下方法：</p>\n<ol>\n<li>\n<p><strong>缩放法</strong>（推荐）：</p>\n<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">small-text</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  font-size</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 12</span><span style=\"color:#AB5959\">px</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  transform</span><span style=\"color:#999999\">:</span><span style=\"color:#998418\"> scale</span><span style=\"color:#999999\">(</span><span style=\"color:#2F798A\">0.8</span><span style=\"color:#999999\">);</span><span style=\"color:#A0ADA0\">  /* 实际显示 9.6px */</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  display</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> inline-block</span><span style=\"color:#999999\">;</span><span style=\"color:#A0ADA0\">    /* 避免缩放影响布局 */</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>禁用浏览器限制</strong>（部分生效）：</p>\n<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#1E754F\">body</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  -webkit-text-size-adjust</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> none</span><span style=\"color:#999999\">;</span><span style=\"color:#A0ADA0\"> /* Chrome/Safari */</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>SVG 文本</strong>（绕过限制）：</p>\n<pre><code class=\"language-html\"><div class=\"language-html \"><span class=\"lang\">html</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">svg</span><span style=\"color:#B07D48\"> viewBox</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">0 0 100 20</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">></span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;</span><span style=\"color:#1E754F\">text</span><span style=\"color:#B07D48\"> x</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">0</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B07D48\"> y</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">15</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B07D48\"> font-size</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">10</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">></span><span style=\"color:#393A34\">10px文本</span><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">text</span><span style=\"color:#999999\">></span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">svg</span><span style=\"color:#999999\">></span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n</ol>\n<p><strong>注意事项</strong>：</p>\n<ul>\n<li><strong>兼容性</strong>：<code>transform</code> 兼容主流浏览器，<code>text-size-adjust</code> 需前缀；</li>\n<li><strong>副作用</strong>：缩放可能导致字体模糊，需微调位置；</li>\n<li><strong>可访问性</strong>：过小字体影响阅读，需权衡设计需求。</li>\n</ul>\n"},{"title":"说说计算属性 calc 的作用","description":"","answer":"<p><code>calc()</code> 用于动态计算 CSS 属性值，支持<strong>混合单位</strong>（如 <code>%</code>、<code>px</code>、<code>vw</code>），常用于响应式布局。</p>\n<p><strong>示例</strong>：</p>\n<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">box</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  width</span><span style=\"color:#999999\">:</span><span style=\"color:#998418\"> calc</span><span style=\"color:#999999\">(</span><span style=\"color:#2F798A\">100</span><span style=\"color:#AB5959\">%</span><span style=\"color:#AB5959\"> -</span><span style=\"color:#2F798A\"> 80</span><span style=\"color:#AB5959\">px</span><span style=\"color:#999999\">);</span><span style=\"color:#A0ADA0\"> /* 宽度自适应，固定间距 */</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  height</span><span style=\"color:#999999\">:</span><span style=\"color:#998418\"> calc</span><span style=\"color:#999999\">(</span><span style=\"color:#2F798A\">100</span><span style=\"color:#AB5959\">vh</span><span style=\"color:#AB5959\"> -</span><span style=\"color:#2F798A\"> 20</span><span style=\"color:#AB5959\">px</span><span style=\"color:#AB5959\"> -</span><span style=\"color:#2F798A\"> 5</span><span style=\"color:#AB5959\">rem</span><span style=\"color:#999999\">);</span><span style=\"color:#A0ADA0\"> /* 视口高度减多单位值 */</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>优势</strong>：</p>\n<ul>\n<li>实现复杂尺寸计算（如等分剩余空间、动态调整）；</li>\n<li>替代传统 JS 计算，提升代码可维护性；</li>\n<li>支持加减乘除（注意运算符间需加空格）。</li>\n</ul>\n"},{"title":"如何避免全局样式污染？","description":"","answer":"<p>避免全局样式污染的核心方法是<strong>样式隔离</strong>，常用方案：</p>\n<ol>\n<li>\n<p><strong>CSS Modules</strong>：</p>\n<ul>\n<li>通过编译工具（如Webpack）将类名哈希化（<code>.button_1x2y3z</code>），确保唯一性。</li>\n</ul>\n</li>\n<li>\n<p><strong>Scoped CSS</strong>（Vue/框架特性）：</p>\n<pre><code class=\"language-vue\"><div class=\"language-vue \"><span class=\"lang\">vue</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">style</span><span style=\"color:#B07D48\"> scoped</span><span style=\"color:#999999\">></span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">  .</span><span style=\"color:#B07D48\">title</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\"> ... </span><span style=\"color:#999999\">}</span><span style=\"color:#A0ADA0\"> /* 自动添加 data-v-xxx 属性选择器 */</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">style</span><span style=\"color:#999999\">></span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>BEM 命名规范</strong>：</p>\n<ul>\n<li>通过 <code>.block__element--modifier</code> 命名规则约束作用域，减少冲突。</li>\n</ul>\n</li>\n<li>\n<p><strong>CSS-in-JS</strong>（如 styled-components）：</p>\n<ul>\n<li>将样式与组件绑定，生成唯一类名，运行时动态注入。</li>\n</ul>\n</li>\n<li>\n<p><strong>Shadow DOM</strong>（Web Components）：</p>\n<ul>\n<li>彻底隔离组件内外的样式（如 <code>&lt;custom-element&gt;</code> 内部样式不影响外部）。</li>\n</ul>\n</li>\n</ol>\n"},{"title":"简述 Sass 和 Less","description":"","answer":"<p><strong>Sass 和 Less 是两种主流的 CSS 预处理器</strong>，通过扩展 CSS 功能提升开发效率，以下是它们的核心对比：</p>\n<p><strong>1. 核心功能</strong></p>\n<ul>\n<li><strong>共同点</strong>：\n<ul>\n<li><strong>变量</strong>：定义可复用的值（如颜色、尺寸）。</li>\n<li><strong>嵌套语法</strong>：层级化组织 CSS 规则。</li>\n<li><strong>混合宏（Mixins）</strong>：封装重复代码块。</li>\n<li><strong>函数与运算</strong>：支持数学计算和逻辑操作。</li>\n<li><strong>模块化</strong>：通过 <code>@import</code> 拆分代码文件。</li>\n</ul>\n</li>\n<li><strong>差异</strong>：\n<ul>\n<li><strong>条件与循环</strong>：\n<ul>\n<li>Sass 支持 <code>@if</code>、<code>@for</code>、<code>@each</code>、<code>@while</code> 等复杂逻辑。</li>\n<li>Less 仅通过混合宏和函数模拟条件判断，功能较简单。</li>\n</ul>\n</li>\n<li><strong>作用域</strong>：\n<ul>\n<li>Sass 变量具有局部作用域，层级更清晰。</li>\n<li>Less 变量默认全局作用域，可能引发冲突。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>2. 语法风格</strong></p>\n<ul>\n<li>\n<p><strong>Sass</strong>：</p>\n<ul>\n<li>\n<p><strong>两种语法</strong>：</p>\n<ul>\n<li><strong>SCSS</strong>（主流）：兼容 CSS 语法，使用 <code>{}</code> 和 <code>;</code>。</li>\n<li><strong>缩进语法</strong>（Sass）：省略 <code>{}</code> 和 <code>;</code>，依赖缩进。</li>\n</ul>\n</li>\n<li>\n<p><strong>示例（SCSS）</strong>：</p>\n<pre><code class=\"language-scss\"><div class=\"language-text \"><span class=\"lang\">text</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span>$primary-color: #333;</span></span>\n<span class=\"line\"><span>@mixin center-block {</span></span>\n<span class=\"line\"><span>  margin: 0 auto;</span></span>\n<span class=\"line\"><span>}</span></span>\n<span class=\"line\"><span>.container {</span></span>\n<span class=\"line\"><span>  @include center-block;</span></span>\n<span class=\"line\"><span>  .item { color: $primary-color; }</span></span>\n<span class=\"line\"><span>}</span></span>\n<span class=\"line\"><span></span></span></code></pre></div></code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Less</strong>：</p>\n<ul>\n<li>\n<p><strong>类似 CSS</strong>：语法与原生 CSS 几乎一致。</p>\n</li>\n<li>\n<p><strong>示例</strong>：</p>\n<pre><code class=\"language-less\"><div class=\"language-text \"><span class=\"lang\">text</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span>@primary-color: #333;</span></span>\n<span class=\"line\"><span>.center-block() { margin: 0 auto; }</span></span>\n<span class=\"line\"><span>.container {</span></span>\n<span class=\"line\"><span>  .center-block();</span></span>\n<span class=\"line\"><span>  .item { color: @primary-color; }</span></span>\n<span class=\"line\"><span>}</span></span>\n<span class=\"line\"><span></span></span></code></pre></div></code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>3. 编译与生态</strong></p>\n<ul>\n<li><strong>编译方式</strong>：\n<ul>\n<li><strong>Sass</strong>：需通过 <code>Dart Sass</code>（主流）或 <code>Node Sass</code> 工具编译为 CSS。</li>\n<li><strong>Less</strong>：通过 <code>Less.js</code>（浏览器或 Node.js）编译。</li>\n</ul>\n</li>\n<li><strong>生态工具</strong>：\n<ul>\n<li>Sass 集成于 Webpack、Gulp 等构建工具，主流框架（如 React、Vue）广泛支持。</li>\n<li>Less 因 Bootstrap 早期使用而流行，但近年 Sass 生态更活跃。</li>\n</ul>\n</li>\n</ul>\n<p><strong>4. 适用场景</strong></p>\n<ul>\n<li><strong>选择 Sass</strong>：\n<ul>\n<li>需要复杂逻辑控制（如循环、条件分支）。</li>\n<li>项目规模较大，需严格的代码组织和模块化。</li>\n<li>偏好现代工具链（如 Dart Sass 的高性能编译）。</li>\n</ul>\n</li>\n<li><strong>选择 Less</strong>：\n<ul>\n<li>快速上手，语法接近原生 CSS。</li>\n<li>维护旧项目（如早期 Bootstrap 项目）。</li>\n<li>轻量级需求，无需复杂功能。</li>\n</ul>\n</li>\n</ul>\n<p><strong>总结</strong></p>\n<ul>\n<li><strong>Sass</strong> 功能更强大，适合复杂项目，<strong>Less</strong> 更轻量易用。</li>\n<li><strong>Sass 是当前主流选择</strong>，尤其在新项目中更受推荐；Less 适合特定场景或历史项目兼容。</li>\n</ul>\n"},{"title":"postcss 是做什么的？","description":"","answer":"<p>PostCSS 是一个基于 JavaScript 的 CSS 处理工具，其核心功能是通过插件系统对 CSS 代码进行解析、转换和优化。它通过解析 CSS 生成<strong>抽象语法树（AST）</strong>，允许开发者利用插件对 AST 进行修改，最终生成兼容性更强、更高效的 CSS 代码。</p>\n<p>常见插件：</p>\n<ul>\n<li><strong>Autoprefixer</strong>：自动添加浏览器厂商前缀，确保跨浏览器兼容性14。</li>\n<li><strong>cssnano</strong>：压缩 CSS 代码，去除冗余内容，减小文件体积49。</li>\n<li><strong>postcss-preset-env</strong>：支持未来的 CSS 语法（如变量、嵌套），将其转换为当前浏览器兼容的代码59。</li>\n<li><strong>Stylelint</strong>：检查 CSS 代码规范，提示潜在错误510。</li>\n</ul>\n"},{"title":"CSS 优化、提高性能的方法有哪些？","description":"","answer":"<p><strong>CSS 性能优化常用方法：</strong></p>\n<ol>\n<li><strong>减少重绘与回流</strong>\n<ul>\n<li>使用 <code>transform</code> 和 <code>opacity</code> 替代直接修改 <code>top/left</code>，触发 GPU 加速</li>\n<li>避免频繁操作 DOM 样式，合并多次修改</li>\n</ul>\n</li>\n<li><strong>选择器优化</strong>\n<ul>\n<li>避免过度嵌套（如 <code>.nav ul li a</code>）</li>\n<li>减少通配符 <code>*</code> 和属性选择器的使用</li>\n</ul>\n</li>\n<li><strong>文件体积压缩</strong>\n<ul>\n<li>删除无用代码（如 PurgeCSS）</li>\n<li>压缩 CSS（工具：cssnano、Webpack 的 <code>css-minimizer-webpack-plugin</code>）</li>\n</ul>\n</li>\n<li><strong>加载策略优化</strong>\n<ul>\n<li>关键 CSS 内联，非关键 CSS 异步加载（<code>&lt;link rel=&quot;preload&quot;&gt;</code>）</li>\n<li>使用 <code>media=&quot;print&quot;</code> 或 <code>media=&quot;(max-width: 600px)&quot;</code> 分割代码</li>\n</ul>\n</li>\n<li><strong>布局性能</strong>\n<ul>\n<li>优先使用 Flexbox/Grid 布局（性能优于传统浮动布局）</li>\n<li>避免过度使用 <code>margin/padding</code> 导致布局抖动</li>\n</ul>\n</li>\n<li><strong>工具与规范</strong>\n<ul>\n<li>使用 CSS 变量（减少重复值）</li>\n<li>开启 CSS 硬件加速（如 <code>will-change: transform;</code>）</li>\n</ul>\n</li>\n</ol>\n"},{"title":"浏览器是怎样解析 CSS 选择器的？","description":"","answer":"<p>浏览器解析 CSS 选择器的过程是<strong>从右向左匹配</strong>的，目的是快速过滤无效路径，提升解析效率。例如对 <code>.nav a</code> 的解析顺序为：</p>\n<ol>\n<li>先找到页面所有 <code>&lt;a&gt;</code> 标签；</li>\n<li>再向上检查父级是否包含 <code>.nav</code> 类。</li>\n</ol>\n<p><strong>关键点：</strong></p>\n<ul>\n<li><strong>解析步骤</strong>：\n<ul>\n<li>生成选择器的抽象语法树（AST）；</li>\n<li>遍历 DOM 树，匹配符合最右端条件的元素；</li>\n<li>自底向上验证父级选择器，最终确定匹配结果。</li>\n</ul>\n</li>\n<li><strong>性能影响</strong>：\n<ul>\n<li>越右侧的选择器越需<strong>精准</strong>（如类名、ID），减少回溯成本；</li>\n<li>避免使用 <code>*</code>、层级过深（如 <code>div ul li a span</code>），降低匹配复杂度。</li>\n</ul>\n</li>\n</ul>\n<p><strong>优化建议：</strong></p>\n<ul>\n<li>尽量用类选择器替代标签选择器；</li>\n<li>避免使用通用选择器或属性选择器（如 <code>[type=&quot;text&quot;]</code>）；</li>\n<li>优先使用 BEM 等命名规范简化选择器层级。</li>\n</ul>\n"},{"title":"为什么移动端设计稿都是750？","description":"","answer":"<p>移动端设计稿常用750px宽度，主要基于以下几点原因：</p>\n<ol>\n<li><strong>设备适配基准</strong>：早期iPhone6/7/8等主流设备物理分辨率为750×1334（设备像素比DPR=2），设计稿按750px制作可直接除以2转为逻辑像素（375px），简化开发换算。</li>\n<li><strong>高效适配方案</strong>：使用Rem或VW单位时，750作为基准尺寸（如1rem=75px），方便快速计算响应式布局。</li>\n<li><strong>行业统一规范</strong>：国内团队普遍采用750标准，配合工具（如PostCSS插件）自动适配多端，降低协作成本。</li>\n<li><strong>高倍图支持</strong>：750设计稿直接输出@2x切图，适配DPR≥2的高清屏，避免图片模糊。</li>\n</ol>\n"},{"title":"position: fixed 一定是相对于浏览器窗口进行定位吗？","description":"","answer":"<p>不一定。</p>\n<p><code>position:fixed;</code>的元素会被移出正常文档流，并不为元素预留空间，而是通过指定元素相对于屏幕视口（viewport）的位置来指定元素位置，元素的位置在屏幕滚动时不会改变。<code>fixed</code> 属性会创建新的层叠上下文。</p>\n<p>当元素祖先的 <code>transform</code>, <code>perspective</code> 或 <code>filter</code> 属性<code>非 none</code> 时，容器由视口改为该祖先。</p>\n"},{"title":"object-fit 的作用?","description":"","answer":"<p><code>object-fit</code> 是 CSS 属性，用于<strong>控制替换元素（如图片、视频）的内容如何适配其容器尺寸</strong>，避免拉伸或压缩导致的变形。</p>\n<p><strong>具体作用</strong>：</p>\n<ol>\n<li><strong>属性值</strong>：\n<ul>\n<li><code>fill</code>（默认）：强制内容填满容器，忽略宽高比。</li>\n<li><code>contain</code>：保持比例缩放，完整显示内容（可能有留白）。</li>\n<li><code>cover</code>：保持比例缩放，覆盖整个容器（可能裁剪内容）。</li>\n<li><code>none</code>：保持原始尺寸，不缩放（居中显示）。</li>\n<li><code>scale-down</code>：选择 <code>none</code> 或 <code>contain</code> 中更小的尺寸。</li>\n</ul>\n</li>\n<li><strong>典型场景</strong>：\n<ul>\n<li><strong>头像裁剪</strong>：方形容器显示用户上传的非方形图片（<code>object-fit: cover</code>）。</li>\n<li><strong>商品图展示</strong>：固定宽高容器内展示不同比例的图片（<code>object-fit: contain</code>）。</li>\n</ul>\n</li>\n</ol>\n"},{"title":"z-index 属性在什么情况下会失效？","description":"<p>z-index 是 CSS 中控制元素堆置顺序的重要属性，它确定了元素在 Z 轴（线性上下）方向的显示顺序。然而，在一些特殊情况下，你会发现 z-index 属性似乎失效。本文将详细讨论这些情况及其原因，并提供解决方案。\n<strong>一、z-index 什么情况下会失效？</strong></p>\n<p>下面是一些常见的情况，在这些情况中，z-index 可能会被应用不尽：</p>\n<ol>\n<li><strong>没有定义位置属性</strong></li>\n</ol>\n<p>z-index 只在元素有定义位置时生效。如果一个元素的 <code>position</code> 属性为 <code>static</code>，则该元素不会应用 z-index。</p>\n<p><strong>解决方案</strong></p>\n<p>确保定义了 <code>position</code> 属性：</p>\n<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">box</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  position</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> relative</span><span style=\"color:#999999\">;</span><span style=\"color:#A0ADA0\"> /* or absolute, fixed, sticky */</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  z-index</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 10</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<ol start=\"2\">\n<li>\n<p><strong>不同堆置上下文</strong></p>\n<p>z-index 的比较只对于同一堆置上下文的元素有效。如果两个元素不在同一堆置上下文，则会根据他们所属堆置上下文本身的 z-index 进行比较。</p>\n<p><strong>解决方案</strong></p>\n<p>确保需要比较的元素在同一堆置上下文中，可通过设置他们所属的子元素。</p>\n</li>\n<li>\n<p>窗口元素优先级问题</p>\n<p>窗口元素（如 <code>alert</code> 窗口）和一些构成性元素（如 <code>&lt;iframe&gt;</code>）会应用高优先级，并且通常会覆盖高值 z-index 的元素。</p>\n<p><strong>解决方案</strong>使用</p>\n<p>CSS 属性：</p>\n<ul>\n<li>通过 <code>position: fixed</code> 和更高值 z-index。</li>\n<li>重构元素，确保元素显示于高优先级之上。</li>\n</ul>\n</li>\n<li>\n<p><strong>非区块化内容</strong></p>\n<p>如果元素是内联元素（如 <code>&lt;span&gt;</code>），而没有被进行区块化，则属性可能无效。</p>\n<p><strong>解决方案</strong></p>\n<p>确保元素是区块化元素：</p>\n<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">inline-block</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#998418\">    display</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> inline-block</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#998418\">    z-index</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 10</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n</ol>\n<p><strong>二、z-index 失效情况总结</strong></p>\n<table>\n<thead>\n<tr>\n<th>失效原因</th>\n<th>解决方案</th>\n</tr>\n</thead>\n</table>\n","answer":""},{"title":"怎么让 CSS flex 布局最后一行列表左对齐？","description":"","answer":"<ul>\n<li>利用伪元素自动填充剩余空间</li>\n</ul>\n<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">flex-container</span><span style=\"color:#999999\">::</span><span style=\"color:#B07D48\">after</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  content</span><span style=\"color:#999999\">:</span><span style=\"color:#B5695977\"> \"\"</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#998418\">   flex</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> auto</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<ul>\n<li>js计算元素个数补齐占位元素(vue中%计算)</li>\n<li>改用 CSS Grid 布局</li>\n</ul>\n"},{"title":"Atom CSS 是什么？","description":"<p>Atom CSS（原子化CSS）是一种<strong>将样式拆分为单一职责的最小化CSS类</strong>的方法，每个类仅定义一种样式属性，通过组合类名实现复杂样式，提升代码复用性与可维护性。</p>\n<p><strong>核心原理与特点</strong></p>\n<ol>\n<li>\n<p><strong>单一职责</strong>：</p>\n<ul>\n<li>每个类对应一个样式属性（如<code>.m-4 { margin: 1rem; }</code>、<code>.text-red { color: red; }</code>）。</li>\n<li>示例代码：<pre><code class=\"language-html\"><div class=\"language-html \"><span class=\"lang\">html</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#B07D48\"> class</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">m-4 p-2 text-red bg-gray-100</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">>&#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>实用类库驱动</strong>：</p>\n<ul>\n<li><strong>Tailwind CSS</strong>：提供丰富的预定义原子类（如<code>flex</code>、<code>w-1/2</code>）。</li>\n<li><strong>UnoCSS</strong>：按需生成原子类，减少体积。</li>\n</ul>\n</li>\n<li>\n<p><strong>优点</strong>：</p>\n<ul>\n<li><strong>减少CSS体积</strong>：按需生成，无未使用的样式。</li>\n<li><strong>避免样式冲突</strong>：无全局作用域，类名直接映射样式。</li>\n<li><strong>快速迭代</strong>：通过组合类名调整样式，无需编写新CSS。</li>\n</ul>\n</li>\n<li>\n<p><strong>缺点</strong>：</p>\n<ul>\n<li><strong>类名冗长</strong>：HTML中需组合多个类，可读性降低。</li>\n<li><strong>学习成本</strong>：需记忆大量原子类命名规则。</li>\n</ul>\n</li>\n</ol>\n<p><strong>与传统CSS方法对比</strong></p>\n<table>\n<thead>\n<tr>\n<th><strong>方法</strong></th>\n<th>原子化CSS</th>\n<th>传统CSS（如BEM）</th>\n</tr>\n</thead>\n</table>\n","answer":""},{"title":"什么是响应式设计？响应式设计的基本原理是什么？如何进行实现？","description":"","answer":"<p>响应式设计是一种<strong>通过灵活布局和动态调整使网页适配不同设备屏幕的技术</strong>，确保用户在不同终端（PC、平板、手机）上获得最佳浏览体验。</p>\n<p><strong>基本原理</strong></p>\n<ol>\n<li><strong>流式网格布局</strong>：使用百分比而非固定宽度，元素尺寸随容器自动调整。</li>\n<li><strong>弹性媒体</strong>：图片、视频等媒体资源按比例缩放（如<code>max-width: 100%</code>）。</li>\n<li><strong>媒体查询（Media Queries）</strong>：根据设备特性（如屏幕宽度、分辨率）应用不同CSS规则。</li>\n<li><strong>移动优先（Mobile First）</strong>：先设计移动端布局，再通过媒体查询逐步增强大屏体验。</li>\n</ol>\n<p><strong>核心实现方法</strong></p>\n<ol>\n<li>\n<p><strong>HTML 基础设置</strong>：</p>\n<pre><code class=\"language-html\"><div class=\"language-html \"><span class=\"lang\">html</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">meta</span><span style=\"color:#B07D48\"> name</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">viewport</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B07D48\"> content</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">width=device-width, initial-scale=1.0</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">></span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">&#x3C;!-- 确保视口宽度与设备一致，禁止缩放 --></span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>CSS 媒体查询</strong>（核心工具）：</p>\n<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#A0ADA0\">/* 移动端默认样式 */</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">container</span><span style=\"color:#999999\"> {</span><span style=\"color:#998418\"> padding</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 10</span><span style=\"color:#AB5959\">px</span><span style=\"color:#999999\">;</span><span style=\"color:#999999\"> }</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">/* 平板适配 */</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">@</span><span style=\"color:#1E754F\">media</span><span style=\"color:#999999\"> (</span><span style=\"color:#998418\">min-width</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 768</span><span style=\"color:#AB5959\">px</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">  .</span><span style=\"color:#B07D48\">container</span><span style=\"color:#999999\"> {</span><span style=\"color:#998418\"> padding</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 20</span><span style=\"color:#AB5959\">px</span><span style=\"color:#999999\">;</span><span style=\"color:#999999\"> }</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">/* PC适配 */</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">@</span><span style=\"color:#1E754F\">media</span><span style=\"color:#999999\"> (</span><span style=\"color:#998418\">min-width</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 1024</span><span style=\"color:#AB5959\">px</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">  .</span><span style=\"color:#B07D48\">container</span><span style=\"color:#999999\"> {</span><span style=\"color:#998418\"> max-width</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 1200</span><span style=\"color:#AB5959\">px</span><span style=\"color:#999999\">;</span><span style=\"color:#998418\"> margin</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#A65E2B\"> auto</span><span style=\"color:#999999\">;</span><span style=\"color:#999999\"> }</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>弹性布局技术</strong>：</p>\n<ul>\n<li><strong>Flexbox</strong>：单维度（行/列）灵活排列，解决对齐与空间分配问题。<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">nav</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  display</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> flex</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  justify-content</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> space-between</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li><strong>CSS Grid</strong>：二维网格布局，复杂结构适配更高效。<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">grid</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  display</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> grid</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  grid-template-columns</span><span style=\"color:#999999\">:</span><span style=\"color:#998418\"> repeat</span><span style=\"color:#999999\">(</span><span style=\"color:#A65E2B\">auto-fit</span><span style=\"color:#999999\">,</span><span style=\"color:#998418\"> minmax</span><span style=\"color:#999999\">(</span><span style=\"color:#2F798A\">250</span><span style=\"color:#AB5959\">px</span><span style=\"color:#999999\">,</span><span style=\"color:#2F798A\"> 1</span><span style=\"color:#AB5959\">fr</span><span style=\"color:#999999\">));</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>响应式单位与计算</strong>：</p>\n<ul>\n<li>相对单位：<code>vw</code>（视口宽度百分比）、<code>rem</code>（根字体比例）、<code>%</code>。</li>\n<li>CSS函数：<code>calc()</code> 动态计算尺寸（如 <code>width: calc(100% - 20px)</code>）。</li>\n</ul>\n</li>\n<li>\n<p><strong>响应式图片优化</strong>：</p>\n<ul>\n<li><strong><code>srcset</code> 与 <code>sizes</code></strong>：根据屏幕密度和宽度加载合适图片。<pre><code class=\"language-html\"><div class=\"language-html \"><span class=\"lang\">html</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">img</span><span style=\"color:#B07D48\"> src</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">small.jpg</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">     srcset</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">medium.jpg 1000w, large.jpg 2000w</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">     sizes</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">(max-width: 600px) 100vw, 50vw</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">></span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li><strong><code>picture</code> 元素</strong>：针对不同场景切换图片源。<pre><code class=\"language-html\"><div class=\"language-html \"><span class=\"lang\">html</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">picture</span><span style=\"color:#999999\">></span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;</span><span style=\"color:#1E754F\">source</span><span style=\"color:#B07D48\"> media</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">(min-width: 800px)</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B07D48\"> srcset</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">desktop.jpg</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">></span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;</span><span style=\"color:#1E754F\">source</span><span style=\"color:#B07D48\"> media</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">(min-width: 500px)</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B07D48\"> srcset</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">tablet.jpg</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">></span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;</span><span style=\"color:#1E754F\">img</span><span style=\"color:#B07D48\"> src</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">mobile.jpg</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B07D48\"> alt</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">响应式图片</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">></span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">picture</span><span style=\"color:#999999\">></span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n</ul>\n</li>\n</ol>\n<p><strong>辅助工具与框架</strong></p>\n<ol>\n<li>\n<p><strong>CSS 预处理器</strong>：</p>\n<ul>\n<li>使用 Sass/Less 变量管理断点（Breakpoint），提升代码可维护性。<pre><code class=\"language-scss\"><div class=\"language-text \"><span class=\"lang\">text</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span>$tablet: 768px;  </span></span>\n<span class=\"line\"><span>@mixin tablet {  </span></span>\n<span class=\"line\"><span>  @media (min-width: #{$tablet}) { @content; }  </span></span>\n<span class=\"line\"><span>}  </span></span>\n<span class=\"line\"><span>.header {  </span></span>\n<span class=\"line\"><span>  font-size: 16px;  </span></span>\n<span class=\"line\"><span>  @include tablet { font-size: 18px; }  </span></span>\n<span class=\"line\"><span>}  </span></span>\n<span class=\"line\"><span></span></span></code></pre></div></code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>前端框架</strong>：</p>\n<ul>\n<li><strong>Bootstrap</strong>：内置栅格系统（12列）和响应式工具类（如<code>.d-none .d-md-block</code>）。</li>\n<li><strong>Tailwind CSS</strong>：通过实用类快速构建响应式界面（如<code>md:text-lg</code>）。</li>\n</ul>\n</li>\n<li>\n<p><strong>测试工具</strong>：</p>\n<ul>\n<li>浏览器开发者工具：模拟不同设备尺寸，实时调试。</li>\n<li>在线服务：Responsinator、BrowserStack 多设备预览。</li>\n</ul>\n</li>\n</ol>\n<p><strong>最佳实践与常见问题</strong></p>\n<ol>\n<li>\n<p><strong>断点选择</strong>：</p>\n<ul>\n<li>基于内容而非设备（如布局断裂时设置断点），常用参考：\n<ul>\n<li>手机：&lt; 768px</li>\n<li>平板：768px ~ 1024px</li>\n<li>桌面：≥ 1024px</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>性能优化</strong>：</p>\n<ul>\n<li>避免过多媒体查询嵌套，减少CSS文件体积。</li>\n<li>使用 <code>display: none</code> 谨慎隐藏元素，优先考虑结构优化。</li>\n</ul>\n</li>\n<li>\n<p><strong>兼容性处理</strong>：</p>\n<ul>\n<li>旧版IE支持：Polyfill（如 Respond.js）或条件注释降级方案。</li>\n</ul>\n</li>\n</ol>\n<p><strong>总结</strong>：响应式设计通过<strong>弹性布局 + 媒体查询 + 动态资源</strong>实现多端适配，结合移动优先策略和现代CSS工具，可高效构建跨设备友好的Web应用。</p>\n"},{"title":"如何使用 CSS 成视差滚动效果?","description":"","answer":""},{"title":"CSS 如何硬件加速?","description":"","answer":""},{"title":"css module 是什么？","description":"","answer":""}]