[{"title":"如何实现轮播图？","description":"","answer":"<p><strong>轮播图实现的核心方案</strong>：</p>\n<ol>\n<li><strong>纯CSS实现（简单轮播）</strong>\n<ul>\n<li>使用 <code>CSS动画</code> + <code>@keyframes</code> 控制自动轮播，通过 <code>:hover</code> 暂停动画，适合静态展示。</li>\n</ul>\n</li>\n<li><strong>原生JS + CSS过渡</strong>\n<ul>\n<li><strong>布局</strong>：Flex/Grid横向排列图片，外层容器 <code>overflow: hidden</code>。</li>\n<li><strong>滑动逻辑</strong>：监听点击事件，通过 <code>transform: translateX</code> 切换位置，结合 <code>transition</code> 实现平滑动画。</li>\n<li><strong>无限循环</strong>：首尾添加克隆元素，切换时瞬间重置位置。</li>\n</ul>\n</li>\n<li><strong>第三方库（快速开发）</strong>\n<ul>\n<li>使用 <strong>Swiper.js</strong> 或 <strong>Slick</strong>，提供丰富API（分页器、懒加载、触摸滑动），适用于复杂交互需求。</li>\n</ul>\n</li>\n<li><strong>关键细节优化</strong>\n<ul>\n<li><strong>自动播放</strong>：<code>setInterval</code> 定时触发切换，离开页面时用 <code>visibilitychange</code> 暂停。</li>\n<li><strong>响应式</strong>：监听 <code>resize</code> 事件动态调整容器尺寸。</li>\n<li><strong>指示器与导航</strong>：动态生成分页点，绑定点击跳转逻辑。</li>\n</ul>\n</li>\n</ol>\n"},{"title":"如何实现前端水印功能？如何禁止别人移除？","description":"","answer":"<p><strong>1. 水印实现方式</strong></p>\n<ul>\n<li>\n<p><strong>Canvas 绘制</strong>\n动态生成带水印的 Base64 图片，设为页面背景：</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#59873A\"> createWatermark</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">text</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> canvas</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> document</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">createElement</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">canvas</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> ctx</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> canvas</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">getContext</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">2d</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  ctx</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">font</span><span style=\"color:#999999\"> =</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">16px Arial</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  ctx</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">fillStyle</span><span style=\"color:#999999\"> =</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">rgba(0,0,0,0.1)</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  ctx</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">rotate</span><span style=\"color:#999999\">(</span><span style=\"color:#AB5959\">-</span><span style=\"color:#2F798A\">20</span><span style=\"color:#AB5959\"> *</span><span style=\"color:#B07D48\"> Math</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">PI</span><span style=\"color:#AB5959\"> /</span><span style=\"color:#2F798A\"> 180</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  ctx</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">fillText</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">text</span><span style=\"color:#999999\">,</span><span style=\"color:#2F798A\"> 10</span><span style=\"color:#999999\">,</span><span style=\"color:#2F798A\"> 70</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">  return</span><span style=\"color:#B07D48\"> canvas</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">toDataURL</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">image/png</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">};</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">document</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">body</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">style</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">backgroundImage</span><span style=\"color:#999999\"> =</span><span style=\"color:#B5695977\"> `</span><span style=\"color:#B56959\">url(</span><span style=\"color:#1E754F\">${</span><span style=\"color:#59873A\">createWatermark</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">Confidential</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">)</span><span style=\"color:#1E754F\">}</span><span style=\"color:#B56959\">)</span><span style=\"color:#B5695977\">`</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>CSS 伪元素覆盖</strong>\n通过绝对定位覆盖全屏，防止遮挡交互：</p>\n<pre><code><div class=\"language-text \"><span class=\"lang\">text</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span>.watermark {</span></span>\n<span class=\"line\"><span>  position: fixed;</span></span>\n<span class=\"line\"><span>  pointer-events: none; /* 禁止交互 */</span></span>\n<span class=\"line\"><span>  z-index: 9999;</span></span>\n<span class=\"line\"><span>  opacity: 0.1;</span></span>\n<span class=\"line\"><span>  background: repeating-linear-gradient(-45deg, #000 0 20px, transparent 20px 40px);</span></span>\n<span class=\"line\"><span>}</span></span>\n<span class=\"line\"><span></span></span></code></pre></div></code></pre>\n</li>\n</ul>\n<p><strong>2. 防移除关键策略</strong></p>\n<ul>\n<li>\n<p><strong>DOM 监控</strong>\n使用 <code>MutationObserver</code> 监听水印节点变化，被删时重新插入：</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> observer</span><span style=\"color:#999999\"> =</span><span style=\"color:#AB5959\"> new</span><span style=\"color:#59873A\"> MutationObserver</span><span style=\"color:#999999\">((</span><span style=\"color:#B07D48\">mutations</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  mutations</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">forEach</span><span style=\"color:#999999\">((</span><span style=\"color:#B07D48\">mutation</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">    if</span><span style=\"color:#999999\"> (</span><span style=\"color:#AB5959\">!</span><span style=\"color:#B07D48\">document</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">getElementById</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">watermark</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">))</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">      document</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">body</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">appendChild</span><span style=\"color:#999999\">(</span><span style=\"color:#59873A\">createWatermarkElement</span><span style=\"color:#999999\">());</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  });</span></span>\n<span class=\"line\"><span style=\"color:#999999\">});</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">observer</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">observe</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">document</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">body</span><span style=\"color:#999999\">,</span><span style=\"color:#999999\"> {</span><span style=\"color:#998418\"> childList</span><span style=\"color:#999999\">:</span><span style=\"color:#1E754F\"> true</span><span style=\"color:#999999\"> });</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>加密混淆</strong>\n动态生成水印元素，避免固定 ID 或 Class 被针对性删除：</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> randomAttr</span><span style=\"color:#999999\"> =</span><span style=\"color:#B5695977\"> `</span><span style=\"color:#B56959\">data-</span><span style=\"color:#1E754F\">${</span><span style=\"color:#B56959\">Math</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">random</span><span style=\"color:#999999\">().</span><span style=\"color:#59873A\">toString</span><span style=\"color:#999999\">(</span><span style=\"color:#2F798A\">36</span><span style=\"color:#999999\">).</span><span style=\"color:#59873A\">slice</span><span style=\"color:#999999\">(</span><span style=\"color:#2F798A\">2</span><span style=\"color:#999999\">)</span><span style=\"color:#1E754F\">}</span><span style=\"color:#B5695977\">`</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">watermarkElement</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">setAttribute</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">randomAttr</span><span style=\"color:#999999\">,</span><span style=\"color:#B5695977\"> ''</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>服务端配合</strong>\n关键内容（如图片/PDF）由服务端预加水印，避免纯前端依赖。</p>\n</li>\n</ul>\n"},{"title":"站点一键换肤的实现方式有哪些？","description":"","answer":"<p><strong>前端一键换肤的核心实现方案</strong>：</p>\n<ol>\n<li>\n<p><strong>CSS变量（推荐）</strong>\n定义主题色变量，通过切换 <code>data-theme</code> 属性动态修改：</p>\n<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">:</span><span style=\"color:#B07D48\">root</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  --primary-color</span><span style=\"color:#999999\">:</span><span style=\"color:#999999\"> #</span><span style=\"color:#A65E2B\">2196f3</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"><span style=\"color:#999999\">[</span><span style=\"color:#B07D48\">data-theme</span><span style=\"color:#AB5959\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">dark</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">]</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  --primary-color</span><span style=\"color:#999999\">:</span><span style=\"color:#999999\"> #</span><span style=\"color:#A65E2B\">333</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B07D48\">document</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">documentElement</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">setAttribute</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">data-theme</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">dark</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>Sass/Less预处理变量</strong>\n编译多套主题CSS文件，动态切换 <code>&lt;link&gt;</code> 的 <code>href</code>（需提前加载）。</p>\n</li>\n<li>\n<p><strong>类名切换</strong>\n为不同主题定义独立类名，通过 JS 切换根元素的类：</p>\n<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">theme-dark</span><span style=\"color:#999999\"> {</span><span style=\"color:#998418\"> background</span><span style=\"color:#999999\">:</span><span style=\"color:#999999\"> #</span><span style=\"color:#A65E2B\">000</span><span style=\"color:#999999\">;</span><span style=\"color:#998418\"> color</span><span style=\"color:#999999\">:</span><span style=\"color:#999999\"> #</span><span style=\"color:#A65E2B\">fff</span><span style=\"color:#999999\">;</span><span style=\"color:#999999\"> }</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>CSS-in-JS动态注入</strong>\n使用 styled-components 等库，结合状态管理动态生成样式。</p>\n</li>\n<li>\n<p><strong>CSS滤镜（简单场景）</strong>\n通过 <code>filter: invert(1)</code> 快速反色，但色彩控制粗糙。</p>\n</li>\n</ol>\n<p><strong>优化细节</strong>：</p>\n<ul>\n<li><strong>持久化</strong>：用 <code>localStorage</code> 存储用户选择，初始化时读取。</li>\n<li><strong>平滑过渡</strong>：为颜色属性添加 <code>transition</code> 动画。</li>\n<li><strong>按需加载</strong>：异步加载非核心主题样式，减少首屏体积。</li>\n</ul>\n"},{"title":"实现一个图片懒加载组件","description":"","answer":"<p><strong>实现图片懒加载组件的核心步骤</strong>：</p>\n<ol>\n<li>\n<p><strong>HTML 结构准备</strong>\n将真实图片地址存入 <code>data-src</code>，初始 <code>src</code> 使用占位图或留空：</p>\n<pre><code class=\"language-html\"><div class=\"language-html \"><span class=\"lang\">html</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">img</span><span style=\"color:#B07D48\"> class</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">lazyload</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B07D48\"> data-src</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">real-image.jpg</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B07D48\"> src</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">placeholder.png</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>Intersection Observer 检测可视区域</strong>\n监听图片是否进入视口，触发加载</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> observer</span><span style=\"color:#999999\"> =</span><span style=\"color:#AB5959\"> new</span><span style=\"color:#59873A\"> IntersectionObserver</span><span style=\"color:#999999\">((</span><span style=\"color:#B07D48\">entries</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  entries</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">forEach</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">entry</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">    if</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">entry</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">isIntersecting</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">      const</span><span style=\"color:#B07D48\"> img</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> entry</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">target</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">      img</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">src</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> img</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">dataset</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">src</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">      img</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">classList</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">add</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">loaded</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">      observer</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">unobserve</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">img</span><span style=\"color:#999999\">);</span><span style=\"color:#A0ADA0\"> // 加载后停止观察</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  });</span></span>\n<span class=\"line\"><span style=\"color:#999999\">},</span><span style=\"color:#999999\"> {</span><span style=\"color:#998418\"> rootMargin</span><span style=\"color:#999999\">:</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">0px 0px 200px 0px</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\"> });</span><span style=\"color:#A0ADA0\"> // 提前200px加载</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B07D48\">document</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">querySelectorAll</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">.lazyload</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">).</span><span style=\"color:#59873A\">forEach</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">img</span><span style=\"color:#999999\"> =></span><span style=\"color:#B07D48\"> observer</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">observe</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">img</span><span style=\"color:#999999\">));</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>滚动兼容方案（备用）</strong>\n不支持 <code>IntersectionObserver</code> 时降级为滚动监听 + 节流：</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#59873A\"> throttleCheck</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> ()</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  document</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">querySelectorAll</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">.lazyload</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">).</span><span style=\"color:#59873A\">forEach</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">img</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">    const</span><span style=\"color:#B07D48\"> rect</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> img</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">getBoundingClientRect</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">    if</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">rect</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">top</span><span style=\"color:#999999\"> &#x3C;</span><span style=\"color:#B07D48\"> window</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">innerHeight</span><span style=\"color:#AB5959\"> +</span><span style=\"color:#2F798A\"> 200</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">      img</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">src</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> img</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">dataset</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">src</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  });</span></span>\n<span class=\"line\"><span style=\"color:#999999\">};</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">window</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">addEventListener</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">scroll</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#59873A\"> throttle</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">throttleCheck</span><span style=\"color:#999999\">,</span><span style=\"color:#2F798A\"> 200</span><span style=\"color:#999999\">));</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>加载效果优化</strong>\nCSS 添加过渡动画：</p>\n<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">lazyload</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  opacity</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  transition</span><span style=\"color:#999999\">:</span><span style=\"color:#393A34\"> opacity </span><span style=\"color:#2F798A\">0.3</span><span style=\"color:#AB5959\">s</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">lazyload</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">loaded</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  opacity</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 1</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>封装为可复用组件（Vue 示例）</strong></p>\n<pre><code class=\"language-vue\"><div class=\"language-vue \"><span class=\"lang\">vue</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">template</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;</span><span style=\"color:#1E754F\">img</span><span style=\"color:#999999\"> :</span><span style=\"color:#59873A\">data-src</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\">src</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\"> class</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">lazyload</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\"> :</span><span style=\"color:#59873A\">src</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\">placeholder</span><span style=\"color:#999999\">\"</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">template</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">script</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">export</span><span style=\"color:#1E754F\"> default</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  props</span><span style=\"color:#999999\">:</span><span style=\"color:#999999\"> [</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">src</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">placeholder</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">],</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">  mounted</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">    this</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">initLazyLoad</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  },</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  methods</span><span style=\"color:#999999\">:</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">    initLazyLoad</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">      const</span><span style=\"color:#B07D48\"> observer</span><span style=\"color:#999999\"> =</span><span style=\"color:#AB5959\"> new</span><span style=\"color:#59873A\"> IntersectionObserver</span><span style=\"color:#999999\">((</span><span style=\"color:#B07D48\">entries</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">        entries</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">forEach</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">entry</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">          if</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">entry</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">isIntersecting</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">            entry</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">target</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">src</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> entry</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">target</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">dataset</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">src</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">            observer</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">unobserve</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">entry</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">target</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">          }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">        });</span></span>\n<span class=\"line\"><span style=\"color:#999999\">      });</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">      observer</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">observe</span><span style=\"color:#999999\">(</span><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">$el</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">script</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n</ol>\n<p><strong>优化要点</strong>：</p>\n<ul>\n<li><strong>性能</strong>：优先使用 <code>IntersectionObserver</code>，滚动监听需加节流</li>\n<li><strong>兼容性</strong>：引入 <code>polyfill</code> 或降级方案</li>\n<li><strong>体验</strong>：提前加载、加载动画、错误处理（<code>onerror</code> 事件）</li>\n</ul>\n"},{"title":"实现分页组件的数据请求逻辑","description":"","answer":""},{"title":"如何实现元素的拖拽功能？","description":"","answer":"<ol>\n<li><strong>事件监听</strong>\n<ul>\n<li><strong><code>mousedown</code></strong>：在目标元素上监听，记录初始鼠标位置和元素当前位置。</li>\n<li><strong><code>mousemove</code></strong>：在文档（<code>document</code>）上监听，计算偏移量并实时更新元素位置（如修改 <code>left/top</code> 或 <code>transform</code>）。</li>\n<li><strong><code>mouseup</code></strong>：在文档上监听，移除 <code>mousemove</code> 和 <code>mouseup</code> 事件，结束拖拽。</li>\n</ul>\n</li>\n<li><strong>位置计算</strong>\n<ul>\n<li>通过 <code>clientX/clientY</code> 获取鼠标坐标，结合元素初始位置计算偏移量。</li>\n<li>更新元素样式时优先使用 <code>transform: translate()</code> 以提升性能。</li>\n</ul>\n</li>\n<li><strong>交互优化</strong>\n<ul>\n<li><strong>防止文本选中</strong>：在 <code>mousedown</code> 事件中设置 <code>user-select: none</code> 或调用 <code>event.preventDefault()</code>。</li>\n<li><strong>光标反馈</strong>：动态切换 <code>cursor</code> 样式（如 <code>grab</code> 和 <code>grabbing</code>）。</li>\n</ul>\n</li>\n</ol>\n"},{"title":"如何实现一个拖拽排序列表","description":"","answer":"<p><strong>实现拖拽排序列表的核心步骤</strong>：</p>\n<ol>\n<li>\n<p><strong>HTML 结构</strong>\n为列表项添加 <code>draggable=&quot;true&quot;</code> 属性，禁用默认拖拽图像：</p>\n<pre><code class=\"language-html\"><div class=\"language-html \"><span class=\"lang\">html</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">ul</span><span style=\"color:#B07D48\"> class</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">sortable-list</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;</span><span style=\"color:#1E754F\">li</span><span style=\"color:#B07D48\"> draggable</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">true</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B07D48\"> data-id</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">1</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">></span><span style=\"color:#393A34\">Item 1</span><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">li</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;</span><span style=\"color:#1E754F\">li</span><span style=\"color:#B07D48\"> draggable</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">true</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B07D48\"> data-id</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">2</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">></span><span style=\"color:#393A34\">Item 2</span><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">li</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">ul</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>事件监听</strong>\n绑定关键事件：</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#AB5959\">let</span><span style=\"color:#B07D48\"> draggedItem</span><span style=\"color:#999999\"> =</span><span style=\"color:#AB5959\"> null</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B07D48\">items</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">forEach</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">item</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  item</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">addEventListener</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">dragstart</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> handleDragStart</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  item</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">addEventListener</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">dragover</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> handleDragOver</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  item</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">addEventListener</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">dragend</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> handleDragEnd</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">});</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>拖拽逻辑</strong></p>\n<ul>\n<li>\n<p><strong>记录拖拽元素</strong>：</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#AB5959\">function</span><span style=\"color:#59873A\"> handleDragStart</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">e</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  draggedItem</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> e</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">target</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  e</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">dataTransfer</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">effectAllowed</span><span style=\"color:#999999\"> =</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">move</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  e</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">target</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">classList</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">add</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">dragging</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>计算插入位置</strong>：</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#AB5959\">function</span><span style=\"color:#59873A\"> handleDragOver</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">e</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  e</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">preventDefault</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> afterElement</span><span style=\"color:#999999\"> =</span><span style=\"color:#59873A\"> getDragAfterElement</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">e</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">clientY</span><span style=\"color:#999999\">);</span><span style=\"color:#A0ADA0\"> // 根据坐标计算插入点</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> list</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> document</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">querySelector</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">.sortable-list</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">  if</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">afterElement</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    list</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">insertBefore</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">draggedItem</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> afterElement</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span><span style=\"color:#1E754F\"> else</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    list</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">appendChild</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">draggedItem</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>视觉优化</strong></p>\n<ul>\n<li>\n<p>添加拖拽占位符和过渡动画：</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">dragging</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">  opacity</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 0.5</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">  background</span><span style=\"color:#999999\">:</span><span style=\"color:#393A34\"> #</span><span style=\"color:#B07D48\">f0f0f0</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>框架优化（如 Vue/React）</strong>\n结合状态管理更新数据源：</p>\n<pre><code class=\"language-VUE\"><div class=\"language-text \"><span class=\"lang\">text</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span>&#x3C;template></span></span>\n<span class=\"line\"><span>  &#x3C;ul @dragover.prevent=\"handleDragOver\"></span></span>\n<span class=\"line\"><span>    &#x3C;li v-for=\"item in list\" </span></span>\n<span class=\"line\"><span>        draggable </span></span>\n<span class=\"line\"><span>        @dragstart=\"handleDragStart(item.id)\"</span></span>\n<span class=\"line\"><span>        @dragend=\"handleDragEnd\"></span></span>\n<span class=\"line\"><span>      {{ item.text }}</span></span>\n<span class=\"line\"><span>    &#x3C;/li></span></span>\n<span class=\"line\"><span>  &#x3C;/ul></span></span>\n<span class=\"line\"><span>&#x3C;/template></span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>&#x3C;script></span></span>\n<span class=\"line\"><span>export default {</span></span>\n<span class=\"line\"><span>  methods: {</span></span>\n<span class=\"line\"><span>    handleDragStart(id) {</span></span>\n<span class=\"line\"><span>      this.draggedId = id;</span></span>\n<span class=\"line\"><span>    },</span></span>\n<span class=\"line\"><span>    handleDragOver(e) {</span></span>\n<span class=\"line\"><span>      const newList = [...this.list];</span></span>\n<span class=\"line\"><span>      const from = this.list.findIndex(item => item.id === this.draggedId);</span></span>\n<span class=\"line\"><span>      const to = this.calculateNewPosition(e); // 计算新位置</span></span>\n<span class=\"line\"><span>      newList.splice(to, 0, newList.splice(from, 1)[0]);</span></span>\n<span class=\"line\"><span>      this.list = newList;</span></span>\n<span class=\"line\"><span>    }</span></span>\n<span class=\"line\"><span>  }</span></span>\n<span class=\"line\"><span>}</span></span>\n<span class=\"line\"><span>&#x3C;/script></span></span>\n<span class=\"line\"><span></span></span></code></pre></div></code></pre>\n</li>\n</ol>\n<p><strong>备选方案</strong>：</p>\n<ul>\n<li><strong>第三方库</strong>：直接使用 Sortable.js 或 react-beautiful-dnd（React 生态）快速实现。</li>\n<li><strong>移动端适配</strong>：结合 <code>touchstart</code>/<code>touchmove</code> 事件实现触摸拖拽。</li>\n</ul>\n"},{"title":"如何实现前端文件分片上传与断点续传","description":"","answer":"<p><strong>1. 分片上传实现</strong></p>\n<ul>\n<li>\n<p><strong>文件分片</strong>\n使用 <code>Blob.slice()</code> 切割文件为固定大小（如 5MB/片）：</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> chunkSize</span><span style=\"color:#999999\"> =</span><span style=\"color:#2F798A\"> 5</span><span style=\"color:#AB5959\"> *</span><span style=\"color:#2F798A\"> 1024</span><span style=\"color:#AB5959\"> *</span><span style=\"color:#2F798A\"> 1024</span><span style=\"color:#999999\">;</span><span style=\"color:#A0ADA0\"> // 5MB</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> chunks</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> [];</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">let</span><span style=\"color:#B07D48\"> start</span><span style=\"color:#999999\"> =</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">while</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">start</span><span style=\"color:#999999\"> &#x3C;</span><span style=\"color:#B07D48\"> file</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">size</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  chunks</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">push</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">file</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">slice</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">start</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> start</span><span style=\"color:#AB5959\"> +</span><span style=\"color:#B07D48\"> chunkSize</span><span style=\"color:#999999\">));</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  start</span><span style=\"color:#AB5959\"> +=</span><span style=\"color:#B07D48\"> chunkSize</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>唯一标识</strong>\n计算文件哈希值（如 <code>SparkMD5</code>），作为分片标识：</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> fileHash</span><span style=\"color:#999999\"> =</span><span style=\"color:#1E754F\"> await</span><span style=\"color:#59873A\"> calculateHash</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">file</span><span style=\"color:#999999\">);</span><span style=\"color:#A0ADA0\"> // Web Worker中计算</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>并发上传</strong>\n通过 <code>Promise.all</code> 控制并发请求数（如并发3片）：</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#59873A\"> uploadChunk</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">chunk</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> index</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> formData</span><span style=\"color:#999999\"> =</span><span style=\"color:#AB5959\"> new</span><span style=\"color:#59873A\"> FormData</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  formData</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">append</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">chunk</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> chunk</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  formData</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">append</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">hash</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B5695977\"> `</span><span style=\"color:#1E754F\">${</span><span style=\"color:#B56959\">fileHash</span><span style=\"color:#1E754F\">}</span><span style=\"color:#B56959\">-</span><span style=\"color:#1E754F\">${</span><span style=\"color:#B56959\">index</span><span style=\"color:#1E754F\">}</span><span style=\"color:#B5695977\">`</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">  return</span><span style=\"color:#B07D48\"> axios</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">post</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">/upload</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> formData</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">// 控制并发</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> maxConcurrent</span><span style=\"color:#999999\"> =</span><span style=\"color:#2F798A\"> 3</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">for</span><span style=\"color:#999999\"> (</span><span style=\"color:#AB5959\">let</span><span style=\"color:#B07D48\"> i</span><span style=\"color:#999999\"> =</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">;</span><span style=\"color:#B07D48\"> i</span><span style=\"color:#999999\"> &#x3C;</span><span style=\"color:#B07D48\"> chunks</span><span style=\"color:#999999\">.</span><span style=\"color:#998418\">length</span><span style=\"color:#999999\">;</span><span style=\"color:#B07D48\"> i</span><span style=\"color:#AB5959\"> +=</span><span style=\"color:#B07D48\"> maxConcurrent</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">  await</span><span style=\"color:#998418\"> Promise</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">all</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">chunks</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">slice</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">i</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> i</span><span style=\"color:#AB5959\"> +</span><span style=\"color:#B07D48\"> maxConcurrent</span><span style=\"color:#999999\">).</span><span style=\"color:#59873A\">map</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">uploadChunk</span><span style=\"color:#999999\">));</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n</ul>\n<p><strong>2. 断点续传实现</strong></p>\n<ul>\n<li>\n<p><strong>服务端记录已传分片</strong>\n上传前调用接口检查已上传的分片索引：</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#999999\"> {</span><span style=\"color:#B07D48\"> uploadedIndexes</span><span style=\"color:#999999\"> }</span><span style=\"color:#999999\"> =</span><span style=\"color:#1E754F\"> await</span><span style=\"color:#B07D48\"> axios</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">get</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">`</span><span style=\"color:#B56959\">/check?hash=</span><span style=\"color:#1E754F\">${</span><span style=\"color:#B56959\">fileHash</span><span style=\"color:#1E754F\">}</span><span style=\"color:#B5695977\">`</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>跳过已传分片</strong>\n前端过滤已上传的分片，仅传剩余部分：</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B07D48\">chunks</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">filter</span><span style=\"color:#999999\">((</span><span style=\"color:#B07D48\">_</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> index</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#AB5959\"> !</span><span style=\"color:#B07D48\">uploadedIndexes</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">includes</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">index</span><span style=\"color:#999999\">));</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>合并分片</strong>\n所有分片上传完成后，通知服务端合并：</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#1E754F\">await</span><span style=\"color:#B07D48\"> axios</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">post</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">`</span><span style=\"color:#B56959\">/merge</span><span style=\"color:#B5695977\">`</span><span style=\"color:#999999\">,</span><span style=\"color:#999999\"> {</span><span style=\"color:#998418\"> hash</span><span style=\"color:#999999\">:</span><span style=\"color:#B07D48\"> fileHash</span><span style=\"color:#999999\">,</span><span style=\"color:#998418\"> fileName</span><span style=\"color:#999999\">:</span><span style=\"color:#B07D48\"> file</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">name</span><span style=\"color:#999999\"> });</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n</ul>\n<p><strong>3. 关键优化点</strong></p>\n<ul>\n<li><strong>进度反馈</strong>\n监听 <code>axios</code> 的 <code>onUploadProgress</code> 事件更新进度条。</li>\n<li><strong>错误重试</strong>\n为每个分片添加重试机制（如最多重试3次）。</li>\n<li><strong>暂停恢复</strong>\n通过 <code>AbortController</code> 中断请求，记录已传分片。</li>\n</ul>\n<p><strong>4. 完整流程示例</strong></p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#A0ADA0\">// 1. 计算文件哈希（Web Worker避免阻塞）</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> fileHash</span><span style=\"color:#999999\"> =</span><span style=\"color:#1E754F\"> await</span><span style=\"color:#59873A\"> computeHash</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">file</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">// 2. 检查已上传分片</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#999999\"> {</span><span style=\"color:#B07D48\"> uploaded</span><span style=\"color:#999999\"> }</span><span style=\"color:#999999\"> =</span><span style=\"color:#1E754F\"> await</span><span style=\"color:#59873A\"> checkExist</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">fileHash</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">// 3. 过滤未上传分片</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> chunks</span><span style=\"color:#999999\"> =</span><span style=\"color:#59873A\"> splitFile</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">file</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> unuploaded</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> chunks</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">filter</span><span style=\"color:#999999\">((</span><span style=\"color:#B07D48\">_</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> i</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#AB5959\"> !</span><span style=\"color:#B07D48\">uploaded</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">includes</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">i</span><span style=\"color:#999999\">));</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">// 4. 分片上传（控制并发）</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">uploadChunks</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">unuploaded</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> fileHash</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">// 5. 合并请求</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">await</span><span style=\"color:#59873A\"> mergeChunks</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">fileHash</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> file</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">name</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>技术选型建议</strong>：</p>\n<ul>\n<li>原生实现用 <code>Blob.slice</code> + <code>Axios</code></li>\n<li>快速开发用 <code>Uppy.js</code> 或 <code>tus-js-client</code></li>\n<li>大文件必配 <strong>Web Worker</strong> 计算哈希，避免主线程卡顿</li>\n</ul>\n"},{"title":"设计一个撤消/重做（Undo/Redo）功能","description":"","answer":"<p>在Vue中实现撤销/重做功能，可以通过维护状态快照栈来实现。以下是具体步骤：</p>\n<ol>\n<li><strong>数据设计</strong>：在组件或Vuex中定义<code>history</code>数组和<code>currentIndex</code>指针</li>\n</ol>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#59873A\">data</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">  return</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#998418\">    history</span><span style=\"color:#999999\">:</span><span style=\"color:#999999\"> [</span><span style=\"color:#59873A\">deepCopy</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">initialState</span><span style=\"color:#999999\">)],</span><span style=\"color:#A0ADA0\"> // 初始状态深拷贝</span></span>\n<span class=\"line\"><span style=\"color:#998418\">    currentIndex</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">,</span></span>\n<span class=\"line\"><span style=\"color:#998418\">    isUndoRedo</span><span style=\"color:#999999\">:</span><span style=\"color:#1E754F\"> false</span><span style=\"color:#A0ADA0\"> // 防止撤销/重做触发记录</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<ol>\n<li><strong>操作记录</strong>：在每次状态变更后保存快照</li>\n</ol>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#59873A\">methods</span><span style=\"color:#999999\">:</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">  saveSnapshot</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">    if</span><span style=\"color:#999999\"> (</span><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">isUndoRedo</span><span style=\"color:#999999\">)</span><span style=\"color:#1E754F\"> return</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    // 覆盖重做栈</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">    this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">history</span><span style=\"color:#999999\"> =</span><span style=\"color:#A65E2B\"> this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">history</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">slice</span><span style=\"color:#999999\">(</span><span style=\"color:#2F798A\">0</span><span style=\"color:#999999\">,</span><span style=\"color:#A65E2B\"> this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">currentIndex</span><span style=\"color:#AB5959\"> +</span><span style=\"color:#2F798A\"> 1</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">    this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">history</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">push</span><span style=\"color:#999999\">(</span><span style=\"color:#59873A\">deepCopy</span><span style=\"color:#999999\">(</span><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">$data</span><span style=\"color:#999999\">))</span><span style=\"color:#A0ADA0\"> // 保存当前状态</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">    this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">currentIndex</span><span style=\"color:#AB5959\">++</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<ol>\n<li><strong>撤销/重做实现</strong>：</li>\n</ol>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#59873A\">undo</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">  if</span><span style=\"color:#999999\"> (</span><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">currentIndex</span><span style=\"color:#999999\"> ></span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">    this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">isUndoRedo</span><span style=\"color:#999999\"> =</span><span style=\"color:#1E754F\"> true</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">    this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">currentIndex</span><span style=\"color:#AB5959\">--</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">    this</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">applySnapshot</span><span style=\"color:#999999\">()</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">},</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">redo</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">  if</span><span style=\"color:#999999\"> (</span><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">currentIndex</span><span style=\"color:#999999\"> &#x3C;</span><span style=\"color:#A65E2B\"> this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">history</span><span style=\"color:#999999\">.</span><span style=\"color:#998418\">length</span><span style=\"color:#AB5959\"> -</span><span style=\"color:#2F798A\"> 1</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">    this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">isUndoRedo</span><span style=\"color:#999999\"> =</span><span style=\"color:#1E754F\"> true</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">    this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">currentIndex</span><span style=\"color:#AB5959\">++</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">    this</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">applySnapshot</span><span style=\"color:#999999\">()</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">},</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">applySnapshot</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  Object</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">assign</span><span style=\"color:#999999\">(</span><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">$data</span><span style=\"color:#999999\">,</span><span style=\"color:#A65E2B\"> this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">history</span><span style=\"color:#999999\">[</span><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">currentIndex</span><span style=\"color:#999999\">])</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">  this</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">$nextTick</span><span style=\"color:#999999\">(()</span><span style=\"color:#999999\"> =></span><span style=\"color:#A65E2B\"> this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">isUndoRedo</span><span style=\"color:#999999\"> =</span><span style=\"color:#1E754F\"> false</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<ol>\n<li><strong>触发监听</strong>：通过watch自动记录状态变化</li>\n</ol>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#59873A\">watch</span><span style=\"color:#999999\">:</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">  $data</span><span style=\"color:#999999\">:</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">    handler</span><span style=\"color:#999999\">:</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">saveSnapshot</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">    deep</span><span style=\"color:#999999\">:</span><span style=\"color:#1E754F\"> true</span><span style=\"color:#999999\">,</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">    immediate</span><span style=\"color:#999999\">:</span><span style=\"color:#1E754F\"> false</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>注意</strong>：使用<code>JSON.parse(JSON.stringify())</code>进行简单深拷贝，复杂场景建议使用lodash的<code>_.cloneDeep</code>。按钮状态可通过计算属性判断<code>currentIndex</code>边界值。</p>\n"},{"title":"JS 执行 100 万个任务， 如何保证浏览器不卡顿？","description":"","answer":"<p>核心思路：将任务拆分为多个可中断的块</p>\n<p>浏览器的渲染和事件响应依赖主线程，单次长时间占用主线程会导致卡顿。我们需要将任务分解为多个小块，每执行完一小块后让主线程有机会处理其他任务（如渲染、用户交互）。</p>\n<p>方法 1：使用 <code>requestIdleCallback</code> 或 <code>setTimeout</code> 分片</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#AB5959\">function</span><span style=\"color:#59873A\"> processTasks</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">tasks</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> chunkSize</span><span style=\"color:#999999\"> =</span><span style=\"color:#2F798A\"> 1000</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  let</span><span style=\"color:#B07D48\"> index</span><span style=\"color:#999999\"> =</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  function</span><span style=\"color:#59873A\"> processNextChunk</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">deadline</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">    while</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">index</span><span style=\"color:#999999\"> &#x3C;</span><span style=\"color:#B07D48\"> tasks</span><span style=\"color:#999999\">.</span><span style=\"color:#998418\">length</span><span style=\"color:#AB5959\"> &#x26;&#x26;</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">deadline</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">timeRemaining</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> ></span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#AB5959\"> ||</span><span style=\"color:#B07D48\"> deadline</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">didTimeout</span><span style=\"color:#999999\">))</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">      // 每次处理一小块任务</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">      for</span><span style=\"color:#999999\"> (</span><span style=\"color:#AB5959\">let</span><span style=\"color:#B07D48\"> i</span><span style=\"color:#999999\"> =</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">;</span><span style=\"color:#B07D48\"> i</span><span style=\"color:#999999\"> &#x3C;</span><span style=\"color:#B07D48\"> chunkSize</span><span style=\"color:#AB5959\"> &#x26;&#x26;</span><span style=\"color:#B07D48\"> index</span><span style=\"color:#999999\"> &#x3C;</span><span style=\"color:#B07D48\"> tasks</span><span style=\"color:#999999\">.</span><span style=\"color:#998418\">length</span><span style=\"color:#999999\">;</span><span style=\"color:#B07D48\"> i</span><span style=\"color:#AB5959\">++</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> index</span><span style=\"color:#AB5959\">++</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">        executeTask</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">tasks</span><span style=\"color:#999999\">[</span><span style=\"color:#B07D48\">index</span><span style=\"color:#999999\">]);</span><span style=\"color:#A0ADA0\"> // 执行单个任务</span></span>\n<span class=\"line\"><span style=\"color:#999999\">      }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#1E754F\">    if</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">index</span><span style=\"color:#999999\"> &#x3C;</span><span style=\"color:#B07D48\"> tasks</span><span style=\"color:#999999\">.</span><span style=\"color:#998418\">length</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">      // 继续调度下一块任务</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">      requestIdleCallback</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">processNextChunk</span><span style=\"color:#999999\">,</span><span style=\"color:#999999\"> {</span><span style=\"color:#998418\"> timeout</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 1000</span><span style=\"color:#999999\"> });</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#59873A\">  requestIdleCallback</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">processNextChunk</span><span style=\"color:#999999\">,</span><span style=\"color:#999999\"> {</span><span style=\"color:#998418\"> timeout</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 1000</span><span style=\"color:#999999\"> });</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">// 启动任务处理</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">processTasks</span><span style=\"color:#999999\">(</span><span style=\"color:#59873A\">Array</span><span style=\"color:#999999\">(</span><span style=\"color:#2F798A\">1e6</span><span style=\"color:#999999\">).</span><span style=\"color:#59873A\">fill</span><span style=\"color:#999999\">(</span><span style=\"color:#AB5959\">null</span><span style=\"color:#999999\">));</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>优化点：</strong></p>\n<ul>\n<li><strong>动态调整分片大小</strong>：根据 <code>deadline.timeRemaining()</code> 动态调整每块任务量。</li>\n<li><strong>超时控制</strong>：设置 <code>timeout</code> 确保即使浏览器不空闲时任务仍能推进。</li>\n</ul>\n<p>方法 2：使用 Web Workers 多线程处理（纯计算任务）</p>\n<p>如果任务不涉及 DOM，可将计算逻辑转移到 Web Worker：</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#A0ADA0\">// 主线程代码</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> worker</span><span style=\"color:#999999\"> =</span><span style=\"color:#AB5959\"> new</span><span style=\"color:#59873A\"> Worker</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">task-worker.js</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">worker</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">postMessage</span><span style=\"color:#999999\">({</span><span style=\"color:#998418\"> tasks</span><span style=\"color:#999999\">:</span><span style=\"color:#59873A\"> Array</span><span style=\"color:#999999\">(</span><span style=\"color:#2F798A\">1e6</span><span style=\"color:#999999\">).</span><span style=\"color:#59873A\">fill</span><span style=\"color:#999999\">(</span><span style=\"color:#AB5959\">null</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> });</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">worker</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">onmessage</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">e</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  console</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">log</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">任务完成</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> e</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">data</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">// task-worker.js</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">self</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">onmessage</span><span style=\"color:#999999\"> =</span><span style=\"color:#AB5959\"> function</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">e</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> results</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> e</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">data</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">tasks</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">map</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">executeTask</span><span style=\"color:#999999\">);</span><span style=\"color:#A0ADA0\"> // 执行任务</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  self</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">postMessage</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">results</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">};</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>优点</strong>：彻底避免主线程阻塞。</p>\n<p>方法 3：Generator + <code>setTimeout</code>/<code>requestAnimationFrame</code></p>\n<p>利用 Generator 函数的暂停特性分步执行：</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#AB5959\">function</span><span style=\"color:#1E754F\">*</span><span style=\"color:#59873A\"> taskGenerator</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">tasks</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">  for</span><span style=\"color:#999999\"> (</span><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> task</span><span style=\"color:#AB5959\"> of</span><span style=\"color:#B07D48\"> tasks</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">    yield</span><span style=\"color:#59873A\"> executeTask</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">task</span><span style=\"color:#999999\">);</span><span style=\"color:#A0ADA0\"> // 每次 yield 一个任务</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#AB5959\">function</span><span style=\"color:#59873A\"> runTasks</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">tasks</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> generator</span><span style=\"color:#999999\"> =</span><span style=\"color:#59873A\"> taskGenerator</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">tasks</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  function</span><span style=\"color:#59873A\"> next</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">    let</span><span style=\"color:#B07D48\"> start</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> performance</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">now</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">    let</span><span style=\"color:#B07D48\"> res</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">    do</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">      res</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> generator</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">next</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span><span style=\"color:#1E754F\"> while</span><span style=\"color:#999999\"> (</span><span style=\"color:#AB5959\">!</span><span style=\"color:#B07D48\">res</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">done</span><span style=\"color:#AB5959\"> &#x26;&#x26;</span><span style=\"color:#B07D48\"> performance</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">now</span><span style=\"color:#999999\">()</span><span style=\"color:#AB5959\"> -</span><span style=\"color:#B07D48\"> start</span><span style=\"color:#999999\"> &#x3C;</span><span style=\"color:#2F798A\"> 5</span><span style=\"color:#999999\">);</span><span style=\"color:#A0ADA0\"> // 每帧最多执行 5ms</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">    </span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">    if</span><span style=\"color:#999999\"> (</span><span style=\"color:#AB5959\">!</span><span style=\"color:#B07D48\">res</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">done</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">      requestAnimationFrame</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">next</span><span style=\"color:#999999\">);</span><span style=\"color:#A0ADA0\"> // 下一帧继续</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#59873A\">  requestAnimationFrame</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">next</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#59873A\">runTasks</span><span style=\"color:#999999\">(</span><span style=\"color:#59873A\">Array</span><span style=\"color:#999999\">(</span><span style=\"color:#2F798A\">1e6</span><span style=\"color:#999999\">).</span><span style=\"color:#59873A\">fill</span><span style=\"color:#999999\">(</span><span style=\"color:#AB5959\">null</span><span style=\"color:#999999\">));</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>优点</strong>：与浏览器渲染周期对齐，减少卡顿。</p>\n<p>方法 4：使用 <code>Promise</code> 微任务调度</p>\n<p>通过微任务队列逐步处理任务：</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#AB5959\">async</span><span style=\"color:#AB5959\"> function</span><span style=\"color:#59873A\"> processTasks</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">tasks</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  let</span><span style=\"color:#B07D48\"> index</span><span style=\"color:#999999\"> =</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> chunkSize</span><span style=\"color:#999999\"> =</span><span style=\"color:#2F798A\"> 1000</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  async</span><span style=\"color:#AB5959\"> function</span><span style=\"color:#59873A\"> processChunk</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">    for</span><span style=\"color:#999999\"> (</span><span style=\"color:#AB5959\">let</span><span style=\"color:#B07D48\"> i</span><span style=\"color:#999999\"> =</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">;</span><span style=\"color:#B07D48\"> i</span><span style=\"color:#999999\"> &#x3C;</span><span style=\"color:#B07D48\"> chunkSize</span><span style=\"color:#AB5959\"> &#x26;&#x26;</span><span style=\"color:#B07D48\"> index</span><span style=\"color:#999999\"> &#x3C;</span><span style=\"color:#B07D48\"> tasks</span><span style=\"color:#999999\">.</span><span style=\"color:#998418\">length</span><span style=\"color:#999999\">;</span><span style=\"color:#B07D48\"> i</span><span style=\"color:#AB5959\">++</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> index</span><span style=\"color:#AB5959\">++</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">      executeTask</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">tasks</span><span style=\"color:#999999\">[</span><span style=\"color:#B07D48\">index</span><span style=\"color:#999999\">]);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">    if</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">index</span><span style=\"color:#999999\"> &#x3C;</span><span style=\"color:#B07D48\"> tasks</span><span style=\"color:#999999\">.</span><span style=\"color:#998418\">length</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">      await</span><span style=\"color:#998418\"> Promise</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">resolve</span><span style=\"color:#999999\">();</span><span style=\"color:#A0ADA0\"> // 让出主线程</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">      processChunk</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#1E754F\">  await</span><span style=\"color:#59873A\"> processChunk</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#59873A\">processTasks</span><span style=\"color:#999999\">(</span><span style=\"color:#59873A\">Array</span><span style=\"color:#999999\">(</span><span style=\"color:#2F798A\">1e6</span><span style=\"color:#999999\">).</span><span style=\"color:#59873A\">fill</span><span style=\"color:#999999\">(</span><span style=\"color:#AB5959\">null</span><span style=\"color:#999999\">));</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>注意</strong>：微任务会连续执行直到队列清空，需合理控制分片大小。</p>\n"},{"title":"如何实现瀑布流布局？","description":"","answer":"<p>实现瀑布流布局的关键是动态计算每项的位置，使元素依次填充到高度最小的列。步骤如下：</p>\n<ol>\n<li><strong>确定列数</strong>：根据容器宽度和列宽计算</li>\n<li><strong>跟踪列高</strong>：用数组记录每列当前高度</li>\n<li><strong>定位元素</strong>：遍历元素时，总是插入到高度最小的列</li>\n<li><strong>更新布局</strong>：元素插入后更新列高，最后设置容器高度</li>\n</ol>\n<p>简单Vue实现：</p>\n<pre><code class=\"language-vue\"><div class=\"language-vue \"><span class=\"lang\">vue</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#393A34\">&#x3C;</span><span style=\"color:#1E754F\">template</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  &#x3C;!-- 容器绑定ref用于获取DOM --></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#B07D48\"> class</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">waterfall</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B07D48\"> ref</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">container</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    &#x3C;!-- 动态生成子元素 --></span></span>\n<span class=\"line\"><span style=\"color:#999999\">    &#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#1E754F\"> v-for</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">item</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> index</span><span style=\"color:#999999\">)</span><span style=\"color:#AB5959\"> in</span><span style=\"color:#B07D48\"> items</span><span style=\"color:#999999\">\"</span><span style=\"color:#999999\"> :</span><span style=\"color:#59873A\">key</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\">index</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\"> class</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">item</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">      &#x3C;!-- 实际内容 --></span></span>\n<span class=\"line\"><span style=\"color:#999999\">    &#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">template</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">script</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">export</span><span style=\"color:#1E754F\"> default</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">  data</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">    return</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#998418\">      colHeights</span><span style=\"color:#999999\">:</span><span style=\"color:#999999\"> [],</span><span style=\"color:#A0ADA0\"> // 存储每列高度</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  },</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">  mounted</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">    this</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">layout</span><span style=\"color:#999999\">()</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    window</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">addEventListener</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">resize</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#A65E2B\"> this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">handleResize</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  },</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  methods</span><span style=\"color:#999999\">:</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">    layout</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">      // 1. 获取容器和子元素</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">      const</span><span style=\"color:#B07D48\"> container</span><span style=\"color:#999999\"> =</span><span style=\"color:#A65E2B\"> this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">$refs</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">container</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">      const</span><span style=\"color:#B07D48\"> items</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> container</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">children</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">      </span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">      // 2. 计算列数和列宽</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">      const</span><span style=\"color:#B07D48\"> colCount</span><span style=\"color:#999999\"> =</span><span style=\"color:#2F798A\"> 3</span><span style=\"color:#A0ADA0\"> // 可改为响应式计算</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">      const</span><span style=\"color:#B07D48\"> gap</span><span style=\"color:#999999\"> =</span><span style=\"color:#2F798A\"> 10</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">      const</span><span style=\"color:#B07D48\"> itemWidth</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">container</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">offsetWidth</span><span style=\"color:#AB5959\"> -</span><span style=\"color:#B07D48\"> gap</span><span style=\"color:#AB5959\">*</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">colCount</span><span style=\"color:#AB5959\">-</span><span style=\"color:#2F798A\">1</span><span style=\"color:#999999\">))</span><span style=\"color:#AB5959\">/</span><span style=\"color:#B07D48\">colCount</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">      </span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">      // 3. 初始化列高度数组</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">      this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">colHeights</span><span style=\"color:#999999\"> =</span><span style=\"color:#AB5959\"> new</span><span style=\"color:#59873A\"> Array</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">colCount</span><span style=\"color:#999999\">).</span><span style=\"color:#59873A\">fill</span><span style=\"color:#999999\">(</span><span style=\"color:#2F798A\">0</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">      // 4. 遍历元素定位</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">      Array</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">from</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">items</span><span style=\"color:#999999\">).</span><span style=\"color:#59873A\">forEach</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">item</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">        item</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">style</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">position</span><span style=\"color:#999999\"> =</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">absolute</span><span style=\"color:#B5695977\">'</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">        item</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">style</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">width</span><span style=\"color:#999999\"> =</span><span style=\"color:#B5695977\"> `</span><span style=\"color:#1E754F\">${</span><span style=\"color:#B56959\">itemWidth</span><span style=\"color:#1E754F\">}</span><span style=\"color:#B56959\">px</span><span style=\"color:#B5695977\">`</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">        </span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">        // 5. 找到当前最短列</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">        const</span><span style=\"color:#B07D48\"> minHeight</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> Math</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">min</span><span style=\"color:#999999\">(...</span><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">colHeights</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">        const</span><span style=\"color:#B07D48\"> colIndex</span><span style=\"color:#999999\"> =</span><span style=\"color:#A65E2B\"> this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">colHeights</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">indexOf</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">minHeight</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">        </span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">        // 6. 设置元素位置</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">        item</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">style</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">left</span><span style=\"color:#999999\"> =</span><span style=\"color:#B5695977\"> `</span><span style=\"color:#1E754F\">${</span><span style=\"color:#B56959\">colIndex </span><span style=\"color:#AB5959\">*</span><span style=\"color:#999999\"> (</span><span style=\"color:#B56959\">itemWidth </span><span style=\"color:#AB5959\">+</span><span style=\"color:#B56959\"> gap</span><span style=\"color:#999999\">)</span><span style=\"color:#1E754F\">}</span><span style=\"color:#B56959\">px</span><span style=\"color:#B5695977\">`</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">        item</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">style</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">top</span><span style=\"color:#999999\"> =</span><span style=\"color:#B5695977\"> `</span><span style=\"color:#1E754F\">${</span><span style=\"color:#B56959\">minHeight</span><span style=\"color:#1E754F\">}</span><span style=\"color:#B56959\">px</span><span style=\"color:#B5695977\">`</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">        </span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">        // 7. 更新列高度</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">        this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">colHeights</span><span style=\"color:#999999\">[</span><span style=\"color:#B07D48\">colIndex</span><span style=\"color:#999999\">]</span><span style=\"color:#AB5959\"> +=</span><span style=\"color:#B07D48\"> item</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">offsetHeight</span><span style=\"color:#AB5959\"> +</span><span style=\"color:#B07D48\"> gap</span></span>\n<span class=\"line\"><span style=\"color:#999999\">      })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">      // 8. 设置容器总高度</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">      container</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">style</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">height</span><span style=\"color:#999999\"> =</span><span style=\"color:#B5695977\"> `</span><span style=\"color:#1E754F\">${</span><span style=\"color:#B56959\">Math</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">max</span><span style=\"color:#999999\">(...</span><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#B56959\">colHeights</span><span style=\"color:#999999\">)</span><span style=\"color:#1E754F\">}</span><span style=\"color:#B56959\">px</span><span style=\"color:#B5695977\">`</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    },</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">    handleResize</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">      // 防抖处理更佳</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">      this</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">layout</span><span style=\"color:#999999\">()</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  },</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">  beforeDestroy</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    window</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">removeEventListener</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">resize</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#A65E2B\"> this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">handleResize</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">script</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">style</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">waterfall</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  position</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> relative</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  margin</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#A65E2B\"> auto</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">item</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  transition</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> all</span><span style=\"color:#2F798A\"> 0.3</span><span style=\"color:#AB5959\">s</span><span style=\"color:#999999\">;</span><span style=\"color:#A0ADA0\"> /* 可选动画效果 */</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">style</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p>注意：实际使用需处理图片异步加载（用imagesLoaded库）、性能优化（防抖）和响应式列数调整。CSS方案（columns或grid）可能有限制，JS方案更灵活。</p>\n"},{"title":"如何判断一个元素是否在可视区域中？","description":"","answer":"<p><a href=\"#Intersection\" target=\"_blank\" rel=\"noopener noreferrer\">如何判断一个元素是否在可视区域中？</a></p>\n"},{"title":"移动端如何实现上拉加载，下拉刷新？","description":"","answer":"<pre><code class=\"language-vue\"><div class=\"language-vue \"><span class=\"lang\">vue</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">template</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#B07D48\"> class</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">container</span><span style=\"color:#B5695977\">\"</span></span>\n<span class=\"line\"><span style=\"color:#999999\">       @</span><span style=\"color:#59873A\">touchstart</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\">touchStart</span><span style=\"color:#999999\">\"</span></span>\n<span class=\"line\"><span style=\"color:#999999\">       @</span><span style=\"color:#59873A\">touchmove</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\">touchMove</span><span style=\"color:#999999\">\"</span></span>\n<span class=\"line\"><span style=\"color:#999999\">       @</span><span style=\"color:#59873A\">touchend</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\">touchEnd</span><span style=\"color:#999999\">\"</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">       ref</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">scrollContainer</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    &#x3C;!-- 下拉刷新提示 --></span></span>\n<span class=\"line\"><span style=\"color:#999999\">    &#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#B07D48\"> class</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">refresh-tip</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\"> :</span><span style=\"color:#59873A\">style</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#999999\">{ </span><span style=\"color:#998418\">transform</span><span style=\"color:#999999\">: </span><span style=\"color:#B5695977\">`</span><span style=\"color:#B56959\">translateY(</span><span style=\"color:#1E754F\">${</span><span style=\"color:#B56959\">pullDownY</span><span style=\"color:#1E754F\">}</span><span style=\"color:#B56959\">px)</span><span style=\"color:#B5695977\">`</span><span style=\"color:#999999\"> }</span><span style=\"color:#999999\">\"</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">      {{</span><span style=\"color:#B07D48\"> refreshStatus</span><span style=\"color:#999999\"> }}</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    &#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    &#x3C;!-- 内容区域 --></span></span>\n<span class=\"line\"><span style=\"color:#999999\">    &#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#B07D48\"> class</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">content</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">      &#x3C;</span><span style=\"color:#1E754F\">slot</span><span style=\"color:#999999\">>&#x3C;/</span><span style=\"color:#1E754F\">slot</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">    &#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    &#x3C;!-- 上拉加载提示 --></span></span>\n<span class=\"line\"><span style=\"color:#999999\">    &#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#B07D48\"> class</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">load-tip</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">      {{</span><span style=\"color:#B07D48\"> loadStatus</span><span style=\"color:#999999\"> }}</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    &#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">template</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">script</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">export</span><span style=\"color:#1E754F\"> default</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">  data</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">    return</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#998418\">      startY</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">,</span><span style=\"color:#A0ADA0\">          // 触摸起始Y坐标</span></span>\n<span class=\"line\"><span style=\"color:#998418\">      pullDownY</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">,</span><span style=\"color:#A0ADA0\">       // 下拉距离</span></span>\n<span class=\"line\"><span style=\"color:#998418\">      isRefreshing</span><span style=\"color:#999999\">:</span><span style=\"color:#1E754F\"> false</span><span style=\"color:#999999\">,</span><span style=\"color:#A0ADA0\"> // 刷新状态</span></span>\n<span class=\"line\"><span style=\"color:#998418\">      isLoading</span><span style=\"color:#999999\">:</span><span style=\"color:#1E754F\"> false</span><span style=\"color:#A0ADA0\">    // 加载状态</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  },</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  methods</span><span style=\"color:#999999\">:</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">    touchStart</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">e</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">      // 1. 记录起始位置</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">      this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">startY</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> e</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">touches</span><span style=\"color:#999999\">[</span><span style=\"color:#2F798A\">0</span><span style=\"color:#999999\">].</span><span style=\"color:#B07D48\">pageY</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    },</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">    touchMove</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">e</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">      // 2. 计算下拉距离（仅限顶部下拉）</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">      if</span><span style=\"color:#999999\"> (</span><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">$refs</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">scrollContainer</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">scrollTop</span><span style=\"color:#999999\"> ></span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">)</span><span style=\"color:#1E754F\"> return</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">      </span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">      const</span><span style=\"color:#B07D48\"> currentY</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> e</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">touches</span><span style=\"color:#999999\">[</span><span style=\"color:#2F798A\">0</span><span style=\"color:#999999\">].</span><span style=\"color:#B07D48\">pageY</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">      this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">pullDownY</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> currentY</span><span style=\"color:#AB5959\"> -</span><span style=\"color:#A65E2B\"> this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">startY</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">      </span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">      // 3. 阻止原生滚动</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">      if</span><span style=\"color:#999999\"> (</span><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">pullDownY</span><span style=\"color:#999999\"> ></span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">        e</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">preventDefault</span><span style=\"color:#999999\">()</span></span>\n<span class=\"line\"><span style=\"color:#999999\">      }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    },</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">    touchEnd</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">      // 4. 触发刷新判断（下拉距离>60）</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">      if</span><span style=\"color:#999999\"> (</span><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">pullDownY</span><span style=\"color:#999999\"> ></span><span style=\"color:#2F798A\"> 60</span><span style=\"color:#AB5959\"> &#x26;&#x26;</span><span style=\"color:#AB5959\"> !</span><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">isRefreshing</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">        this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">isRefreshing</span><span style=\"color:#999999\"> =</span><span style=\"color:#1E754F\"> true</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">        this</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">$emit</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">refresh</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#999999\">      }</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">      this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">pullDownY</span><span style=\"color:#999999\"> =</span><span style=\"color:#2F798A\"> 0</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    },</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#59873A\">    checkScroll</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">      // 5. 上拉加载判断</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">      const</span><span style=\"color:#B07D48\"> container</span><span style=\"color:#999999\"> =</span><span style=\"color:#A65E2B\"> this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">$refs</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">scrollContainer</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">      const</span><span style=\"color:#999999\"> {</span><span style=\"color:#B07D48\"> scrollTop</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> scrollHeight</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> clientHeight</span><span style=\"color:#999999\"> }</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> container</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">      </span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">      // 6. 触底判断（距离底部&#x3C;50 且未在加载）</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">      if</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">scrollHeight</span><span style=\"color:#AB5959\"> -</span><span style=\"color:#B07D48\"> scrollTop</span><span style=\"color:#AB5959\"> -</span><span style=\"color:#B07D48\"> clientHeight</span><span style=\"color:#999999\"> &#x3C;</span><span style=\"color:#2F798A\"> 50</span><span style=\"color:#AB5959\"> &#x26;&#x26;</span><span style=\"color:#AB5959\"> !</span><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">isLoading</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">        this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">isLoading</span><span style=\"color:#999999\"> =</span><span style=\"color:#1E754F\"> true</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">        this</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">$emit</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">load</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#999999\">      }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  },</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">  mounted</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    // 7. 监听滚动事件</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">    this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">$refs</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">scrollContainer</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">addEventListener</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">scroll</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#A65E2B\"> this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">checkScroll</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  },</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">  beforeDestroy</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">    this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">$refs</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">scrollContainer</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">removeEventListener</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">scroll</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#A65E2B\"> this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">checkScroll</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">script</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">style</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">container</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  height</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 100</span><span style=\"color:#AB5959\">vh</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  overflow</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> auto</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  -webkit-overflow-scrolling</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> touch</span><span style=\"color:#999999\">;</span><span style=\"color:#A0ADA0\"> /* 启用弹性滚动 */</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">refresh-tip</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  position</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> fixed</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  top</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> -50</span><span style=\"color:#AB5959\">px</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  width</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 100</span><span style=\"color:#AB5959\">%</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  text-align</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> center</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  transition</span><span style=\"color:#999999\">:</span><span style=\"color:#393A34\"> transform </span><span style=\"color:#2F798A\">0.3</span><span style=\"color:#AB5959\">s</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">style</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>核心流程：</strong></p>\n<ol>\n<li><strong>下拉刷新</strong>：通过<code>touchstart/touchmove/touchend</code>计算下拉距离</li>\n<li><strong>上拉加载</strong>：监听容器滚动事件，计算触底距离</li>\n<li><strong>状态管理</strong>：通过标志位防止重复触发</li>\n<li><strong>事件通信</strong>：通过<code>$emit</code>触发父组件数据更新</li>\n</ol>\n<p><strong>使用示例：</strong></p>\n<pre><code class=\"language-vue\"><div class=\"language-vue \"><span class=\"lang\">vue</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">ScrollWrapper</span><span style=\"color:#999999\"> @</span><span style=\"color:#59873A\">refresh</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\">fetchData</span><span style=\"color:#999999\">\"</span><span style=\"color:#999999\"> @</span><span style=\"color:#59873A\">load</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\">loadMore</span><span style=\"color:#999999\">\"</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#393A34\">  &#x3C;!-- 内容列表 --></span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">ScrollWrapper</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>优化方向：</strong></p>\n<ul>\n<li>添加加载动画/状态提示</li>\n<li>增加防抖节流</li>\n<li>支持自定义阈值</li>\n<li>使用IntersectionObserver优化触底检测</li>\n</ul>\n"},{"title":"如何实现将数组转化为树状结构？","description":"","answer":"<p><strong>方法一</strong></p>\n<p>很容易想到的一个方法就是利用递归：每次遍历时，找到将本次遍历的根节点作为父节点的所有子节点，直至找不到有子节点的。</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#AB5959\">function</span><span style=\"color:#59873A\"> arrayToTree</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">list</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> root</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">  return</span><span style=\"color:#B07D48\"> list</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    .</span><span style=\"color:#59873A\">filter</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">item</span><span style=\"color:#999999\"> =></span><span style=\"color:#B07D48\"> item</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">parent_id</span><span style=\"color:#AB5959\"> ===</span><span style=\"color:#B07D48\"> root</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    .</span><span style=\"color:#59873A\">map</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">item</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> ({</span><span style=\"color:#999999\"> ...</span><span style=\"color:#B07D48\">item</span><span style=\"color:#999999\">,</span><span style=\"color:#998418\"> children</span><span style=\"color:#999999\">:</span><span style=\"color:#59873A\"> arrayToTree</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">list</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> item</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">id</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> }))</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>方法二</strong></p>\n<p>可以利用浅拷贝是拷贝对象的内存地址的特性，我们修改拷贝后，所有引用都会同步修改。利用这个特点，我们将子节点依次放入父节点，最后将最外层父节点返回即可。</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#AB5959\">function</span><span style=\"color:#59873A\"> arrayToTree</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">list</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> root</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> result</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> []</span><span style=\"color:#A0ADA0\"> // 用于存放结果</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> map</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> {}</span><span style=\"color:#A0ADA0\"> // 用于存放 list 下的节点</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  // 遍历 list</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">  for</span><span style=\"color:#999999\"> (</span><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> item</span><span style=\"color:#AB5959\"> of</span><span style=\"color:#B07D48\"> list</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    // 1. 获取节点的 id 和 父 id</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">    const</span><span style=\"color:#999999\"> {</span><span style=\"color:#B07D48\"> id</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> parent_id</span><span style=\"color:#999999\"> }</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> item</span><span style=\"color:#A0ADA0\"> // ES6 解构赋值</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    // 2. 将节点存入 map</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">    if</span><span style=\"color:#999999\"> (</span><span style=\"color:#AB5959\">!</span><span style=\"color:#B07D48\">map</span><span style=\"color:#999999\">[</span><span style=\"color:#B07D48\">id</span><span style=\"color:#999999\">])</span><span style=\"color:#B07D48\"> map</span><span style=\"color:#999999\">[</span><span style=\"color:#B07D48\">id</span><span style=\"color:#999999\">]</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> {}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    // 3. 根据 id，将节点与之前存入的子节点合并</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    map</span><span style=\"color:#999999\">[</span><span style=\"color:#B07D48\">id</span><span style=\"color:#999999\">]</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> map</span><span style=\"color:#999999\">[</span><span style=\"color:#B07D48\">id</span><span style=\"color:#999999\">].</span><span style=\"color:#B07D48\">children</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">      ?</span><span style=\"color:#999999\"> {</span><span style=\"color:#999999\"> ...</span><span style=\"color:#B07D48\">item</span><span style=\"color:#999999\">,</span><span style=\"color:#998418\"> children</span><span style=\"color:#999999\">:</span><span style=\"color:#B07D48\"> map</span><span style=\"color:#999999\">[</span><span style=\"color:#B07D48\">id</span><span style=\"color:#999999\">].</span><span style=\"color:#B07D48\">children</span><span style=\"color:#999999\"> }</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">      :</span><span style=\"color:#999999\"> {</span><span style=\"color:#999999\"> ...</span><span style=\"color:#B07D48\">item</span><span style=\"color:#999999\"> }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    // 4. 如果是根节点，存入 result</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">    if</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">parent_id</span><span style=\"color:#AB5959\"> ===</span><span style=\"color:#B07D48\"> root</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">      result</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">push</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">map</span><span style=\"color:#999999\">[</span><span style=\"color:#B07D48\">id</span><span style=\"color:#999999\">])</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span><span style=\"color:#1E754F\"> else</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">      // 5. 反之，存入父节点</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">      if</span><span style=\"color:#999999\"> (</span><span style=\"color:#AB5959\">!</span><span style=\"color:#B07D48\">map</span><span style=\"color:#999999\">[</span><span style=\"color:#B07D48\">parent_id</span><span style=\"color:#999999\">])</span><span style=\"color:#B07D48\"> map</span><span style=\"color:#999999\">[</span><span style=\"color:#B07D48\">parent_id</span><span style=\"color:#999999\">]</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> {}</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">      if</span><span style=\"color:#999999\"> (</span><span style=\"color:#AB5959\">!</span><span style=\"color:#B07D48\">map</span><span style=\"color:#999999\">[</span><span style=\"color:#B07D48\">parent_id</span><span style=\"color:#999999\">].</span><span style=\"color:#B07D48\">children</span><span style=\"color:#999999\">)</span><span style=\"color:#B07D48\"> map</span><span style=\"color:#999999\">[</span><span style=\"color:#B07D48\">parent_id</span><span style=\"color:#999999\">].</span><span style=\"color:#B07D48\">children</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> []</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">      map</span><span style=\"color:#999999\">[</span><span style=\"color:#B07D48\">parent_id</span><span style=\"color:#999999\">].</span><span style=\"color:#B07D48\">children</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">push</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">map</span><span style=\"color:#999999\">[</span><span style=\"color:#B07D48\">id</span><span style=\"color:#999999\">])</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  // 将结果返回</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">  return</span><span style=\"color:#B07D48\"> result</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n"},{"title":"高并发场景下前端如何优化？","description":"","answer":"<p>高并发是指在极短单位时间内，有很多用户同时的访问同一 API 接口或者 Url 地址，造成极多个请求同时发起到服务器。它经常会发生在有大活跃用户量，用户高聚集的业务场景中。大部分的高并发处理基本都是在后端处理，但是在部分特殊情况下，后端无法阻止用户行为，需要前端做配合。例如在抢购、秒杀等场景。</p>\n<p>前端可以做些什么？</p>\n<ol>\n<li>合并请求</li>\n<li>节流防抖</li>\n<li>数据分页+虚拟滚动，避免全量加载</li>\n<li>代码压缩</li>\n<li>压缩图片</li>\n<li>图片懒加载</li>\n<li>图片使用Base64编码，雪碧图</li>\n<li>CDN加速 + 文件名哈希强缓存</li>\n</ol>\n"},{"title":"做一个 Dialog 组件，说说你设计的思路?它应该有什么功能?","description":"","answer":"<p>我设计的Dialog组件核心功能包括：遮罩层、可关闭机制、自定义内容插槽、动画过渡。支持v-model控制显隐，提供标题/内容/底部按钮区插槽，并暴露确认/取消事件。</p>\n<p><strong>简易实现（Vue3）：</strong></p>\n<pre><code class=\"language-vue\"><div class=\"language-vue \"><span class=\"lang\">vue</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">template</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;</span><span style=\"color:#1E754F\">Teleport</span><span style=\"color:#B07D48\"> to</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">body</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">    &#x3C;</span><span style=\"color:#1E754F\">Transition</span><span style=\"color:#B07D48\"> name</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">fade</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">      &#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#1E754F\"> v-if</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\">modelValue</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\"> class</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">mask</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">        &#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#B07D48\"> class</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">dialog</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">          &#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#B07D48\"> class</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">header</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">            &#x3C;</span><span style=\"color:#1E754F\">slot</span><span style=\"color:#B07D48\"> name</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">title</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">>{{</span><span style=\"color:#B07D48\"> title</span><span style=\"color:#999999\"> }}&#x3C;/</span><span style=\"color:#1E754F\">slot</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">            &#x3C;</span><span style=\"color:#1E754F\">span</span><span style=\"color:#999999\"> @</span><span style=\"color:#59873A\">click</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#59873A\">$emit</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">update:modelValue</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#1E754F\"> false</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\">\"</span><span style=\"color:#999999\">></span><span style=\"color:#393A34\">×</span><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">span</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">          &#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">          &#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#B07D48\"> class</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">content</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">            &#x3C;</span><span style=\"color:#1E754F\">slot</span><span style=\"color:#999999\">>&#x3C;/</span><span style=\"color:#1E754F\">slot</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">          &#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">          &#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#B07D48\"> class</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">footer</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">            &#x3C;</span><span style=\"color:#1E754F\">slot</span><span style=\"color:#B07D48\"> name</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">footer</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">              &#x3C;</span><span style=\"color:#1E754F\">button</span><span style=\"color:#999999\"> @</span><span style=\"color:#59873A\">click</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#59873A\">$emit</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">cancel</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\">\"</span><span style=\"color:#999999\">></span><span style=\"color:#393A34\">取消</span><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">button</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">              &#x3C;</span><span style=\"color:#1E754F\">button</span><span style=\"color:#999999\"> @</span><span style=\"color:#59873A\">click</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#59873A\">$emit</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">confirm</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\">\"</span><span style=\"color:#999999\">></span><span style=\"color:#393A34\">确定</span><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">button</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">            &#x3C;/</span><span style=\"color:#1E754F\">slot</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">          &#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">        &#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">      &#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">    &#x3C;/</span><span style=\"color:#1E754F\">Transition</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;/</span><span style=\"color:#1E754F\">Teleport</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">template</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">script</span><span style=\"color:#B07D48\"> setup</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#59873A\">defineProps</span><span style=\"color:#999999\">({</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  modelValue</span><span style=\"color:#999999\">:</span><span style=\"color:#B07D48\"> Boolean</span><span style=\"color:#999999\">,</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  title</span><span style=\"color:#999999\">:</span><span style=\"color:#B07D48\"> String</span></span>\n<span class=\"line\"><span style=\"color:#999999\">})</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">defineEmits</span><span style=\"color:#999999\">([</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">update:modelValue</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">confirm</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">cancel</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">])</span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">script</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">style</span><span style=\"color:#B07D48\"> scoped</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">mask</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  position</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> fixed</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  top</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\">0</span><span style=\"color:#999999\">;</span><span style=\"color:#998418\"> left</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\">0</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\"> </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  width</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\">100</span><span style=\"color:#AB5959\">%</span><span style=\"color:#999999\">;</span><span style=\"color:#998418\"> height</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\">100</span><span style=\"color:#AB5959\">%</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  background</span><span style=\"color:#999999\">:</span><span style=\"color:#998418\"> rgba</span><span style=\"color:#999999\">(</span><span style=\"color:#2F798A\">0</span><span style=\"color:#999999\">,</span><span style=\"color:#2F798A\">0</span><span style=\"color:#999999\">,</span><span style=\"color:#2F798A\">0</span><span style=\"color:#999999\">,</span><span style=\"color:#2F798A\">0.5</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  display</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> grid</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  place-items</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> center</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">dialog</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  background</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> white</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  padding</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 20</span><span style=\"color:#AB5959\">px</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  border-radius</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 4</span><span style=\"color:#AB5959\">px</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  min-width</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 300</span><span style=\"color:#AB5959\">px</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">fade-enter-active</span><span style=\"color:#999999\">,</span></span>\n<span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">fade-leave-active</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  transition</span><span style=\"color:#999999\">:</span><span style=\"color:#393A34\"> opacity </span><span style=\"color:#2F798A\">0.3</span><span style=\"color:#AB5959\">s</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">fade-enter-from</span><span style=\"color:#999999\">,</span></span>\n<span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">fade-leave-to</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  opacity</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">style</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>如果考虑全局服务式调用：</strong></p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#A0ADA0\">// 全局服务封装</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">let</span><span style=\"color:#B07D48\"> dialogInstance</span><span style=\"color:#999999\"> =</span><span style=\"color:#AB5959\"> null</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#1E754F\">export</span><span style=\"color:#AB5959\"> const</span><span style=\"color:#59873A\"> useDialog</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> ()</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#59873A\"> createDialog</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">options</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">    if</span><span style=\"color:#999999\"> (</span><span style=\"color:#AB5959\">!</span><span style=\"color:#B07D48\">dialogInstance</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">      const</span><span style=\"color:#B07D48\"> container</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> document</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">createElement</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">div</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">      dialogInstance</span><span style=\"color:#999999\"> =</span><span style=\"color:#59873A\"> createApp</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">DialogComponent</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> options</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">      document</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">body</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">appendChild</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">container</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">      dialogInstance</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">mount</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">container</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">    return</span><span style=\"color:#B07D48\"> dialogInstance</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#1E754F\">  return</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">    open</span><span style=\"color:#999999\">:</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">options</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#59873A\"> createDialog</span><span style=\"color:#999999\">().</span><span style=\"color:#59873A\">open</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">options</span><span style=\"color:#999999\">),</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">    close</span><span style=\"color:#999999\">:</span><span style=\"color:#999999\"> ()</span><span style=\"color:#999999\"> =></span><span style=\"color:#B07D48\"> dialogInstance</span><span style=\"color:#999999\">?.</span><span style=\"color:#59873A\">unmount</span><span style=\"color:#999999\">()</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">// 组件增强</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">defineProps</span><span style=\"color:#999999\">({</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  teleportTo</span><span style=\"color:#999999\">:</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#998418\">    type</span><span style=\"color:#999999\">:</span><span style=\"color:#999999\"> [</span><span style=\"color:#B07D48\">String</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> HTMLElement</span><span style=\"color:#999999\">],</span></span>\n<span class=\"line\"><span style=\"color:#998418\">    default</span><span style=\"color:#999999\">:</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">body</span><span style=\"color:#B5695977\">'</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">})</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>使用方式：</strong></p>\n<pre><code class=\"language-vue\"><div class=\"language-vue \"><span class=\"lang\">vue</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#A0ADA0\">&#x3C;!-- 组件式 --></span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">MyDialog</span><span style=\"color:#59873A\"> v-model</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\">show</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\"> teleport-to</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">#custom-root</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\"> /></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">&#x3C;!-- 服务式 --></span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">script</span><span style=\"color:#B07D48\"> setup</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#999999\"> {</span><span style=\"color:#B07D48\"> open</span><span style=\"color:#999999\"> }</span><span style=\"color:#999999\"> =</span><span style=\"color:#59873A\"> useDialog</span><span style=\"color:#999999\">()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#59873A\"> showDialog</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> ()</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">  open</span><span style=\"color:#999999\">({</span></span>\n<span class=\"line\"><span style=\"color:#998418\">    title</span><span style=\"color:#999999\">:</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">提示</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span></span>\n<span class=\"line\"><span style=\"color:#998418\">    content</span><span style=\"color:#999999\">:</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">确定删除？</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">    onConfirm</span><span style=\"color:#999999\">:</span><span style=\"color:#999999\"> ()</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span><span style=\"color:#A0ADA0\">/* ... */</span><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  })</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">script</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n"},{"title":"如何实现浏览器内多个标签页之间的通信？","description":"","answer":"<p>实现多标签页通信的常用方案：</p>\n<ol>\n<li>\n<p><strong>LocalStorage + storage事件</strong>（同源）</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#A0ADA0\">// A页修改数据</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">localStorage</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">setItem</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">key</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> JSON</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">stringify</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">data</span><span style=\"color:#999999\">));</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">// B页监听</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">window</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">addEventListener</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">storage</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">e</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  console</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">log</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">e</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">key</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> e</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">newValue</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">});</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>BroadcastChannel API</strong>（现代浏览器）</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#A0ADA0\">// 各页创建同名字频道</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> channel</span><span style=\"color:#999999\"> =</span><span style=\"color:#AB5959\"> new</span><span style=\"color:#59873A\"> BroadcastChannel</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">chat</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">channel</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">postMessage</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">data</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">channel</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">onmessage</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">e</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span><span style=\"color:#A0ADA0\"> /* 处理消息 */</span><span style=\"color:#999999\"> };</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>SharedWorker</strong>（复杂场景）</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#A0ADA0\">// Worker中维护消息中转站</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">onconnect</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">e</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> port</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> e</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">ports</span><span style=\"color:#999999\">[</span><span style=\"color:#2F798A\">0</span><span style=\"color:#999999\">];</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  port</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">onmessage</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">e</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    // 广播给所有连接的页面</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  };</span></span>\n<span class=\"line\"><span style=\"color:#999999\">};</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>window.postMessage</strong>（跨域场景）</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#A0ADA0\">// 通过 opener 引用传递</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">window</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">open</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">pageB</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">).</span><span style=\"color:#59873A\">postMessage</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">data</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> origin</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n</ol>\n<p><strong>对比建议</strong>：简单数据用LocalStorage，实时通信用BroadcastChannel，持久化复杂数据用SharedWorker，注意同源策略限制。</p>\n"},{"title":"如何实现图片的懒加载和预加载","description":"","answer":"<p><strong>懒加载实现思路</strong>：</p>\n<ol>\n<li>监听滚动+判断视口位置（或用IntersectionObserver）</li>\n<li>替换data-src为真实src</li>\n</ol>\n<p><strong>预加载实现思路</strong>：</p>\n<ol>\n<li>提前创建Image对象加载图片</li>\n<li>缓存到浏览器</li>\n</ol>\n<p><strong>Vue实现示例</strong>：</p>\n<pre><code class=\"language-vue\"><div class=\"language-vue \"><span class=\"lang\">vue</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">script</span><span style=\"color:#B07D48\"> setup</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">// 图片懒加载指令</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> vLazyload</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">  mounted</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">el</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">    const</span><span style=\"color:#B07D48\"> observer</span><span style=\"color:#999999\"> =</span><span style=\"color:#AB5959\"> new</span><span style=\"color:#59873A\"> IntersectionObserver</span><span style=\"color:#999999\">((</span><span style=\"color:#B07D48\">entries</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">      entries</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">forEach</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">entry</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">        if</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">entry</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">isIntersecting</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">          // 进入视口时加载图片</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">          el</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">src</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> el</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">dataset</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">src</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">          observer</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">unobserve</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">el</span><span style=\"color:#999999\">)</span><span style=\"color:#A0ADA0\"> // 停止监听</span></span>\n<span class=\"line\"><span style=\"color:#999999\">        }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">      })</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    })</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    observer</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">observe</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">el</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">// 图片预加载方法</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#59873A\"> preloadImages</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">urls</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  urls</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">forEach</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">url</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">    const</span><span style=\"color:#B07D48\"> img</span><span style=\"color:#999999\"> =</span><span style=\"color:#AB5959\"> new</span><span style=\"color:#59873A\"> Image</span><span style=\"color:#999999\">()</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    img</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">src</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> url</span><span style=\"color:#A0ADA0\"> // 触发浏览器缓存</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  })</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">script</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">template</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  &#x3C;!-- 懒加载使用 --></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;</span><span style=\"color:#1E754F\">img</span><span style=\"color:#59873A\"> v-lazyload</span><span style=\"color:#B07D48\"> data-src</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">real-image.jpg</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B07D48\"> alt</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"\"</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  &#x3C;!-- 预加载触发 --></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;</span><span style=\"color:#1E754F\">button</span><span style=\"color:#999999\"> @</span><span style=\"color:#59873A\">click</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#59873A\">preloadImages</span><span style=\"color:#999999\">([</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">next-page-img.jpg</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">])</span><span style=\"color:#999999\">\"</span><span style=\"color:#999999\">></span><span style=\"color:#393A34\">预加载图片</span><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">button</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">template</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>关键点</strong>：懒加载用观察者优化性能，预加载利用浏览器缓存机制。实际生产需加加载状态和错误处理。</p>\n"},{"title":"一个列表，假设有 100000 个数据，这个该怎么办？","description":"","answer":"<p><strong>核心解决方案</strong>：虚拟滚动 + 数据分片\n（避免同时渲染全部DOM）</p>\n<p><strong>实现步骤</strong>：</p>\n<ol>\n<li><strong>计算可视区域高度</strong></li>\n<li><strong>动态渲染可视区数据</strong>（startIndex-endIndex）</li>\n<li><strong>监听滚动动态更新</strong></li>\n</ol>\n<p><strong>Vue3示例</strong>：</p>\n<pre><code class=\"language-vue\"><div class=\"language-vue \"><span class=\"lang\">vue</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">script</span><span style=\"color:#B07D48\"> setup</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">import</span><span style=\"color:#999999\"> {</span><span style=\"color:#B07D48\"> ref</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> computed</span><span style=\"color:#999999\"> }</span><span style=\"color:#1E754F\"> from</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">vue</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> itemHeight</span><span style=\"color:#999999\"> =</span><span style=\"color:#2F798A\"> 40</span><span style=\"color:#999999\">;</span><span style=\"color:#A0ADA0\"> // 每项高度</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> total</span><span style=\"color:#999999\"> =</span><span style=\"color:#2F798A\"> 100000</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> visibleCount</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> Math</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">ceil</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">window</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">innerHeight</span><span style=\"color:#AB5959\"> /</span><span style=\"color:#B07D48\"> itemHeight</span><span style=\"color:#999999\">);</span><span style=\"color:#A0ADA0\"> // 可视区条数</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> startIndex</span><span style=\"color:#999999\"> =</span><span style=\"color:#59873A\"> ref</span><span style=\"color:#999999\">(</span><span style=\"color:#2F798A\">0</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">// 生成模拟数据</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> list</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> Array</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">from</span><span style=\"color:#999999\">({</span><span style=\"color:#998418\">length</span><span style=\"color:#999999\">:</span><span style=\"color:#B07D48\"> total</span><span style=\"color:#999999\">},</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">_</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\">i</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#B5695977\"> `</span><span style=\"color:#B56959\">Item </span><span style=\"color:#1E754F\">${</span><span style=\"color:#B56959\">i</span><span style=\"color:#AB5959\">+</span><span style=\"color:#2F798A\">1</span><span style=\"color:#1E754F\">}</span><span style=\"color:#B5695977\">`</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">// 可视区数据切片</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> visibleData</span><span style=\"color:#999999\"> =</span><span style=\"color:#59873A\"> computed</span><span style=\"color:#999999\">(()</span><span style=\"color:#999999\"> =></span><span style=\"color:#393A34\"> </span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  list</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">slice</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">startIndex</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">value</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> startIndex</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">value</span><span style=\"color:#AB5959\"> +</span><span style=\"color:#B07D48\"> visibleCount</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#59873A\"> handleScroll</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">e</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  startIndex</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">value</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> Math</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">floor</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">e</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">target</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">scrollTop</span><span style=\"color:#AB5959\"> /</span><span style=\"color:#B07D48\"> itemHeight</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">};</span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">script</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">template</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#393A34\"> </span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    class</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">virtual-list</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#393A34\"> </span></span>\n<span class=\"line\"><span style=\"color:#999999\">    @</span><span style=\"color:#59873A\">scroll</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\">handleScroll</span><span style=\"color:#999999\">\"</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    :</span><span style=\"color:#59873A\">style</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#999999\">{ </span><span style=\"color:#998418\">height</span><span style=\"color:#999999\">: </span><span style=\"color:#B5695977\">`</span><span style=\"color:#1E754F\">${</span><span style=\"color:#B56959\">visibleCount </span><span style=\"color:#AB5959\">*</span><span style=\"color:#B56959\"> itemHeight</span><span style=\"color:#1E754F\">}</span><span style=\"color:#B56959\">px</span><span style=\"color:#B5695977\">`</span><span style=\"color:#999999\"> }</span><span style=\"color:#999999\">\"</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  ></span></span>\n<span class=\"line\"><span style=\"color:#999999\">    &#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#B07D48\"> class</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">scroll-holder</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#393A34\"> </span></span>\n<span class=\"line\"><span style=\"color:#999999\">         :</span><span style=\"color:#59873A\">style</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#999999\">{ </span><span style=\"color:#998418\">height</span><span style=\"color:#999999\">: </span><span style=\"color:#B5695977\">`</span><span style=\"color:#1E754F\">${</span><span style=\"color:#B56959\">total </span><span style=\"color:#AB5959\">*</span><span style=\"color:#B56959\"> itemHeight</span><span style=\"color:#1E754F\">}</span><span style=\"color:#B56959\">px</span><span style=\"color:#B5695977\">`</span><span style=\"color:#999999\"> }</span><span style=\"color:#999999\">\"</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">      &#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#393A34\"> </span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">        class</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">item</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#393A34\"> </span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">        v-for</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">item</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> index</span><span style=\"color:#999999\">)</span><span style=\"color:#AB5959\"> in</span><span style=\"color:#B07D48\"> visibleData</span><span style=\"color:#999999\">\"</span></span>\n<span class=\"line\"><span style=\"color:#999999\">        :</span><span style=\"color:#59873A\">key</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\">index</span><span style=\"color:#999999\">\"</span></span>\n<span class=\"line\"><span style=\"color:#999999\">        :</span><span style=\"color:#59873A\">style</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#999999\">{ </span><span style=\"color:#998418\">transform</span><span style=\"color:#999999\">: </span><span style=\"color:#B5695977\">`</span><span style=\"color:#B56959\">translateY(</span><span style=\"color:#1E754F\">${</span><span style=\"color:#B56959\">startIndex </span><span style=\"color:#AB5959\">*</span><span style=\"color:#B56959\"> itemHeight</span><span style=\"color:#1E754F\">}</span><span style=\"color:#B56959\">px)</span><span style=\"color:#B5695977\">`</span><span style=\"color:#999999\"> }</span><span style=\"color:#999999\">\"</span></span>\n<span class=\"line\"><span style=\"color:#999999\">      ></span></span>\n<span class=\"line\"><span style=\"color:#999999\">        {{</span><span style=\"color:#B07D48\"> item</span><span style=\"color:#999999\"> }}</span></span>\n<span class=\"line\"><span style=\"color:#999999\">      &#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">    &#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">template</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">style</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">virtual-list</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  overflow-y</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> auto</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">scroll-holder</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  position</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> relative</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">item</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  position</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> absolute</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  width</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 100</span><span style=\"color:#AB5959\">%</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  height</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 40</span><span style=\"color:#AB5959\">px</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  line-height</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 40</span><span style=\"color:#AB5959\">px</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">style</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>优化点</strong>：</p>\n<ol>\n<li>只维护<code>visibleCount+2</code>个DOM节点</li>\n<li>滚动时通过transform位移代替重新渲染</li>\n<li>实际项目建议用<code>vue-virtual-scroller</code>等成熟库</li>\n</ol>\n"},{"title":"如何实现一键 Copy 功能","description":"","answer":"<p><strong>核心步骤</strong>：</p>\n<ol>\n<li>创建隐藏的<code>textarea</code>临时元素</li>\n<li>使用<code>Clipboard API</code>或<code>execCommand</code>写入剪贴板</li>\n<li>移除临时元素并反馈结果</li>\n</ol>\n<p><strong>Vue3实现</strong>：</p>\n<pre><code class=\"language-vue\"><div class=\"language-vue \"><span class=\"lang\">vue</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">script</span><span style=\"color:#B07D48\"> setup</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#59873A\"> copyText</span><span style=\"color:#999999\"> =</span><span style=\"color:#AB5959\"> async</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">text</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">  try</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    // 现代API方案</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">    await</span><span style=\"color:#B07D48\"> navigator</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">clipboard</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">writeText</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">text</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">    alert</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">复制成功</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span><span style=\"color:#1E754F\"> catch</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    // 兼容方案</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">    const</span><span style=\"color:#B07D48\"> textarea</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> document</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">createElement</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">textarea</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    textarea</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">value</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> text</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    document</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">body</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">appendChild</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">textarea</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    textarea</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">select</span><span style=\"color:#999999\">()</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    document</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">execCommand</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">copy</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    document</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">body</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">removeChild</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">textarea</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">    alert</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">复制成功</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">script</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">template</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;</span><span style=\"color:#1E754F\">button</span><span style=\"color:#999999\"> @</span><span style=\"color:#59873A\">click</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#59873A\">copyText</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">要复制的内容</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\">\"</span><span style=\"color:#999999\">></span><span style=\"color:#393A34\">一键复制</span><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">button</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">template</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>优化点</strong>：</p>\n<ul>\n<li>优先使用<code>Clipboard API</code>（更安全）</li>\n<li>旧浏览器自动降级兼容</li>\n<li>生产环境建议封装成指令+Toast提示</li>\n</ul>\n"},{"title":"怎么实现“点击回到顶部”的功能？","description":"","answer":""},{"title":"前端如何实现即时通讯？","description":"","answer":"<p><strong>核心方案</strong>：WebSocket 长连接 + 消息队列\n（替代方案：短轮询/SSE，但实时性较差）</p>\n<p><strong>实现流程</strong>：</p>\n<ol>\n<li>建立 WebSocket 连接</li>\n<li>双向通信：监听消息/发送消息</li>\n<li>心跳检测保持连接</li>\n<li>异常重连机制</li>\n</ol>\n<p><strong>Vue3 简易实现</strong>：</p>\n<pre><code class=\"language-vue\"><div class=\"language-vue \"><span class=\"lang\">vue</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">script</span><span style=\"color:#B07D48\"> setup</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">import</span><span style=\"color:#999999\"> {</span><span style=\"color:#B07D48\"> ref</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> onMounted</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> onBeforeUnmount</span><span style=\"color:#999999\"> }</span><span style=\"color:#1E754F\"> from</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">vue</span><span style=\"color:#B5695977\">'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> ws</span><span style=\"color:#999999\"> =</span><span style=\"color:#59873A\"> ref</span><span style=\"color:#999999\">(</span><span style=\"color:#AB5959\">null</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> messages</span><span style=\"color:#999999\"> =</span><span style=\"color:#59873A\"> ref</span><span style=\"color:#999999\">([])</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">// 1. 初始化连接</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#59873A\"> initWebSocket</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> ()</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  ws</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">value</span><span style=\"color:#999999\"> =</span><span style=\"color:#AB5959\"> new</span><span style=\"color:#59873A\"> WebSocket</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">wss://your-websocket-endpoint</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  // 2. 监听消息</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  ws</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">value</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">onmessage</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">e</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    messages</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">value</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">push</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">JSON</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">parse</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">e</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">data</span><span style=\"color:#999999\">))</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  // 3. 心跳检测</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  let</span><span style=\"color:#B07D48\"> heartTimer</span><span style=\"color:#999999\"> =</span><span style=\"color:#59873A\"> setInterval</span><span style=\"color:#999999\">(()</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    ws</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">value</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">send</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">ping</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  },</span><span style=\"color:#2F798A\"> 30000</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  // 4. 异常处理</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  ws</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">value</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">onclose</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> ()</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">    clearInterval</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">heartTimer</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">    setTimeout</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">initWebSocket</span><span style=\"color:#999999\">,</span><span style=\"color:#2F798A\"> 2000</span><span style=\"color:#999999\">)</span><span style=\"color:#A0ADA0\"> // 断线重连</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">// 发送消息</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#59873A\"> sendMessage</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">text</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  ws</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">value</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">send</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">JSON</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">stringify</span><span style=\"color:#999999\">({</span></span>\n<span class=\"line\"><span style=\"color:#998418\">    type</span><span style=\"color:#999999\">:</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">text</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span></span>\n<span class=\"line\"><span style=\"color:#998418\">    content</span><span style=\"color:#999999\">:</span><span style=\"color:#B07D48\"> text</span><span style=\"color:#999999\">,</span></span>\n<span class=\"line\"><span style=\"color:#998418\">    timestamp</span><span style=\"color:#999999\">:</span><span style=\"color:#B07D48\"> Date</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">now</span><span style=\"color:#999999\">()</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }))</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#59873A\">onMounted</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">initWebSocket</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">onBeforeUnmount</span><span style=\"color:#999999\">(()</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  ws</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">value</span><span style=\"color:#999999\">?.</span><span style=\"color:#59873A\">close</span><span style=\"color:#999999\">()</span><span style=\"color:#A0ADA0\"> // 清理连接</span></span>\n<span class=\"line\"><span style=\"color:#999999\">})</span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">script</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">template</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#B07D48\"> class</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">chat-box</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">    &#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#1E754F\"> v-for</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\">msg</span><span style=\"color:#AB5959\"> in</span><span style=\"color:#B07D48\"> messages</span><span style=\"color:#999999\">\"</span><span style=\"color:#999999\"> :</span><span style=\"color:#59873A\">key</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\">msg</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">timestamp</span><span style=\"color:#999999\">\"</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">      {{</span><span style=\"color:#B07D48\"> msg</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">content</span><span style=\"color:#999999\"> }}</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    &#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">    &#x3C;</span><span style=\"color:#1E754F\">input</span><span style=\"color:#999999\"> @</span><span style=\"color:#59873A\">keyup</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">enter</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\">sendMessage</span><span style=\"color:#999999\">\"</span><span style=\"color:#999999\"> /></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">template</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>关键优化</strong>：</p>\n<ul>\n<li>消息数据格式化（JSON编解码）</li>\n<li>心跳防止连接断开（Nginx默认60s超时）</li>\n<li>生产环境需增加消息状态反馈/消息重发机制</li>\n</ul>\n"},{"title":"前端如何实现截图？","description":"","answer":"<p><strong>核心方案</strong>：使用 <code>html2canvas</code> 库实现 DOM 转 Canvas\n<strong>流程</strong>：</p>\n<ol>\n<li>捕获目标 DOM 元素</li>\n<li>生成 Canvas 并转图片</li>\n<li>触发下载或预览</li>\n</ol>\n<p><strong>Vue3 实现</strong>（需先安装 <code>html2canvas</code>）：</p>\n<pre><code class=\"language-vue\"><div class=\"language-vue \"><span class=\"lang\">vue</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">script</span><span style=\"color:#B07D48\"> setup</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">import</span><span style=\"color:#999999\"> {</span><span style=\"color:#B07D48\"> ref</span><span style=\"color:#999999\"> }</span><span style=\"color:#1E754F\"> from</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">vue</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">import</span><span style=\"color:#B07D48\"> html2canvas</span><span style=\"color:#1E754F\"> from</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">html2canvas</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> targetRef</span><span style=\"color:#999999\"> =</span><span style=\"color:#59873A\"> ref</span><span style=\"color:#999999\">(</span><span style=\"color:#AB5959\">null</span><span style=\"color:#999999\">);</span><span style=\"color:#A0ADA0\"> // 1. 获取截图目标元素</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#59873A\"> capture</span><span style=\"color:#999999\"> =</span><span style=\"color:#AB5959\"> async</span><span style=\"color:#999999\"> ()</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  // 2. 生成 Canvas</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> canvas</span><span style=\"color:#999999\"> =</span><span style=\"color:#1E754F\"> await</span><span style=\"color:#59873A\"> html2canvas</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">targetRef</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">value</span><span style=\"color:#999999\">,</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#998418\">    useCORS</span><span style=\"color:#999999\">:</span><span style=\"color:#1E754F\"> true</span><span style=\"color:#A0ADA0\"> // 处理跨域图片</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  });</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  // 3. 转图片并下载</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> link</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> document</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">createElement</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">a</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  link</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">download</span><span style=\"color:#999999\"> =</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">screenshot.png</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  link</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">href</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> canvas</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">toDataURL</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  link</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">click</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#999999\">};</span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">script</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">template</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  &#x3C;!-- 截图区域 --></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#B07D48\"> ref</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">targetRef</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B07D48\"> class</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">screenshot-area</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">    &#x3C;</span><span style=\"color:#1E754F\">h1</span><span style=\"color:#999999\">></span><span style=\"color:#393A34\">截我！</span><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">h1</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">    &#x3C;</span><span style=\"color:#1E754F\">p</span><span style=\"color:#999999\">></span><span style=\"color:#393A34\">动态内容</span><span style=\"color:#999999\">{{</span><span style=\"color:#AB5959\"> new</span><span style=\"color:#59873A\"> Date</span><span style=\"color:#999999\">().</span><span style=\"color:#59873A\">toLocaleString</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> }}&#x3C;/</span><span style=\"color:#1E754F\">p</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  &#x3C;!-- 触发按钮 --></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;</span><span style=\"color:#1E754F\">button</span><span style=\"color:#999999\"> @</span><span style=\"color:#59873A\">click</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\">capture</span><span style=\"color:#999999\">\"</span><span style=\"color:#999999\">></span><span style=\"color:#393A34\">截图保存</span><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">button</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">template</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>关键点</strong>：</p>\n<ul>\n<li>处理跨域资源需配置 <code>useCORS: true</code></li>\n<li>复杂样式需注意 <code>foreignObjectRendering</code> 配置</li>\n<li>实际项目建议结合裁剪工具（如 <code>cropperjs</code>）</li>\n</ul>\n"},{"title":"如何实现图片裁剪上传？","description":"","answer":"<p><strong>原生 Canvas 实现思路</strong>：</p>\n<ol>\n<li>文件读取 → 绘制到 Canvas</li>\n<li>通过鼠标事件实现选区交互</li>\n<li>裁剪选区 → 生成新图片</li>\n</ol>\n<p><strong>Vue3 实现</strong>（无第三方库）：</p>\n<pre><code class=\"language-vue\"><div class=\"language-vue \"><span class=\"lang\">vue</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">script</span><span style=\"color:#B07D48\"> setup</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">import</span><span style=\"color:#999999\"> {</span><span style=\"color:#B07D48\"> ref</span><span style=\"color:#999999\"> }</span><span style=\"color:#1E754F\"> from</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">vue</span><span style=\"color:#B5695977\">'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> canvasRef</span><span style=\"color:#999999\"> =</span><span style=\"color:#59873A\"> ref</span><span style=\"color:#999999\">(</span><span style=\"color:#AB5959\">null</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> startX</span><span style=\"color:#999999\"> =</span><span style=\"color:#59873A\"> ref</span><span style=\"color:#999999\">(</span><span style=\"color:#2F798A\">0</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> startY</span><span style=\"color:#999999\"> =</span><span style=\"color:#59873A\"> ref</span><span style=\"color:#999999\">(</span><span style=\"color:#2F798A\">0</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> isDrawing</span><span style=\"color:#999999\"> =</span><span style=\"color:#59873A\"> ref</span><span style=\"color:#999999\">(</span><span style=\"color:#1E754F\">false</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">let</span><span style=\"color:#B07D48\"> img</span><span style=\"color:#999999\"> =</span><span style=\"color:#AB5959\"> null</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">let</span><span style=\"color:#B07D48\"> scale</span><span style=\"color:#999999\"> =</span><span style=\"color:#2F798A\"> 1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">// 1. 文件读取</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#59873A\"> handleUpload</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">e</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> file</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> e</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">target</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">files</span><span style=\"color:#999999\">[</span><span style=\"color:#2F798A\">0</span><span style=\"color:#999999\">]</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> reader</span><span style=\"color:#999999\"> =</span><span style=\"color:#AB5959\"> new</span><span style=\"color:#59873A\"> FileReader</span><span style=\"color:#999999\">()</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  reader</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">onload</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">e</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    img</span><span style=\"color:#999999\"> =</span><span style=\"color:#AB5959\"> new</span><span style=\"color:#59873A\"> Image</span><span style=\"color:#999999\">()</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    img</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">onload</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> drawImageToCanvas</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    img</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">src</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> e</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">target</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">result</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  reader</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">readAsDataURL</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">file</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">// 绘制到Canvas</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#59873A\"> drawImageToCanvas</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> ()</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> canvas</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> canvasRef</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">value</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> ctx</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> canvas</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">getContext</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">2d</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  // 计算缩放比例（限制最大宽度800px）</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  scale</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> Math</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">min</span><span style=\"color:#999999\">(</span><span style=\"color:#2F798A\">800</span><span style=\"color:#AB5959\"> /</span><span style=\"color:#B07D48\"> img</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">width</span><span style=\"color:#999999\">,</span><span style=\"color:#2F798A\"> 1</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  canvas</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">width</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> img</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">width</span><span style=\"color:#AB5959\"> *</span><span style=\"color:#B07D48\"> scale</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  canvas</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">height</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> img</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">height</span><span style=\"color:#AB5959\"> *</span><span style=\"color:#B07D48\"> scale</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  ctx</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">drawImage</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">img</span><span style=\"color:#999999\">,</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">,</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> canvas</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">width</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> canvas</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">height</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">// 2. 选区交互逻辑</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#59873A\"> startDraw</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">e</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  isDrawing</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">value</span><span style=\"color:#999999\"> =</span><span style=\"color:#1E754F\"> true</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> rect</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> canvasRef</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">value</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">getBoundingClientRect</span><span style=\"color:#999999\">()</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  startX</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">value</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> e</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">clientX</span><span style=\"color:#AB5959\"> -</span><span style=\"color:#B07D48\"> rect</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">left</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  startY</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">value</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> e</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">clientY</span><span style=\"color:#AB5959\"> -</span><span style=\"color:#B07D48\"> rect</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">top</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#59873A\"> drawing</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">e</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">  if</span><span style=\"color:#999999\"> (</span><span style=\"color:#AB5959\">!</span><span style=\"color:#B07D48\">isDrawing</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">value</span><span style=\"color:#999999\">)</span><span style=\"color:#1E754F\"> return</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> rect</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> canvasRef</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">value</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">getBoundingClientRect</span><span style=\"color:#999999\">()</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> currentX</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> e</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">clientX</span><span style=\"color:#AB5959\"> -</span><span style=\"color:#B07D48\"> rect</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">left</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> currentY</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> e</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">clientY</span><span style=\"color:#AB5959\"> -</span><span style=\"color:#B07D48\"> rect</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">top</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  // 实时绘制选区框</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> ctx</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> canvasRef</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">value</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">getContext</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">2d</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  ctx</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">clearRect</span><span style=\"color:#999999\">(</span><span style=\"color:#2F798A\">0</span><span style=\"color:#999999\">,</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> canvasRef</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">value</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">width</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> canvasRef</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">value</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">height</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  ctx</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">drawImage</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">img</span><span style=\"color:#999999\">,</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">,</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> canvasRef</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">value</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">width</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> canvasRef</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">value</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">height</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  ctx</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">strokeStyle</span><span style=\"color:#999999\"> =</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">#f00</span><span style=\"color:#B5695977\">'</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  ctx</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">strokeRect</span><span style=\"color:#999999\">(</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    startX</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">value</span><span style=\"color:#999999\">,</span><span style=\"color:#393A34\"> </span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    startY</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">value</span><span style=\"color:#999999\">,</span><span style=\"color:#393A34\"> </span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    currentX</span><span style=\"color:#AB5959\"> -</span><span style=\"color:#B07D48\"> startX</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">value</span><span style=\"color:#999999\">,</span><span style=\"color:#393A34\"> </span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    currentY</span><span style=\"color:#AB5959\"> -</span><span style=\"color:#B07D48\"> startY</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">value</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  )</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">// 3. 裁剪并上传</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#59873A\"> cropImage</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> ()</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> canvas</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> document</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">createElement</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">canvas</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> rect</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> canvasRef</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">value</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">getBoundingClientRect</span><span style=\"color:#999999\">()</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  // 计算实际裁剪尺寸（考虑缩放比例）</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> cropWidth</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">endX</span><span style=\"color:#AB5959\"> -</span><span style=\"color:#B07D48\"> startX</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">value</span><span style=\"color:#999999\">)</span><span style=\"color:#AB5959\"> /</span><span style=\"color:#B07D48\"> scale</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> cropHeight</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">endY</span><span style=\"color:#AB5959\"> -</span><span style=\"color:#B07D48\"> startY</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">value</span><span style=\"color:#999999\">)</span><span style=\"color:#AB5959\"> /</span><span style=\"color:#B07D48\"> scale</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  canvas</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">width</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> cropWidth</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  canvas</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">height</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> cropHeight</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  canvas</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">getContext</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">2d</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">).</span><span style=\"color:#59873A\">drawImage</span><span style=\"color:#999999\">(</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    img</span><span style=\"color:#999999\">,</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    startX</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">value</span><span style=\"color:#AB5959\"> /</span><span style=\"color:#B07D48\"> scale</span><span style=\"color:#999999\">,</span><span style=\"color:#A0ADA0\">  // 原始图片X位置</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    startY</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">value</span><span style=\"color:#AB5959\"> /</span><span style=\"color:#B07D48\"> scale</span><span style=\"color:#999999\">,</span><span style=\"color:#A0ADA0\">  // 原始图片Y位置</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    cropWidth</span><span style=\"color:#999999\">,</span><span style=\"color:#A0ADA0\">            // 原始图片裁剪宽度</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    cropHeight</span><span style=\"color:#999999\">,</span><span style=\"color:#A0ADA0\">           // 原始图片裁剪高度</span></span>\n<span class=\"line\"><span style=\"color:#2F798A\">    0</span><span style=\"color:#999999\">,</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">,</span><span style=\"color:#A0ADA0\">                // 新canvas起始位置</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    cropWidth</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> cropHeight</span><span style=\"color:#A0ADA0\"> // 新canvas尺寸</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  )</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  // 转换为Blob上传</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  canvas</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">toBlob</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">blob</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">    const</span><span style=\"color:#B07D48\"> formData</span><span style=\"color:#999999\"> =</span><span style=\"color:#AB5959\"> new</span><span style=\"color:#59873A\"> FormData</span><span style=\"color:#999999\">()</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    formData</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">append</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">file</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> blob</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    // 执行上传逻辑...</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  })</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">script</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">template</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;</span><span style=\"color:#1E754F\">input</span><span style=\"color:#B07D48\"> type</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">file</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\"> @</span><span style=\"color:#59873A\">change</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\">handleUpload</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\"> accept</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">image/*</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;</span><span style=\"color:#1E754F\">canvas</span><span style=\"color:#393A34\"> </span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    ref</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">canvasRef</span><span style=\"color:#B5695977\">\"</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    @</span><span style=\"color:#59873A\">mousedown</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\">startDraw</span><span style=\"color:#999999\">\"</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    @</span><span style=\"color:#59873A\">mousemove</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\">drawing</span><span style=\"color:#999999\">\"</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    @</span><span style=\"color:#59873A\">mouseup</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\">cropImage</span><span style=\"color:#999999\">\"</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    @</span><span style=\"color:#59873A\">mouseleave</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\">isDrawing</span><span style=\"color:#999999\"> =</span><span style=\"color:#1E754F\"> false</span><span style=\"color:#999999\">\"</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  >&#x3C;/</span><span style=\"color:#1E754F\">canvas</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">template</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n"},{"title":"如何解决页面请求接口大规模并发问题？","description":"","answer":"<ol>\n<li><strong>使用防抖和节流</strong>\n防抖（Debouncing）：在一段时间内只执行最后一次请求，适用于用户输入场景。</li>\n</ol>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#AB5959\">function</span><span style=\"color:#59873A\"> debounce</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">func</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> delay</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">let</span><span style=\"color:#B07D48\"> timer</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">return</span><span style=\"color:#AB5959\"> function</span><span style=\"color:#999999\"> (...</span><span style=\"color:#B07D48\">args</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">clearTimeout</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">timer</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">timer</span><span style=\"color:#999999\"> =</span><span style=\"color:#59873A\"> setTimeout</span><span style=\"color:#999999\">(()</span><span style=\"color:#999999\"> =></span><span style=\"color:#B07D48\"> func</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">apply</span><span style=\"color:#999999\">(</span><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> args</span><span style=\"color:#999999\">),</span><span style=\"color:#B07D48\"> delay</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">};</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">节流</span><span style=\"color:#393A34\">（</span><span style=\"color:#B07D48\">Throttling</span><span style=\"color:#393A34\">）：</span><span style=\"color:#B07D48\">限制在一定时间内执行请求</span><span style=\"color:#393A34\">，</span><span style=\"color:#B07D48\">适用于限制频繁的请求</span><span style=\"color:#393A34\">。</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#AB5959\">function</span><span style=\"color:#59873A\"> throttle</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">func</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> limit</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">let</span><span style=\"color:#B07D48\"> lastFunc</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">let</span><span style=\"color:#B07D48\"> lastRan</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">return</span><span style=\"color:#AB5959\"> function</span><span style=\"color:#999999\"> (...</span><span style=\"color:#B07D48\">args</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> context</span><span style=\"color:#999999\"> =</span><span style=\"color:#A65E2B\"> this</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">if</span><span style=\"color:#999999\"> (</span><span style=\"color:#AB5959\">!</span><span style=\"color:#B07D48\">lastRan</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">func</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">apply</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">context</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> args</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">lastRan</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> Date</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">now</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#1E754F\"> else</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">clearTimeout</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">lastFunc</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">lastFunc</span><span style=\"color:#999999\"> =</span><span style=\"color:#59873A\"> setTimeout</span><span style=\"color:#999999\">(</span><span style=\"color:#AB5959\">function</span><span style=\"color:#999999\"> ()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">if</span><span style=\"color:#999999\"> ((</span><span style=\"color:#B07D48\">Date</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">now</span><span style=\"color:#999999\">()</span><span style=\"color:#AB5959\"> -</span><span style=\"color:#B07D48\"> lastRan</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> >=</span><span style=\"color:#B07D48\"> limit</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">func</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">apply</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">context</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> args</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">lastRan</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> Date</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">now</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"><span style=\"color:#999999\">},</span><span style=\"color:#B07D48\"> limit</span><span style=\"color:#AB5959\"> -</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">Date</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">now</span><span style=\"color:#999999\">()</span><span style=\"color:#AB5959\"> -</span><span style=\"color:#B07D48\"> lastRan</span><span style=\"color:#999999\">));</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"><span style=\"color:#999999\">};</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<ol start=\"2\">\n<li><strong>请求合并</strong>\n请求去重：避免同一请求被重复发起，通过设置请求唯一标识来防止重复请求。</li>\n</ol>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> pendingRequests</span><span style=\"color:#999999\"> =</span><span style=\"color:#AB5959\"> new</span><span style=\"color:#59873A\"> Map</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#AB5959\">async</span><span style=\"color:#AB5959\"> function</span><span style=\"color:#59873A\"> fetchData</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">url</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> options</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> key</span><span style=\"color:#999999\"> =</span><span style=\"color:#B5695977\"> `</span><span style=\"color:#1E754F\">${</span><span style=\"color:#B56959\">url</span><span style=\"color:#1E754F\">}</span><span style=\"color:#B56959\">_</span><span style=\"color:#1E754F\">${</span><span style=\"color:#B56959\">JSON</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">stringify</span><span style=\"color:#999999\">(</span><span style=\"color:#B56959\">options</span><span style=\"color:#999999\">)</span><span style=\"color:#1E754F\">}</span><span style=\"color:#B5695977\">`</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">if</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">pendingRequests</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">has</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">key</span><span style=\"color:#999999\">))</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">return</span><span style=\"color:#B07D48\"> pendingRequests</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">get</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">key</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> requestPromise</span><span style=\"color:#999999\"> =</span><span style=\"color:#59873A\"> fetch</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">url</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> options</span><span style=\"color:#999999\">).</span><span style=\"color:#59873A\">finally</span><span style=\"color:#999999\">(()</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">pendingRequests</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">delete</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">key</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">});</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">pendingRequests</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">set</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">key</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> requestPromise</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">return</span><span style=\"color:#B07D48\"> requestPromise</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p>批量请求：将多个请求合并为一个请求，通过接口支持批量请求功能来减少请求数量。</p>\n<ol start=\"3\">\n<li><strong>后端处理</strong>\n负载均衡：使用负载均衡器将请求分发到多个服务器，避免单台服务器过载。</li>\n</ol>\n<p>缓存：在后端使用缓存（如 Redis）存储重复请求的数据，减少数据库压力。</p>\n<p>限流：在后端实施限流策略，控制每秒处理的请求数量，防止系统过载。</p>\n<ol start=\"4\">\n<li><strong>异步处理</strong>\n并发控制：限制并发请求的数量，通过实现并发队列来控制请求的并发数。</li>\n</ol>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#AB5959\">class</span><span style=\"color:#2E8F82\"> Queue</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">constructor</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">limit</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">queue</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> [];</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">activeCount</span><span style=\"color:#999999\"> =</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">limit</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> limit</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#59873A\">add</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">fn</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">return</span><span style=\"color:#AB5959\"> new</span><span style=\"color:#998418\"> Promise</span><span style=\"color:#999999\">((</span><span style=\"color:#B07D48\">resolve</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> reject</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">queue</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">push</span><span style=\"color:#999999\">(()</span><span style=\"color:#999999\"> =></span><span style=\"color:#59873A\"> fn</span><span style=\"color:#999999\">().</span><span style=\"color:#59873A\">then</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">resolve</span><span style=\"color:#999999\">).</span><span style=\"color:#59873A\">catch</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">reject</span><span style=\"color:#999999\">));</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">processQueue</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#999999\">});</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#59873A\">processQueue</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">if</span><span style=\"color:#999999\"> (</span><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">activeCount</span><span style=\"color:#999999\"> &#x3C;</span><span style=\"color:#A65E2B\"> this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">limit</span><span style=\"color:#AB5959\"> &#x26;&#x26;</span><span style=\"color:#A65E2B\"> this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">queue</span><span style=\"color:#999999\">.</span><span style=\"color:#998418\">length</span><span style=\"color:#999999\"> ></span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> fn</span><span style=\"color:#999999\"> =</span><span style=\"color:#A65E2B\"> this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">queue</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">shift</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">activeCount</span><span style=\"color:#AB5959\">++</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">fn</span><span style=\"color:#999999\">().</span><span style=\"color:#59873A\">finally</span><span style=\"color:#999999\">(()</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">activeCount</span><span style=\"color:#AB5959\">--</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">processQueue</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#999999\">});</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<ol start=\"5\">\n<li><strong>前端缓存</strong>\n使用浏览器缓存：设置缓存头（如 Cache-Control 和 ETag）来缓存请求结果，减少重复请求。</li>\n</ol>\n<p>本地存储：使用 localStorage 或 sessionStorage 来缓存数据，避免重复请求。</p>\n<ol start=\"6\">\n<li><strong>使用 Web Workers</strong>\nWeb Workers：将一些计算密集型的请求处理任务放到 Web Worker 中，避免阻塞主线程，提升用户体验。</li>\n</ol>\n"},{"title":"使用同一个链接， 如何实现 PC 打开是 web 应用、手机打开是一个 H5 应用？","description":"","answer":"<p><strong>核心方案</strong>：设备检测 + 动态渲染\n<strong>实现步骤</strong>：</p>\n<ol>\n<li>通过 <code>navigator.userAgent</code> 检测设备类型</li>\n<li>同一路由下根据设备渲染不同组件</li>\n</ol>\n<p><strong>Vue3 示例代码</strong>：</p>\n<pre><code class=\"language-vue\"><div class=\"language-vue \"><span class=\"lang\">vue</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">script</span><span style=\"color:#B07D48\"> setup</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">import</span><span style=\"color:#999999\"> {</span><span style=\"color:#B07D48\"> ref</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> onMounted</span><span style=\"color:#999999\"> }</span><span style=\"color:#1E754F\"> from</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">vue</span><span style=\"color:#B5695977\">'</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">import</span><span style=\"color:#B07D48\"> PcView</span><span style=\"color:#1E754F\"> from</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">./PcView.vue</span><span style=\"color:#B5695977\">'</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">import</span><span style=\"color:#B07D48\"> MobileView</span><span style=\"color:#1E754F\"> from</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">./MobileView.vue</span><span style=\"color:#B5695977\">'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> isMobile</span><span style=\"color:#999999\"> =</span><span style=\"color:#59873A\"> ref</span><span style=\"color:#999999\">(</span><span style=\"color:#1E754F\">false</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">// 设备检测函数</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#59873A\"> checkDevice</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> ()</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> ua</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> navigator</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">userAgent</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">toLowerCase</span><span style=\"color:#999999\">()</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  isMobile</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">value</span><span style=\"color:#999999\"> =</span><span style=\"color:#B5695977\"> /</span><span style=\"color:#AB5E3F\">iphone</span><span style=\"color:#AB5959\">|</span><span style=\"color:#AB5E3F\">android</span><span style=\"color:#AB5959\">|</span><span style=\"color:#AB5E3F\">mobile</span><span style=\"color:#B5695977\">/</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">test</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">ua</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#59873A\">onMounted</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">checkDevice</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">script</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">template</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  &#x3C;!-- 动态切换组件 --></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;</span><span style=\"color:#1E754F\">component</span><span style=\"color:#999999\"> :</span><span style=\"color:#59873A\">is</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\">isMobile</span><span style=\"color:#AB5959\"> ?</span><span style=\"color:#B07D48\"> MobileView</span><span style=\"color:#AB5959\"> :</span><span style=\"color:#B07D48\"> PcView</span><span style=\"color:#999999\">\"</span><span style=\"color:#999999\"> /></span></span>\n<span class=\"line\"><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  &#x3C;!-- 可选：提供手动切换按钮 --></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;</span><span style=\"color:#1E754F\">button</span><span style=\"color:#999999\"> @</span><span style=\"color:#59873A\">click</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\">isMobile</span><span style=\"color:#999999\"> =</span><span style=\"color:#AB5959\"> !</span><span style=\"color:#B07D48\">isMobile</span><span style=\"color:#999999\">\"</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">    {{</span><span style=\"color:#B07D48\"> isMobile</span><span style=\"color:#AB5959\"> ?</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">切换PC版</span><span style=\"color:#B5695977\">'</span><span style=\"color:#AB5959\"> :</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">切换移动版</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\"> }}</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;/</span><span style=\"color:#1E754F\">button</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">template</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>优化方案</strong>：</p>\n<ol>\n<li>\n<p><strong>服务端识别</strong>（SSR）：</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#A0ADA0\">// Node.js 中间件示例</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">app</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">get</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">/</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">req</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> res</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> isMobile</span><span style=\"color:#999999\"> =</span><span style=\"color:#B5695977\"> /</span><span style=\"color:#AB5E3F\">mobile</span><span style=\"color:#B5695977\">/</span><span style=\"color:#1E754F\">i</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">test</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">req</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">headers</span><span style=\"color:#999999\">[</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">user-agent</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">])</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  res</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">render</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">isMobile</span><span style=\"color:#AB5959\"> ?</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">mobile</span><span style=\"color:#B5695977\">'</span><span style=\"color:#AB5959\"> :</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">pc</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#999999\">})</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>响应式媒体查询兜底</strong>：</p>\n<pre><code class=\"language-css\"><div class=\"language-css \"><span class=\"lang\">css</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#A0ADA0\">/* 共用基础样式 + 设备差异样式 */</span></span>\n<span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">main-content</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  padding</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 20</span><span style=\"color:#AB5959\">px</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">  @</span><span style=\"color:#998418\">media</span><span style=\"color:#393A34\"> (</span><span style=\"color:#998418\">max-width</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 768</span><span style=\"color:#AB5959\">px</span><span style=\"color:#393A34\">) {</span></span>\n<span class=\"line\"><span style=\"color:#998418\">    padding</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 10</span><span style=\"color:#AB5959\">px</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">}</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n</ol>\n"},{"title":"Vue3 用 ref 和 watch 实现一个防抖搜索 Hook","description":"","answer":"<p><strong>Vue3 防抖搜索 Hook 实现</strong>：</p>\n<pre><code class=\"language-typescript\"><div class=\"language-typescript \"><span class=\"lang\">typescript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#1E754F\">import</span><span style=\"color:#999999\"> {</span><span style=\"color:#B07D48\"> ref</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> watch</span><span style=\"color:#999999\">,</span><span style=\"color:#1E754F\"> type</span><span style=\"color:#B07D48\"> WatchStopHandle</span><span style=\"color:#999999\"> }</span><span style=\"color:#1E754F\"> from</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">vue</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#1E754F\">export</span><span style=\"color:#AB5959\"> function</span><span style=\"color:#59873A\"> useDebounceSearch</span><span style=\"color:#999999\">(</span><span style=\"color:#59873A\">callback</span><span style=\"color:#999999\">: (</span><span style=\"color:#B07D48\">val</span><span style=\"color:#999999\">: </span><span style=\"color:#2E8F82\">string</span><span style=\"color:#999999\">) => </span><span style=\"color:#2E8F82\">void</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> delay</span><span style=\"color:#999999\"> =</span><span style=\"color:#2F798A\"> 300</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const </span><span style=\"color:#B07D48\">keyword</span><span style=\"color:#999999\"> =</span><span style=\"color:#59873A\"> ref</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">''</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  // 防抖逻辑封装</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  let </span><span style=\"color:#B07D48\">timer</span><span style=\"color:#999999\">: </span><span style=\"color:#2E8F82\">number</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const </span><span style=\"color:#B07D48\">stopWatch</span><span style=\"color:#999999\"> =</span><span style=\"color:#59873A\"> watch</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">keyword</span><span style=\"color:#999999\">,</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">newVal</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">    clearTimeout</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">timer</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    timer</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> window</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">setTimeout</span><span style=\"color:#999999\">(()</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">      callback</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">newVal</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    },</span><span style=\"color:#B07D48\"> delay</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  });</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  // 自动清理</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const </span><span style=\"color:#59873A\">stop</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> ()</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">    clearTimeout</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">timer</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">    stopWatch</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#1E754F\">  return</span><span style=\"color:#999999\"> { </span><span style=\"color:#B07D48\">keyword</span><span style=\"color:#999999\">, </span><span style=\"color:#B07D48\">stop</span><span style=\"color:#999999\"> };</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>使用示例</strong>：</p>\n<pre><code class=\"language-vue\"><div class=\"language-vue \"><span class=\"lang\">vue</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">script</span><span style=\"color:#B07D48\"> setup</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">import</span><span style=\"color:#999999\"> {</span><span style=\"color:#B07D48\"> useDebounceSearch</span><span style=\"color:#999999\"> }</span><span style=\"color:#1E754F\"> from</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">./hooks</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#999999\"> {</span><span style=\"color:#B07D48\"> keyword</span><span style=\"color:#999999\"> }</span><span style=\"color:#999999\"> =</span><span style=\"color:#59873A\"> useDebounceSearch</span><span style=\"color:#999999\">((</span><span style=\"color:#B07D48\">val</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  console</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">log</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">搜索:</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> val</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  // 调用API...</span></span>\n<span class=\"line\"><span style=\"color:#999999\">},</span><span style=\"color:#2F798A\"> 500</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">script</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">template</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;</span><span style=\"color:#1E754F\">input</span><span style=\"color:#59873A\"> v-model</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\">keyword</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\"> placeholder</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">输入搜索内容</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\"> /></span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">template</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n"},{"title":"如何实现请求进度监控？","description":"","answer":"<p><strong>请求进度监控实现方案</strong>：</p>\n<ol>\n<li><strong>XMLHttpRequest 原生方案</strong></li>\n</ol>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> xhr</span><span style=\"color:#999999\"> =</span><span style=\"color:#AB5959\"> new</span><span style=\"color:#59873A\"> XMLHttpRequest</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">xhr</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">upload</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">onprogress</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">e</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span><span style=\"color:#A0ADA0\"> // 上传进度</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> percent</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">e</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">loaded</span><span style=\"color:#AB5959\"> /</span><span style=\"color:#B07D48\"> e</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">total</span><span style=\"color:#AB5959\"> *</span><span style=\"color:#2F798A\"> 100</span><span style=\"color:#999999\">).</span><span style=\"color:#59873A\">toFixed</span><span style=\"color:#999999\">(</span><span style=\"color:#2F798A\">2</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#999999\">};</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">xhr</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">onprogress</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">e</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span><span style=\"color:#A0ADA0\"> // 下载进度</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  console</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">log</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">`</span><span style=\"color:#B56959\">下载进度：</span><span style=\"color:#1E754F\">${</span><span style=\"color:#B56959\">percent</span><span style=\"color:#1E754F\">}</span><span style=\"color:#B56959\">%</span><span style=\"color:#B5695977\">`</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#999999\">};</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<ol>\n<li><strong>Axios 封装方案</strong></li>\n</ol>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B07D48\">axios</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">post</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">/upload</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> file</span><span style=\"color:#999999\">,</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">  onUploadProgress</span><span style=\"color:#999999\">:</span><span style=\"color:#B07D48\"> progressEvent</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">    const</span><span style=\"color:#B07D48\"> percent</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> Math</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">round</span><span style=\"color:#999999\">(</span></span>\n<span class=\"line\"><span style=\"color:#999999\">      (</span><span style=\"color:#B07D48\">progressEvent</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">loaded</span><span style=\"color:#AB5959\"> *</span><span style=\"color:#2F798A\"> 100</span><span style=\"color:#999999\">)</span><span style=\"color:#AB5959\"> /</span><span style=\"color:#B07D48\"> progressEvent</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">total</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    )</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  },</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">  onDownloadProgress</span><span style=\"color:#999999\">:</span><span style=\"color:#B07D48\"> progressEvent</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    // 处理下载进度</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">})</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<ol>\n<li><strong>Fetch API 分块读取方案</strong></li>\n</ol>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> response</span><span style=\"color:#999999\"> =</span><span style=\"color:#1E754F\"> await</span><span style=\"color:#59873A\"> fetch</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">url</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> reader</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> response</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">body</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">getReader</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">let</span><span style=\"color:#B07D48\"> received</span><span style=\"color:#999999\"> =</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#1E754F\">while</span><span style=\"color:#999999\">(</span><span style=\"color:#1E754F\">true</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#999999\"> {</span><span style=\"color:#B07D48\"> done</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> value</span><span style=\"color:#999999\"> }</span><span style=\"color:#999999\"> =</span><span style=\"color:#1E754F\"> await</span><span style=\"color:#B07D48\"> reader</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">read</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">  if</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">done</span><span style=\"color:#999999\">)</span><span style=\"color:#1E754F\"> break</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  received</span><span style=\"color:#AB5959\"> +=</span><span style=\"color:#B07D48\"> value</span><span style=\"color:#999999\">.</span><span style=\"color:#998418\">length</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> total</span><span style=\"color:#999999\"> =</span><span style=\"color:#AB5959\"> +</span><span style=\"color:#B07D48\">response</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">headers</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">get</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">Content-Length</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  console</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">log</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">`</span><span style=\"color:#B56959\">下载进度：</span><span style=\"color:#1E754F\">${</span><span style=\"color:#999999\">(</span><span style=\"color:#B56959\">received</span><span style=\"color:#AB5959\">/</span><span style=\"color:#B56959\">total</span><span style=\"color:#AB5959\">*</span><span style=\"color:#2F798A\">100</span><span style=\"color:#999999\">).</span><span style=\"color:#59873A\">toFixed</span><span style=\"color:#999999\">(</span><span style=\"color:#2F798A\">1</span><span style=\"color:#999999\">)</span><span style=\"color:#1E754F\">}</span><span style=\"color:#B56959\">%</span><span style=\"color:#B5695977\">`</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n"},{"title":"如何实现网页加载进度条？","description":"","answer":"<p><strong>核心方案</strong>：路由守卫 + 虚拟进度模拟\n<strong>实现步骤</strong>（Vue3 + NProgress 示例）：</p>\n<ol>\n<li>安装进度条库：</li>\n</ol>\n<pre><code class=\"language-shell\"><div class=\"language-shell \"><span class=\"lang\">shell</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#59873A\">npm</span><span style=\"color:#B56959\"> install</span><span style=\"color:#B56959\"> nprogress</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<ol start=\"2\">\n<li>封装进度条逻辑：</li>\n</ol>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#A0ADA0\">// utils/progress.js</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">import</span><span style=\"color:#B07D48\"> NProgress</span><span style=\"color:#1E754F\"> from</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">nprogress</span><span style=\"color:#B5695977\">'</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">import</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">nprogress/nprogress.css</span><span style=\"color:#B5695977\">'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B07D48\">NProgress</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">configure</span><span style=\"color:#999999\">({</span><span style=\"color:#998418\"> showSpinner</span><span style=\"color:#999999\">:</span><span style=\"color:#1E754F\"> false</span><span style=\"color:#999999\"> })</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#1E754F\">export</span><span style=\"color:#AB5959\"> const</span><span style=\"color:#59873A\"> start</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> ()</span><span style=\"color:#999999\"> =></span><span style=\"color:#B07D48\"> NProgress</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">start</span><span style=\"color:#999999\">()</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">export</span><span style=\"color:#AB5959\"> const</span><span style=\"color:#59873A\"> done</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> ()</span><span style=\"color:#999999\"> =></span><span style=\"color:#B07D48\"> NProgress</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">done</span><span style=\"color:#999999\">()</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<ol start=\"3\">\n<li>结合路由守卫：</li>\n</ol>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#A0ADA0\">// router.js</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">import</span><span style=\"color:#999999\"> {</span><span style=\"color:#B07D48\"> start</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> done</span><span style=\"color:#999999\"> }</span><span style=\"color:#1E754F\"> from</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">./utils/progress</span><span style=\"color:#B5695977\">'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B07D48\">router</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">beforeEach</span><span style=\"color:#999999\">(()</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">  start</span><span style=\"color:#999999\">()</span><span style=\"color:#A0ADA0\"> // 路由切换时启动</span></span>\n<span class=\"line\"><span style=\"color:#999999\">})</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B07D48\">router</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">afterEach</span><span style=\"color:#999999\">(()</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">  setTimeout</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">done</span><span style=\"color:#999999\">,</span><span style=\"color:#2F798A\"> 300</span><span style=\"color:#999999\">)</span><span style=\"color:#A0ADA0\"> // 微延迟保证过渡效果</span></span>\n<span class=\"line\"><span style=\"color:#999999\">})</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>优化点</strong>：</p>\n<ul>\n<li>请求拦截器集成真实加载进度</li>\n<li>智能最小加载时间（至少保持200ms避免闪烁）</li>\n<li>错误处理自动关闭进度条</li>\n<li>自定义样式匹配品牌视觉</li>\n</ul>\n<p><strong>原生JS实现要点</strong>：</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#A0ADA0\">// 创建进度条DOM</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> progressBar</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> document</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">createElement</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">div</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">progressBar</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">style</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">cssText</span><span style=\"color:#999999\"> =</span><span style=\"color:#B5695977\"> `</span></span>\n<span class=\"line\"><span style=\"color:#B56959\">  position: fixed; </span></span>\n<span class=\"line\"><span style=\"color:#B56959\">  top:0; left:0; </span></span>\n<span class=\"line\"><span style=\"color:#B56959\">  height:3px; </span></span>\n<span class=\"line\"><span style=\"color:#B56959\">  background: #00a3ff;</span></span>\n<span class=\"line\"><span style=\"color:#B56959\">  transition: width 0.3s ease;</span></span>\n<span class=\"line\"><span style=\"color:#B5695977\">`</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">// 更新进度函数</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">let</span><span style=\"color:#B07D48\"> progress</span><span style=\"color:#999999\"> =</span><span style=\"color:#2F798A\"> 0</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#59873A\"> update</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">value</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  progress</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> Math</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">min</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">Math</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">max</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">value</span><span style=\"color:#999999\">,</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">),</span><span style=\"color:#2F798A\"> 1</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  progressBar</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">style</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">width</span><span style=\"color:#999999\"> =</span><span style=\"color:#B5695977\"> `</span><span style=\"color:#1E754F\">${</span><span style=\"color:#B56959\">progress </span><span style=\"color:#AB5959\">*</span><span style=\"color:#2F798A\"> 100</span><span style=\"color:#1E754F\">}</span><span style=\"color:#B56959\">%</span><span style=\"color:#B5695977\">`</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">// 挂载到页面</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">document</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">body</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">prepend</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">progressBar</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">// 使用示例</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">update</span><span style=\"color:#999999\">(</span><span style=\"color:#2F798A\">0.3</span><span style=\"color:#999999\">)</span><span style=\"color:#A0ADA0\"> // 更新到30%</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n"},{"title":"如果用户说 web 应用感觉很反应慢或者卡顿，该如何排查？","description":"","answer":"<ol>\n<li><strong>性能分析</strong>\n浏览器开发者工具：使用 Chrome DevTools 或其他浏览器的开发者工具，查看性能面板中的记录，分析 CPU 和内存使用情况。\nPerformance：查看长时间的任务、回流和重绘情况，识别瓶颈。\nMemory：检查内存使用情况和垃圾回收，查找内存泄漏。\nNetwork：监控网络请求时间，查看是否有资源加载缓慢的情况。</li>\n<li><strong>网络请求</strong>\n检查加载时间：使用网络面板查看请求的响应时间和大小，找出慢请求。\n分析请求依赖：确保第三方服务和 API 响应迅速且稳定，减少请求次数和大小。</li>\n<li><strong>代码审查</strong>\n长时间运行的脚本：查找和优化执行时间较长的 JavaScript 代码，使用 Web Workers 处理耗时任务。\n频繁的 DOM 操作：减少 DOM 操作的次数和复杂度，批量更新 DOM。\n事件处理：优化事件处理程序，避免高频率的事件触发（如滚动、输入）。</li>\n<li><strong>资源优化</strong>\n资源大小：检查图片、字体和其他资源的大小，压缩和优化资源。\n异步加载：使用懒加载和异步加载技术，避免阻塞渲染。</li>\n<li><strong>前端性能优化</strong>\n缓存：利用浏览器缓存和 CDN 加速静态资源加载。\n代码拆分：使用 Webpack 或其他构建工具进行代码拆分，减少初始加载时间。\nCSS 和 JS 合并：合并 CSS 和 JS 文件，减少 HTTP 请求次数。</li>\n<li><strong>用户反馈</strong>\n重现问题：询问用户操作的具体步骤和使用环境，尝试重现问题。\n环境差异：检查不同设备、浏览器和网络环境下的表现，确保兼容性。</li>\n<li><strong>使用监控工具</strong>\n实时监控：使用性能监控工具（如 New Relic、Datadog）收集实时性能数据。\n错误跟踪：配置错误监控工具（如 Sentry），捕获和分析 JavaScript 错误和异常。</li>\n<li><strong>回归测试</strong>\n版本回退：测试最近的更改，查看是否新版本引入了性能问题。\n逐步回退：逐步回退更改，以确定性能问题的根源。</li>\n</ol>\n"},{"title":"请你实现一个大文件上传和断点续传","description":"","answer":"<p><strong>大文件上传 &amp; 断点续传流程简述：</strong></p>\n<ol>\n<li><strong>分片切割</strong>：前端将大文件按固定大小（如2MB）切片。</li>\n<li><strong>唯一标识</strong>：根据文件内容生成hash（如使用SparkMD5），作为文件唯一标识。</li>\n<li><strong>验证分片</strong>：上传前调用接口，检查哪些分片已上传。</li>\n<li><strong>并发上传</strong>：并行上传未传分片，每个分片携带hash、索引、总片数。</li>\n<li><strong>合并请求</strong>：全部分片上传后，通知服务端合并。</li>\n<li><strong>断点续传</strong>：上传中断后，重新上传时跳过已传分片。</li>\n</ol>\n<p><strong>Vue 简易实现（核心代码）：</strong></p>\n<pre><code class=\"language-vue\"><div class=\"language-vue \"><span class=\"lang\">vue</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">template</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;</span><span style=\"color:#1E754F\">input</span><span style=\"color:#B07D48\"> type</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">file</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\"> @</span><span style=\"color:#59873A\">change</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\">handleFileChange</span><span style=\"color:#999999\">\"</span><span style=\"color:#999999\"> /></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;</span><span style=\"color:#1E754F\">button</span><span style=\"color:#999999\"> @</span><span style=\"color:#59873A\">click</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\">upload</span><span style=\"color:#999999\">\"</span><span style=\"color:#999999\">></span><span style=\"color:#393A34\">上传</span><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">button</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  &#x3C;!-- 进度条 --></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#B07D48\"> class</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">progress</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">    &#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\"> :</span><span style=\"color:#59873A\">style</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#999999\">{ </span><span style=\"color:#998418\">width</span><span style=\"color:#999999\">: </span><span style=\"color:#B07D48\">progress</span><span style=\"color:#AB5959\"> +</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">%</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\"> }</span><span style=\"color:#999999\">\"</span><span style=\"color:#999999\">>{{</span><span style=\"color:#B07D48\"> progress</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">toFixed</span><span style=\"color:#999999\">(</span><span style=\"color:#2F798A\">1</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> }}</span><span style=\"color:#393A34\">%</span><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  &#x3C;!-- 错误提示 --></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#1E754F\"> v-if</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\">errorMsg</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\"> class</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">error</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">>{{</span><span style=\"color:#B07D48\"> errorMsg</span><span style=\"color:#999999\"> }}&#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">template</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">script</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">export</span><span style=\"color:#1E754F\"> default</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">  data</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">    return</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">      // ...原有数据...</span></span>\n<span class=\"line\"><span style=\"color:#998418\">      progress</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">,</span><span style=\"color:#A0ADA0\">        // 总进度</span></span>\n<span class=\"line\"><span style=\"color:#998418\">      chunkProgress</span><span style=\"color:#999999\">:</span><span style=\"color:#999999\"> {},</span><span style=\"color:#A0ADA0\">  // 记录每个分片进度 { 0: 80, 1: 100... }</span></span>\n<span class=\"line\"><span style=\"color:#998418\">      retryCount</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 3</span><span style=\"color:#999999\">,</span><span style=\"color:#A0ADA0\">      // 最大重试次数</span></span>\n<span class=\"line\"><span style=\"color:#998418\">      errorMsg</span><span style=\"color:#999999\">:</span><span style=\"color:#B5695977\"> ''</span><span style=\"color:#A0ADA0\">        // 错误信息</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    };</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  },</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  computed</span><span style=\"color:#999999\">:</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    // 计算总进度（根据所有分片进度）</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">    totalProgress</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">      const</span><span style=\"color:#B07D48\"> chunks</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> Object</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">values</span><span style=\"color:#999999\">(</span><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">chunkProgress</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">      return</span><span style=\"color:#B07D48\"> chunks</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">reduce</span><span style=\"color:#999999\">((</span><span style=\"color:#B07D48\">sum</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> v</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#B07D48\"> sum</span><span style=\"color:#AB5959\"> +</span><span style=\"color:#B07D48\"> v</span><span style=\"color:#999999\">,</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">)</span><span style=\"color:#AB5959\"> /</span><span style=\"color:#B07D48\"> chunks</span><span style=\"color:#999999\">.</span><span style=\"color:#998418\">length</span><span style=\"color:#AB5959\"> ||</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  },</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  methods</span><span style=\"color:#999999\">:</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">    async</span><span style=\"color:#59873A\"> upload</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">      try</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">        // ...检查已上传分片逻辑...</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">        </span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">        // 并行上传（带进度和重试）</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">        const</span><span style=\"color:#B07D48\"> requests</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> [];</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">        for</span><span style=\"color:#999999\"> (</span><span style=\"color:#AB5959\">let</span><span style=\"color:#B07D48\"> i</span><span style=\"color:#999999\"> =</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">;</span><span style=\"color:#B07D48\"> i</span><span style=\"color:#999999\"> &#x3C;</span><span style=\"color:#B07D48\"> chunks</span><span style=\"color:#999999\">;</span><span style=\"color:#B07D48\"> i</span><span style=\"color:#AB5959\">++</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">          if</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">uploaded</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">includes</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">i</span><span style=\"color:#999999\">))</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">            this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">chunkProgress</span><span style=\"color:#999999\">[</span><span style=\"color:#B07D48\">i</span><span style=\"color:#999999\">]</span><span style=\"color:#999999\"> =</span><span style=\"color:#2F798A\"> 100</span><span style=\"color:#999999\">;</span><span style=\"color:#A0ADA0\"> // 已传分片直接100%</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">            continue</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">          }</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">          requests</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">push</span><span style=\"color:#999999\">(</span><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">uploadChunkWithRetry</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">i</span><span style=\"color:#999999\">));</span></span>\n<span class=\"line\"><span style=\"color:#999999\">        }</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">        </span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">        await</span><span style=\"color:#998418\"> Promise</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">all</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">requests</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">        // ...合并请求...</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">        </span></span>\n<span class=\"line\"><span style=\"color:#999999\">      }</span><span style=\"color:#1E754F\"> catch</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">err</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">        this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">errorMsg</span><span style=\"color:#999999\"> =</span><span style=\"color:#B5695977\"> `</span><span style=\"color:#B56959\">上传失败: </span><span style=\"color:#1E754F\">${</span><span style=\"color:#B56959\">err</span><span style=\"color:#999999\">.</span><span style=\"color:#B56959\">message</span><span style=\"color:#1E754F\">}</span><span style=\"color:#B5695977\">`</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">      }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    },</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    // 带重试的分片上传</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">    async</span><span style=\"color:#59873A\"> uploadChunkWithRetry</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">index</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> retry</span><span style=\"color:#999999\"> =</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">      try</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">        const</span><span style=\"color:#B07D48\"> formData</span><span style=\"color:#999999\"> =</span><span style=\"color:#AB5959\"> new</span><span style=\"color:#59873A\"> FormData</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">        formData</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">append</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">chunk</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#1E754F\"> await</span><span style=\"color:#A65E2B\"> this</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">getChunk</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">index</span><span style=\"color:#999999\">));</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">        // ...其他字段...</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">        </span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">        await</span><span style=\"color:#B07D48\"> axios</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">post</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">/upload</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> formData</span><span style=\"color:#999999\">,</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">          // 进度监听</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">          onUploadProgress</span><span style=\"color:#999999\">:</span><span style=\"color:#B07D48\"> e</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">            this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">chunkProgress</span><span style=\"color:#999999\">[</span><span style=\"color:#B07D48\">index</span><span style=\"color:#999999\">]</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> Math</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">floor</span><span style=\"color:#999999\">((</span><span style=\"color:#B07D48\">e</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">loaded</span><span style=\"color:#AB5959\"> /</span><span style=\"color:#B07D48\"> e</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">total</span><span style=\"color:#999999\">)</span><span style=\"color:#AB5959\"> *</span><span style=\"color:#2F798A\"> 100</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">          }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">        });</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">        </span></span>\n<span class=\"line\"><span style=\"color:#999999\">      }</span><span style=\"color:#1E754F\"> catch</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">err</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">        if</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">retry</span><span style=\"color:#999999\"> &#x3C;</span><span style=\"color:#A65E2B\"> this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">retryCount</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">          return</span><span style=\"color:#A65E2B\"> this</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">uploadChunkWithRetry</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">index</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> retry</span><span style=\"color:#AB5959\"> +</span><span style=\"color:#2F798A\"> 1</span><span style=\"color:#999999\">);</span><span style=\"color:#A0ADA0\"> // 重试</span></span>\n<span class=\"line\"><span style=\"color:#999999\">        }</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">        throw</span><span style=\"color:#AB5959\"> new</span><span style=\"color:#59873A\"> Error</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">`</span><span style=\"color:#B56959\">分片</span><span style=\"color:#1E754F\">${</span><span style=\"color:#B56959\">index</span><span style=\"color:#1E754F\">}</span><span style=\"color:#B56959\">上传失败</span><span style=\"color:#B5695977\">`</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">      }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">};</span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">script</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">style</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">progress</span><span style=\"color:#999999\"> {</span><span style=\"color:#A0ADA0\"> /* 简单进度条样式 */</span><span style=\"color:#999999\"> }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">error</span><span style=\"color:#999999\"> {</span><span style=\"color:#998418\"> color</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> red</span><span style=\"color:#999999\">;</span><span style=\"color:#999999\"> }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">style</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n"},{"title":"扫码登录实现方式","description":"","answer":"<p><strong>扫码登录流程简述：</strong></p>\n<ol>\n<li><strong>生成临时令牌</strong>：服务端生成唯一临时<code>token</code>并设置有效期（如5分钟）</li>\n<li><strong>生成二维码</strong>：前端将<code>token</code>编码为二维码（格式：<code>https://xxx.com/login?token=xxx</code>）</li>\n<li><strong>轮询检查状态</strong>：前端定时轮询接口，检查该<code>token</code>是否被扫码确认</li>\n<li><strong>移动端操作</strong>：用户扫码后，移动端请求服务端绑定<code>token</code>与用户身份</li>\n<li><strong>登录完成</strong>：网页端检测到<code>token</code>状态变化后，完成登录并跳转</li>\n</ol>\n<p><strong>Vue 简易实现（核心代码）：</strong></p>\n<pre><code class=\"language-vue\"><div class=\"language-vue \"><span class=\"lang\">vue</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">template</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#B07D48\"> ref</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">qrcode</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">>&#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">>{{</span><span style=\"color:#B07D48\"> statusText</span><span style=\"color:#999999\"> }}&#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">template</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">script</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">import</span><span style=\"color:#B07D48\"> QRCode</span><span style=\"color:#1E754F\"> from</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">qrcodejs2</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">import</span><span style=\"color:#B07D48\"> axios</span><span style=\"color:#1E754F\"> from</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">axios</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#1E754F\">export</span><span style=\"color:#1E754F\"> default</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">  data</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">    return</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#998418\">      token</span><span style=\"color:#999999\">:</span><span style=\"color:#B5695977\"> ''</span><span style=\"color:#999999\">,</span></span>\n<span class=\"line\"><span style=\"color:#998418\">      timer</span><span style=\"color:#999999\">:</span><span style=\"color:#AB5959\"> null</span><span style=\"color:#999999\">,</span></span>\n<span class=\"line\"><span style=\"color:#998418\">      statusText</span><span style=\"color:#999999\">:</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">请扫码登录</span><span style=\"color:#B5695977\">'</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    };</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  },</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">  mounted</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">    this</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">initQrcode</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  },</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">  beforeUnmount</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">    clearInterval</span><span style=\"color:#999999\">(</span><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">timer</span><span style=\"color:#999999\">);</span><span style=\"color:#A0ADA0\"> // 清除轮询</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  },</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  methods</span><span style=\"color:#999999\">:</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    // 1. 初始化生成二维码</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">    async</span><span style=\"color:#59873A\"> initQrcode</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">      // 获取临时token</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">      const</span><span style=\"color:#999999\"> {</span><span style=\"color:#B07D48\"> token</span><span style=\"color:#999999\"> }</span><span style=\"color:#999999\"> =</span><span style=\"color:#1E754F\"> await</span><span style=\"color:#B07D48\"> axios</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">get</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">/api/login/qrcode</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">      this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">token</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> token</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">      </span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">      // 生成二维码</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">      new</span><span style=\"color:#59873A\"> QRCode</span><span style=\"color:#999999\">(</span><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">$refs</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">qrcode</span><span style=\"color:#999999\">,</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#998418\">        text</span><span style=\"color:#999999\">:</span><span style=\"color:#B5695977\"> `</span><span style=\"color:#B56959\">https://app.com/confirm?token=</span><span style=\"color:#1E754F\">${</span><span style=\"color:#B56959\">token</span><span style=\"color:#1E754F\">}</span><span style=\"color:#B5695977\">`</span><span style=\"color:#999999\">,</span></span>\n<span class=\"line\"><span style=\"color:#998418\">        width</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 200</span><span style=\"color:#999999\">,</span></span>\n<span class=\"line\"><span style=\"color:#998418\">        height</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 200</span></span>\n<span class=\"line\"><span style=\"color:#999999\">      });</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">      </span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">      // 2. 开始轮询检查状态</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">      this</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">startPolling</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    },</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    // 3. 轮询检查登录状态</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">    startPolling</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">      this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">timer</span><span style=\"color:#999999\"> =</span><span style=\"color:#59873A\"> setInterval</span><span style=\"color:#999999\">(</span><span style=\"color:#AB5959\">async</span><span style=\"color:#999999\"> ()</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">        try</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">          const</span><span style=\"color:#999999\"> {</span><span style=\"color:#B07D48\"> status</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> user</span><span style=\"color:#999999\"> }</span><span style=\"color:#999999\"> =</span><span style=\"color:#1E754F\"> await</span><span style=\"color:#B07D48\"> axios</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">get</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">`</span><span style=\"color:#B56959\">/api/login/check?token=</span><span style=\"color:#1E754F\">${</span><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#B56959\">token</span><span style=\"color:#1E754F\">}</span><span style=\"color:#B5695977\">`</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">          </span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">          if</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">status</span><span style=\"color:#AB5959\"> ===</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">confirmed</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">            clearInterval</span><span style=\"color:#999999\">(</span><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">timer</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">            this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">statusText</span><span style=\"color:#999999\"> =</span><span style=\"color:#B5695977\"> `</span><span style=\"color:#B56959\">登录成功：</span><span style=\"color:#1E754F\">${</span><span style=\"color:#B56959\">user</span><span style=\"color:#999999\">.</span><span style=\"color:#B56959\">name</span><span style=\"color:#1E754F\">}</span><span style=\"color:#B5695977\">`</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">            // 存储登录凭证 &#x26; 跳转</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">            localStorage</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">setItem</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">token</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> user</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">token</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">            this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">$router</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">push</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">/</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">          }</span><span style=\"color:#1E754F\"> else</span><span style=\"color:#1E754F\"> if</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">status</span><span style=\"color:#AB5959\"> ===</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">expired</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">            clearInterval</span><span style=\"color:#999999\">(</span><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">timer</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">            this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">statusText</span><span style=\"color:#999999\"> =</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">二维码已过期，请刷新</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">          }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">        }</span><span style=\"color:#1E754F\"> catch</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">err</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">          console</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">error</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">轮询异常</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> err</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">        }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">      },</span><span style=\"color:#2F798A\"> 2000</span><span style=\"color:#999999\">);</span><span style=\"color:#A0ADA0\"> // 每2秒轮询一次</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">};</span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">script</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>关键注释：</strong></p>\n<ul>\n<li><strong>临时Token</strong>：服务端需维护<code>token</code>与用户身份的映射关系及状态（未扫描/已确认/已过期）</li>\n<li><strong>二维码内容</strong>：通常为包含<code>token</code>的URL，移动端扫码后解析出<code>token</code>并请求绑定接口</li>\n<li><strong>轮询优化</strong>：实际项目建议用WebSocket替代定时轮询</li>\n<li><strong>安全措施</strong>：\n<ul>\n<li>Token需设置有效期（防止盗用）</li>\n<li>限制同一IP的频繁请求</li>\n<li>移动端扫码后需二次确认（防误扫）</li>\n</ul>\n</li>\n</ul>\n<p><strong>移动端处理示例流程：</strong></p>\n<ol>\n<li>扫码获取<code>token</code></li>\n<li>调用接口<code>POST /api/login/confirm</code>发送用户凭证+<code>token</code></li>\n<li>服务端验证后绑定<code>token</code>与用户身份</li>\n</ol>\n"},{"title":"单点登录是什么?具体流程是什么?","description":"","answer":"<p><strong>单点登录（SSO）</strong> 是一种身份验证机制，允许用户通过一次登录访问多个相互信任的系统，无需重复输入凭证。</p>\n<p><strong>核心流程（以典型Token方案为例）：</strong></p>\n<ol>\n<li><strong>首次登录</strong>：\n<ul>\n<li>用户访问系统A，未登录时重定向至<strong>统一认证中心</strong>。</li>\n<li>用户输入账号密码完成认证，认证中心生成全局Token（如JWT）并存储关联会话。</li>\n</ul>\n</li>\n<li><strong>系统A登录</strong>：\n<ul>\n<li>认证中心将用户重定向回系统A并携带Token。</li>\n<li>系统A验证Token有效性后创建本地会话（如设置Cookie），允许访问。</li>\n</ul>\n</li>\n<li><strong>访问其他系统</strong>：\n<ul>\n<li>用户访问系统B时，系统B检测未登录，重定向至认证中心。</li>\n<li>认证中心发现用户已登录，直接返回Token给系统B。</li>\n<li>系统B验证Token后建立本地会话，用户无感登录。</li>\n</ul>\n</li>\n</ol>\n<p><strong>关键点</strong>：</p>\n<ul>\n<li><strong>Token共享</strong>：认证中心通过加密签名确保Token不可伪造。</li>\n<li><strong>会话同步</strong>：各系统信任认证中心的Token，但维护独立的本地会话。</li>\n<li><strong>单点登出</strong>：任一系统登出时，通知认证中心销毁全局会话，触发所有系统本地会话失效。</li>\n</ul>\n<p><strong>常见实现协议</strong>：</p>\n<ul>\n<li><strong>OAuth 2.0</strong>（如Google登录）</li>\n<li><strong>SAML</strong>（企业级应用）</li>\n<li><strong>CAS</strong>（开源单点登录框架）</li>\n</ul>\n<p>https://v.douyin.com/Wz1D4jUoOfs/</p>\n"},{"title":"如何做无感 token 刷新？","description":"","answer":"<p><strong>无感 Token 刷新实现核心步骤：</strong></p>\n<ol>\n<li><strong>双 Token 机制</strong>：\n<ul>\n<li>Access Token（短期有效，如2小时）</li>\n<li>Refresh Token（长期有效，存储于安全位置如 HttpOnly Cookie）</li>\n</ul>\n</li>\n<li><strong>请求拦截</strong>：\n<ul>\n<li>发起请求时携带 Access Token</li>\n<li>若接口返回 <code>401</code>（Token过期），触发刷新流程</li>\n</ul>\n</li>\n<li><strong>刷新控制</strong>：\n<ul>\n<li><strong>防并发刷新</strong>：首个过期请求发起刷新，后续请求挂起队列</li>\n<li><strong>刷新请求</strong>：用 Refresh Token 请求新 Access Token</li>\n<li><strong>更新存储</strong>：新 Token 更新到内存及本地存储</li>\n</ul>\n</li>\n<li><strong>失败处理</strong>：\n<ul>\n<li>刷新失败则清除 Token，跳转登录页</li>\n</ul>\n</li>\n</ol>\n<p><strong>代码关键逻辑（Axios 拦截器示例）</strong>：</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#AB5959\">let</span><span style=\"color:#B07D48\"> isRefreshing</span><span style=\"color:#999999\"> =</span><span style=\"color:#1E754F\"> false</span><span style=\"color:#999999\">;</span><span style=\"color:#A0ADA0\"> // 刷新锁</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">let</span><span style=\"color:#B07D48\"> requestsQueue</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> [];</span><span style=\"color:#A0ADA0\"> // 等待队列</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">// 响应拦截器</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">axios</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">interceptors</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">response</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">use</span><span style=\"color:#999999\">(</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  response</span><span style=\"color:#999999\"> =></span><span style=\"color:#B07D48\"> response</span><span style=\"color:#999999\">,</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  async</span><span style=\"color:#B07D48\"> error</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">    if</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">error</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">status</span><span style=\"color:#AB5959\"> !==</span><span style=\"color:#2F798A\"> 401</span><span style=\"color:#999999\">)</span><span style=\"color:#1E754F\"> return</span><span style=\"color:#998418\"> Promise</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">reject</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">error</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">    </span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    // 非重复的刷新请求</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">    if</span><span style=\"color:#999999\"> (</span><span style=\"color:#AB5959\">!</span><span style=\"color:#B07D48\">isRefreshing</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">      isRefreshing</span><span style=\"color:#999999\"> =</span><span style=\"color:#1E754F\"> true</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">      try</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">        const</span><span style=\"color:#999999\"> {</span><span style=\"color:#B07D48\"> newToken</span><span style=\"color:#999999\"> }</span><span style=\"color:#999999\"> =</span><span style=\"color:#1E754F\"> await</span><span style=\"color:#59873A\"> refreshToken</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">        localStorage</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">setItem</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">token</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> newToken</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">        // 重放队列中所有请求</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">        requestsQueue</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">forEach</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">cb</span><span style=\"color:#999999\"> =></span><span style=\"color:#59873A\"> cb</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">newToken</span><span style=\"color:#999999\">));</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">        return</span><span style=\"color:#59873A\"> axios</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">error</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">config</span><span style=\"color:#999999\">);</span><span style=\"color:#A0ADA0\"> // 重试原请求</span></span>\n<span class=\"line\"><span style=\"color:#999999\">      }</span><span style=\"color:#1E754F\"> catch</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">e</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">        logout</span><span style=\"color:#999999\">();</span><span style=\"color:#A0ADA0\"> // 清除Token并跳转登录</span></span>\n<span class=\"line\"><span style=\"color:#999999\">      }</span><span style=\"color:#1E754F\"> finally</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">        isRefreshing</span><span style=\"color:#999999\"> =</span><span style=\"color:#1E754F\"> false</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">        requestsQueue</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> [];</span></span>\n<span class=\"line\"><span style=\"color:#999999\">      }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">    </span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    // 已有刷新任务时，将请求加入队列</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">    return</span><span style=\"color:#AB5959\"> new</span><span style=\"color:#998418\"> Promise</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">resolve</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">      requestsQueue</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">push</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">token</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">        error</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">config</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">headers</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">Authorization</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> token</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">        resolve</span><span style=\"color:#999999\">(</span><span style=\"color:#59873A\">axios</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">error</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">config</span><span style=\"color:#999999\">));</span></span>\n<span class=\"line\"><span style=\"color:#999999\">      });</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    });</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>关键设计点</strong>：</p>\n<ul>\n<li><strong>安全存储</strong>：Refresh Token 建议通过 HttpOnly Cookie 传输</li>\n<li><strong>滑动过期</strong>：每次刷新重置 Refresh Token 有效期</li>\n<li><strong>心跳检测</strong>：页面活跃时预刷新 Token 避免突然中断</li>\n<li><strong>服务端协同</strong>：维护 Token 黑名单/白名单机制</li>\n</ul>\n<p>https://v.douyin.com/XDvlASKVr94/</p>\n"},{"title":"前端如何用 canvas 来做电影院选票功能，请简要说明","description":"","answer":"<pre><code class=\"language-vue\"><div class=\"language-vue \"><span class=\"lang\">vue</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">template</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;</span><span style=\"color:#1E754F\">canvas</span><span style=\"color:#B07D48\"> ref</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">canvas</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\"> @</span><span style=\"color:#59873A\">click</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\">handleClick</span><span style=\"color:#999999\">\"</span><span style=\"color:#999999\">>&#x3C;/</span><span style=\"color:#1E754F\">canvas</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span><span style=\"color:#393A34\">已选座位：</span><span style=\"color:#999999\">{{</span><span style=\"color:#B07D48\"> selectedSeats</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">join</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">, </span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> }}&#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">template</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">script</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">export</span><span style=\"color:#1E754F\"> default</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">  data</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">    return</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#998418\">      seats</span><span style=\"color:#999999\">:</span><span style=\"color:#999999\"> [],</span><span style=\"color:#A0ADA0\">        // 二维数组存储座位状态 0:可售 1:已选 2:已售</span></span>\n<span class=\"line\"><span style=\"color:#998418\">      seatSize</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 30</span><span style=\"color:#999999\">,</span><span style=\"color:#A0ADA0\">     // 座位直径</span></span>\n<span class=\"line\"><span style=\"color:#998418\">      gap</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 15</span><span style=\"color:#999999\">,</span><span style=\"color:#A0ADA0\">          // 座位间距</span></span>\n<span class=\"line\"><span style=\"color:#998418\">      selectedSeats</span><span style=\"color:#999999\">:</span><span style=\"color:#999999\"> []</span><span style=\"color:#A0ADA0\"> // 记录选中座位</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  },</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">  mounted</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">    this</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">initCanvas</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">    this</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">generateSeats</span><span style=\"color:#999999\">(</span><span style=\"color:#2F798A\">10</span><span style=\"color:#999999\">,</span><span style=\"color:#2F798A\"> 8</span><span style=\"color:#999999\">);</span><span style=\"color:#A0ADA0\"> // 生成10排8列</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">    this</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">draw</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  },</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  methods</span><span style=\"color:#999999\">:</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    // 1. 初始化画布</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">    initCanvas</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">      const</span><span style=\"color:#B07D48\"> canvas</span><span style=\"color:#999999\"> =</span><span style=\"color:#A65E2B\"> this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">$refs</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">canvas</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">      const</span><span style=\"color:#B07D48\"> dpr</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> window</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">devicePixelRatio</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">      const</span><span style=\"color:#B07D48\"> rect</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> canvas</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">getBoundingClientRect</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">      </span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">      canvas</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">width</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> rect</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">width</span><span style=\"color:#AB5959\"> *</span><span style=\"color:#B07D48\"> dpr</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">      canvas</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">height</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> rect</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">height</span><span style=\"color:#AB5959\"> *</span><span style=\"color:#B07D48\"> dpr</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">      this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">ctx</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> canvas</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">getContext</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">2d</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">      this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">ctx</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">scale</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">dpr</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> dpr</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    },</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    // 2. 生成座位数据（示例）</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">    generateSeats</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">rows</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> cols</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">      this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">seats</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> Array</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">from</span><span style=\"color:#999999\">({</span><span style=\"color:#998418\"> length</span><span style=\"color:#999999\">:</span><span style=\"color:#B07D48\"> rows</span><span style=\"color:#999999\"> },</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">_</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> i</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#393A34\"> </span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">        Array</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">from</span><span style=\"color:#999999\">({</span><span style=\"color:#998418\"> length</span><span style=\"color:#999999\">:</span><span style=\"color:#B07D48\"> cols</span><span style=\"color:#999999\"> },</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">_</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> j</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">          if</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">j</span><span style=\"color:#AB5959\"> ===</span><span style=\"color:#2F798A\"> 3</span><span style=\"color:#AB5959\"> ||</span><span style=\"color:#B07D48\"> j</span><span style=\"color:#AB5959\"> ===</span><span style=\"color:#2F798A\"> 4</span><span style=\"color:#999999\">)</span><span style=\"color:#1E754F\"> return</span><span style=\"color:#2F798A\"> 2</span><span style=\"color:#999999\">;</span><span style=\"color:#A0ADA0\"> // 模拟中间走道</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">          return</span><span style=\"color:#B07D48\"> Math</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">random</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> ></span><span style=\"color:#2F798A\"> 0.8</span><span style=\"color:#AB5959\"> ?</span><span style=\"color:#2F798A\"> 2</span><span style=\"color:#AB5959\"> :</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">;</span><span style=\"color:#A0ADA0\"> // 随机生成已售座位</span></span>\n<span class=\"line\"><span style=\"color:#999999\">        })</span></span>\n<span class=\"line\"><span style=\"color:#999999\">      );</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    },</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    // 3. 绘制座位图</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">    draw</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">      this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">ctx</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">clearRect</span><span style=\"color:#999999\">(</span><span style=\"color:#2F798A\">0</span><span style=\"color:#999999\">,</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">,</span><span style=\"color:#A65E2B\"> this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">ctx</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">canvas</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">width</span><span style=\"color:#999999\">,</span><span style=\"color:#A65E2B\"> this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">ctx</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">canvas</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">height</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">      </span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">      this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">seats</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">forEach</span><span style=\"color:#999999\">((</span><span style=\"color:#B07D48\">row</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> i</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">        row</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">forEach</span><span style=\"color:#999999\">((</span><span style=\"color:#B07D48\">state</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> j</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">          if</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">state</span><span style=\"color:#AB5959\"> ===</span><span style=\"color:#2F798A\"> 2</span><span style=\"color:#999999\">)</span><span style=\"color:#1E754F\"> return</span><span style=\"color:#999999\">;</span><span style=\"color:#A0ADA0\"> // 已售不绘制</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">          </span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">          const</span><span style=\"color:#B07D48\"> x</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> j</span><span style=\"color:#AB5959\"> *</span><span style=\"color:#999999\"> (</span><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">seatSize</span><span style=\"color:#AB5959\"> +</span><span style=\"color:#A65E2B\"> this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">gap</span><span style=\"color:#999999\">)</span><span style=\"color:#AB5959\"> +</span><span style=\"color:#A65E2B\"> this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">gap</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">          const</span><span style=\"color:#B07D48\"> y</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> i</span><span style=\"color:#AB5959\"> *</span><span style=\"color:#999999\"> (</span><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">seatSize</span><span style=\"color:#AB5959\"> +</span><span style=\"color:#A65E2B\"> this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">gap</span><span style=\"color:#999999\">)</span><span style=\"color:#AB5959\"> +</span><span style=\"color:#A65E2B\"> this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">gap</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">          </span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">          // 绘制座位</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">          this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">ctx</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">beginPath</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">          this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">ctx</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">arc</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">x</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> y</span><span style=\"color:#999999\">,</span><span style=\"color:#A65E2B\"> this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">seatSize</span><span style=\"color:#AB5959\">/</span><span style=\"color:#2F798A\">2</span><span style=\"color:#999999\">,</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> Math</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">PI</span><span style=\"color:#AB5959\">*</span><span style=\"color:#2F798A\">2</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">          this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">ctx</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">fillStyle</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> state</span><span style=\"color:#AB5959\"> ===</span><span style=\"color:#2F798A\"> 1</span><span style=\"color:#AB5959\"> ?</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">#f00</span><span style=\"color:#B5695977\">'</span><span style=\"color:#AB5959\"> :</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">#4CAF50</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">          this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">ctx</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">fill</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">          this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">ctx</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">stroke</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#999999\">        });</span></span>\n<span class=\"line\"><span style=\"color:#999999\">      });</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    },</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    // 4. 处理点击事件</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">    handleClick</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">e</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">      const</span><span style=\"color:#B07D48\"> rect</span><span style=\"color:#999999\"> =</span><span style=\"color:#A65E2B\"> this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">$refs</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">canvas</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">getBoundingClientRect</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">      const</span><span style=\"color:#B07D48\"> x</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> e</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">clientX</span><span style=\"color:#AB5959\"> -</span><span style=\"color:#B07D48\"> rect</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">left</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">      const</span><span style=\"color:#B07D48\"> y</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> e</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">clientY</span><span style=\"color:#AB5959\"> -</span><span style=\"color:#B07D48\"> rect</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">top</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">      </span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">      // 坐标转行列号</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">      const</span><span style=\"color:#B07D48\"> col</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> Math</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">floor</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">x</span><span style=\"color:#AB5959\"> /</span><span style=\"color:#999999\"> (</span><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">seatSize</span><span style=\"color:#AB5959\"> +</span><span style=\"color:#A65E2B\"> this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">gap</span><span style=\"color:#999999\">));</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">      const</span><span style=\"color:#B07D48\"> row</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> Math</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">floor</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">y</span><span style=\"color:#AB5959\"> /</span><span style=\"color:#999999\"> (</span><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">seatSize</span><span style=\"color:#AB5959\"> +</span><span style=\"color:#A65E2B\"> this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">gap</span><span style=\"color:#999999\">));</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">      </span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">      if</span><span style=\"color:#999999\"> (</span><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">seats</span><span style=\"color:#999999\">[</span><span style=\"color:#B07D48\">row</span><span style=\"color:#999999\">]?.[</span><span style=\"color:#B07D48\">col</span><span style=\"color:#999999\">]</span><span style=\"color:#AB5959\"> ===</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">        this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">seats</span><span style=\"color:#999999\">[</span><span style=\"color:#B07D48\">row</span><span style=\"color:#999999\">][</span><span style=\"color:#B07D48\">col</span><span style=\"color:#999999\">]</span><span style=\"color:#999999\"> =</span><span style=\"color:#2F798A\"> 1</span><span style=\"color:#999999\">;</span><span style=\"color:#A0ADA0\"> // 标记选中</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">        this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">selectedSeats</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">push</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">`</span><span style=\"color:#1E754F\">${</span><span style=\"color:#B56959\">row</span><span style=\"color:#AB5959\">+</span><span style=\"color:#2F798A\">1</span><span style=\"color:#1E754F\">}</span><span style=\"color:#B56959\">排</span><span style=\"color:#1E754F\">${</span><span style=\"color:#B56959\">col</span><span style=\"color:#AB5959\">+</span><span style=\"color:#2F798A\">1</span><span style=\"color:#1E754F\">}</span><span style=\"color:#B56959\">座</span><span style=\"color:#B5695977\">`</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">      }</span><span style=\"color:#1E754F\"> else</span><span style=\"color:#1E754F\"> if</span><span style=\"color:#999999\"> (</span><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">seats</span><span style=\"color:#999999\">[</span><span style=\"color:#B07D48\">row</span><span style=\"color:#999999\">]?.[</span><span style=\"color:#B07D48\">col</span><span style=\"color:#999999\">]</span><span style=\"color:#AB5959\"> ===</span><span style=\"color:#2F798A\"> 1</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">        this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">seats</span><span style=\"color:#999999\">[</span><span style=\"color:#B07D48\">row</span><span style=\"color:#999999\">][</span><span style=\"color:#B07D48\">col</span><span style=\"color:#999999\">]</span><span style=\"color:#999999\"> =</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">;</span><span style=\"color:#A0ADA0\"> // 取消选中</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">        this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">selectedSeats</span><span style=\"color:#999999\"> =</span><span style=\"color:#A65E2B\"> this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">selectedSeats</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">filter</span><span style=\"color:#999999\">(</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">          s</span><span style=\"color:#999999\"> =></span><span style=\"color:#B07D48\"> s</span><span style=\"color:#AB5959\"> !==</span><span style=\"color:#B5695977\"> `</span><span style=\"color:#1E754F\">${</span><span style=\"color:#B56959\">row</span><span style=\"color:#AB5959\">+</span><span style=\"color:#2F798A\">1</span><span style=\"color:#1E754F\">}</span><span style=\"color:#B56959\">排</span><span style=\"color:#1E754F\">${</span><span style=\"color:#B56959\">col</span><span style=\"color:#AB5959\">+</span><span style=\"color:#2F798A\">1</span><span style=\"color:#1E754F\">}</span><span style=\"color:#B56959\">座</span><span style=\"color:#B5695977\">`</span></span>\n<span class=\"line\"><span style=\"color:#999999\">        );</span></span>\n<span class=\"line\"><span style=\"color:#999999\">      }</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">      </span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">      this</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">draw</span><span style=\"color:#999999\">();</span><span style=\"color:#A0ADA0\"> // 重绘画布</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">};</span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">script</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">style</span><span style=\"color:#B07D48\"> scoped</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">canvas</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  width</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 600</span><span style=\"color:#AB5959\">px</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  height</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 400</span><span style=\"color:#AB5959\">px</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  border</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 1</span><span style=\"color:#AB5959\">px</span><span style=\"color:#A65E2B\"> solid</span><span style=\"color:#999999\"> #</span><span style=\"color:#A65E2B\">ccc</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">style</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>关键实现步骤说明：</strong></p>\n<ol>\n<li><strong>数据结构</strong>：\n<ul>\n<li>二维数组记录座位状态（可售/已选/已售）</li>\n<li>独立数组记录选中座位信息</li>\n</ul>\n</li>\n<li><strong>坐标转换</strong>：\n<ul>\n<li>将点击坐标转换为行列索引</li>\n<li>通过<code>(seatSize + gap)</code>计算每个座位区域</li>\n</ul>\n</li>\n<li><strong>绘制优化</strong>：\n<ul>\n<li>使用<code>devicePixelRatio</code>适配高清屏</li>\n<li>仅重新绘制变化部分（示例简化使用全量重绘）</li>\n</ul>\n</li>\n<li><strong>交互逻辑</strong>：\n<ul>\n<li>点击时切换状态并更新数据</li>\n<li>过滤不可选座位（走道/已售）</li>\n</ul>\n</li>\n</ol>\n<p><strong>扩展建议方向</strong>：</p>\n<ul>\n<li>双人座/情侣座特殊样式</li>\n<li>座位分区价格差异化</li>\n<li>使用离屏Canvas优化绘制性能</li>\n<li>添加座位编号标注</li>\n</ul>\n"},{"title":"一般项目里面对请求 request 都会做哪些统一封装？","description":"","answer":"<p><strong>1. 基础配置</strong></p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#A0ADA0\">// axios 实例化（baseURL、超时时间、跨域凭证）</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> request</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> axios</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">create</span><span style=\"color:#999999\">({</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  baseURL</span><span style=\"color:#999999\">:</span><span style=\"color:#1E754F\"> import</span><span style=\"color:#999999\">.</span><span style=\"color:#998418\">meta</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">env</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">VITE_API_URL</span><span style=\"color:#999999\">,</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  timeout</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 15000</span><span style=\"color:#999999\">,</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  withCredentials</span><span style=\"color:#999999\">:</span><span style=\"color:#1E754F\"> true</span></span>\n<span class=\"line\"><span style=\"color:#999999\">});</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>2. 请求拦截器</strong></p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B07D48\">request</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">interceptors</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">request</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">use</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">config</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  // 自动携带Token</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">  if</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">store</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">getters</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">token</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    config</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">headers</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">Authorization</span><span style=\"color:#999999\"> =</span><span style=\"color:#B5695977\"> `</span><span style=\"color:#B56959\">Bearer </span><span style=\"color:#1E754F\">${</span><span style=\"color:#B56959\">store</span><span style=\"color:#999999\">.</span><span style=\"color:#B56959\">getters</span><span style=\"color:#999999\">.</span><span style=\"color:#B56959\">token</span><span style=\"color:#1E754F\">}</span><span style=\"color:#B5695977\">`</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  // 全局Loading控制（可选）</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">  if</span><span style=\"color:#999999\"> (</span><span style=\"color:#AB5959\">!</span><span style=\"color:#B07D48\">config</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">silent</span><span style=\"color:#999999\">)</span><span style=\"color:#59873A\"> showLoading</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  // 序列化GET请求数组参数（将 [1,2] 转成 1,2）</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">  if</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">config</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">params</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    config</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">paramsSerializer</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> params</span><span style=\"color:#999999\"> =></span><span style=\"color:#B07D48\"> qs</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">stringify</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">params</span><span style=\"color:#999999\">,</span><span style=\"color:#999999\"> {</span><span style=\"color:#998418\"> arrayFormat</span><span style=\"color:#999999\">:</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">comma</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\"> });</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">  return</span><span style=\"color:#B07D48\"> config</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">});</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>3. 响应拦截器</strong></p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B07D48\">request</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">interceptors</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">response</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">use</span><span style=\"color:#999999\">(</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  response</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    // 关闭Loading（与请求拦截器配对）</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">    if</span><span style=\"color:#999999\"> (</span><span style=\"color:#AB5959\">!</span><span style=\"color:#B07D48\">response</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">config</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">silent</span><span style=\"color:#999999\">)</span><span style=\"color:#59873A\"> hideLoading</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">    </span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    // 处理二进制流（如文件下载）</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">    if</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">response</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">data</span><span style=\"color:#AB5959\"> instanceof</span><span style=\"color:#2E8F82\"> Blob</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">      return</span><span style=\"color:#B07D48\"> response</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">    </span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    // 按后端约定结构处理（示例：{ code, data, msg }）</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">    const</span><span style=\"color:#999999\"> {</span><span style=\"color:#B07D48\"> code</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> data</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> msg</span><span style=\"color:#999999\"> }</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> response</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">data</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">    if</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">code</span><span style=\"color:#AB5959\"> ===</span><span style=\"color:#2F798A\"> 200</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">      return</span><span style=\"color:#B07D48\"> data</span><span style=\"color:#999999\">;</span><span style=\"color:#A0ADA0\"> // 核心数据剥离</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span><span style=\"color:#1E754F\"> else</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">      return</span><span style=\"color:#998418\"> Promise</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">reject</span><span style=\"color:#999999\">(</span><span style=\"color:#AB5959\">new</span><span style=\"color:#59873A\"> Error</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">msg</span><span style=\"color:#AB5959\"> ||</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">请求异常</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">));</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  },</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  error</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">    hideLoading</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">    const</span><span style=\"color:#999999\"> {</span><span style=\"color:#B07D48\"> response</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> code</span><span style=\"color:#999999\"> }</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> error</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">    </span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    // 统一错误处理</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">    if</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">code</span><span style=\"color:#AB5959\"> ===</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">ECONNABORTED</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">      error</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">message</span><span style=\"color:#999999\"> =</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">请求超时，请检查网络</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span><span style=\"color:#1E754F\"> else</span><span style=\"color:#1E754F\"> if</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">response</span><span style=\"color:#999999\">?.</span><span style=\"color:#B07D48\">status</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">      switch</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">response</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">status</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">        case</span><span style=\"color:#2F798A\"> 401</span><span style=\"color:#999999\">:</span><span style=\"color:#393A34\"> </span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">          router</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">push</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">/login</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">          break</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">        case</span><span style=\"color:#2F798A\"> 403</span><span style=\"color:#999999\">:</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">          error</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">message</span><span style=\"color:#999999\"> =</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">无权访问</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">          break</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">        case</span><span style=\"color:#2F798A\"> 500</span><span style=\"color:#999999\">:</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">          error</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">message</span><span style=\"color:#999999\"> =</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">服务器异常</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">          break</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">      }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">    </span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    // 非静默模式显示错误提示</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">    if</span><span style=\"color:#999999\"> (</span><span style=\"color:#AB5959\">!</span><span style=\"color:#B07D48\">error</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">config</span><span style=\"color:#999999\">?.</span><span style=\"color:#B07D48\">silent</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">      Message</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">error</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">error</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">message</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">    return</span><span style=\"color:#998418\"> Promise</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">reject</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">error</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>4. 核心功能扩展</strong></p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#A0ADA0\">// 请求取消（防重复提交）</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> cancelTokenMap</span><span style=\"color:#999999\"> =</span><span style=\"color:#AB5959\"> new</span><span style=\"color:#59873A\"> Map</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#59873A\"> addCancelToken</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">config</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> key</span><span style=\"color:#999999\"> =</span><span style=\"color:#B5695977\"> `</span><span style=\"color:#1E754F\">${</span><span style=\"color:#B56959\">config</span><span style=\"color:#999999\">.</span><span style=\"color:#B56959\">method</span><span style=\"color:#1E754F\">}</span><span style=\"color:#B56959\">-</span><span style=\"color:#1E754F\">${</span><span style=\"color:#B56959\">config</span><span style=\"color:#999999\">.</span><span style=\"color:#B56959\">url</span><span style=\"color:#1E754F\">}</span><span style=\"color:#B5695977\">`</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  config</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">cancelToken</span><span style=\"color:#999999\"> =</span><span style=\"color:#AB5959\"> new</span><span style=\"color:#B07D48\"> axios</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">CancelToken</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">c</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    cancelTokenMap</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">set</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">key</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> c</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  });</span></span>\n<span class=\"line\"><span style=\"color:#999999\">};</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>5. 业务层封装</strong></p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#A0ADA0\">// 统一请求方法（支持自动错误捕获）</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">export</span><span style=\"color:#AB5959\"> function</span><span style=\"color:#59873A\"> http</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">opt</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">  return</span><span style=\"color:#59873A\"> request</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">opt</span><span style=\"color:#999999\">).</span><span style=\"color:#59873A\">catch</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">err</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    // 主动取消的请求不报错（如路由跳转时取消pending请求）</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">    if</span><span style=\"color:#999999\"> (</span><span style=\"color:#AB5959\">!</span><span style=\"color:#B07D48\">axios</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">isCancel</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">err</span><span style=\"color:#999999\">))</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">      throw</span><span style=\"color:#B07D48\"> err</span><span style=\"color:#999999\">;</span><span style=\"color:#A0ADA0\"> // 继续抛出给业务层处理</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  });</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">// 示例：GET请求简化版</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">export</span><span style=\"color:#AB5959\"> function</span><span style=\"color:#59873A\"> get</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">url</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> params</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> opt</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> {})</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">  return</span><span style=\"color:#59873A\"> http</span><span style=\"color:#999999\">({</span><span style=\"color:#998418\"> method</span><span style=\"color:#999999\">:</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">get</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> url</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> params</span><span style=\"color:#999999\">,</span><span style=\"color:#999999\"> ...</span><span style=\"color:#B07D48\">opt</span><span style=\"color:#999999\"> });</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">// 示例：POST请求简化版（支持FormData自动转换）</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">export</span><span style=\"color:#AB5959\"> function</span><span style=\"color:#59873A\"> post</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">url</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> data</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> opt</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> {})</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> isFormData</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> data</span><span style=\"color:#AB5959\"> instanceof</span><span style=\"color:#2E8F82\"> FormData</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">  return</span><span style=\"color:#59873A\"> http</span><span style=\"color:#999999\">({</span></span>\n<span class=\"line\"><span style=\"color:#998418\">    method</span><span style=\"color:#999999\">:</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">post</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    url</span><span style=\"color:#999999\">,</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    data</span><span style=\"color:#999999\">,</span></span>\n<span class=\"line\"><span style=\"color:#998418\">    headers</span><span style=\"color:#999999\">:</span><span style=\"color:#B07D48\"> isFormData</span><span style=\"color:#AB5959\"> ?</span><span style=\"color:#999999\"> {</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">Content-Type</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">:</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">multipart/form-data</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\"> }</span><span style=\"color:#AB5959\"> :</span><span style=\"color:#999999\"> {},</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    ...</span><span style=\"color:#B07D48\">opt</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  });</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>6. 高级功能（按需实现）</strong></p>\n<ul>\n<li>\n<p><strong>请求重试</strong>：对特定状态码（如502）自动重试</p>\n</li>\n<li>\n<p><strong>缓存策略</strong>：对GET请求添加内存缓存（<code>new Map()</code>）</p>\n</li>\n<li>\n<p><strong>并发控制</strong>：限制同一接口的并行请求数量</p>\n</li>\n<li>\n<p><strong>Mock适配</strong>：开发环境拦截请求返回模拟数据</p>\n</li>\n<li>\n<p><strong>TypeScript支持</strong>：封装泛型请求类型</p>\n<pre><code class=\"language-typescript\"><div class=\"language-typescript \"><span class=\"lang\">typescript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#1E754F\">export</span><span style=\"color:#AB5959\"> interface</span><span style=\"color:#2E8F82\"> Response</span><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#2E8F82\">T</span><span style=\"color:#999999\"> =</span><span style=\"color:#2E8F82\"> any</span><span style=\"color:#999999\">></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  code</span><span style=\"color:#999999\">: </span><span style=\"color:#2E8F82\">number</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  data</span><span style=\"color:#999999\">: </span><span style=\"color:#2E8F82\">T</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  message</span><span style=\"color:#999999\">: </span><span style=\"color:#2E8F82\">string</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#1E754F\">export</span><span style=\"color:#AB5959\"> function</span><span style=\"color:#59873A\"> get</span><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#2E8F82\">T</span><span style=\"color:#999999\">>(</span><span style=\"color:#B07D48\">url</span><span style=\"color:#999999\">: </span><span style=\"color:#2E8F82\">string</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> params</span><span style=\"color:#AB5959\">?</span><span style=\"color:#999999\">: </span><span style=\"color:#2E8F82\">any</span><span style=\"color:#999999\">):</span><span style=\"color:#2E8F82\"> Promise</span><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#2E8F82\">Response</span><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#2E8F82\">T</span><span style=\"color:#999999\">>></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">  return</span><span style=\"color:#B07D48\"> request</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">get</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">url</span><span style=\"color:#999999\">,</span><span style=\"color:#999999\"> { </span><span style=\"color:#B07D48\">params</span><span style=\"color:#999999\"> });</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n</ul>\n<p><strong>封装价值</strong>：</p>\n<ol>\n<li><strong>降低重复代码</strong>：统一处理鉴权、错误、Loading等通用逻辑</li>\n<li><strong>规范团队协作</strong>：强制约定请求格式和响应处理</li>\n<li><strong>增强可维护性</strong>：核心逻辑集中管理，修改影响可控</li>\n<li><strong>安全增强</strong>：统一处理XSS防范、CSRF Token等安全策略</li>\n<li><strong>扩展性提升</strong>：可快速集成监控上报、性能采集等能力</li>\n</ol>\n<p><a href=\"https://github.com/pro-collection/interview-question/issues/498\" target=\"_blank\" rel=\"noopener noreferrer\">一般项目里面对请求 request 都会做哪些统一封装？</a></p>\n"},{"title":"XHR 和 Fetch 是否支持取消请求?","description":"","answer":"<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> xhr</span><span style=\"color:#999999\"> =</span><span style=\"color:#AB5959\"> new</span><span style=\"color:#59873A\"> XMLHttpRequest</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">xhr</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">open</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">GET</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">/api/data</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">xhr</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">send</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">// 取消请求</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">xhr</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">abort</span><span style=\"color:#999999\">();</span><span style=\"color:#393A34\"> </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">// 监听取消事件</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">xhr</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">onabort</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> ()</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  console</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">log</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">请求已取消</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> controller</span><span style=\"color:#999999\"> =</span><span style=\"color:#AB5959\"> new</span><span style=\"color:#59873A\"> AbortController</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> signal</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> controller</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">signal</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">// 发起请求时传入 signal</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">fetch</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">/api/data</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#999999\"> {</span><span style=\"color:#B07D48\"> signal</span><span style=\"color:#999999\"> })</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  .</span><span style=\"color:#59873A\">then</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">response</span><span style=\"color:#999999\"> =></span><span style=\"color:#B07D48\"> response</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">json</span><span style=\"color:#999999\">())</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  .</span><span style=\"color:#59873A\">catch</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">err</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">    if</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">err</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">name</span><span style=\"color:#AB5959\"> ===</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">AbortError</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">      console</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">log</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">请求已取消</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  });</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">// 取消请求</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">controller</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">abort</span><span style=\"color:#999999\">();</span><span style=\"color:#393A34\"> </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><a href=\"https://github.com/pro-collection/interview-question/issues/575\" target=\"_blank\" rel=\"noopener noreferrer\">XHR 和 Fetch 是否支持取消请求</a></p>\n"},{"title":"应用上线后，怎么通知用户刷新当前页面？","description":"","answer":"<ol>\n<li>\n<p>WebSocket 实时推送</p>\n</li>\n<li>\n<p>轮询版本号接口</p>\n</li>\n<li>\n<p>页面可见性检查优化:监听visibilitychange → 页面从隐藏切回时触发版本检查</p>\n</li>\n</ol>\n"},{"title":"设计一个前端权限控制系统?","description":"","answer":"<p><strong>前端权限控制核心流程：</strong></p>\n<p><strong>1. 权限控制维度</strong></p>\n<ul>\n<li><strong>路由权限</strong>：控制页面访问权限</li>\n<li><strong>操作权限</strong>：控制按钮/功能是否展示</li>\n<li><strong>数据权限</strong>：控制接口请求参数（通常后端处理）</li>\n</ul>\n<p><strong>2. 实现流程</strong></p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">template</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#393A34\">  &#x3C;!-- 按钮级权限控制 --></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;</span><span style=\"color:#1E754F\">button</span><span style=\"color:#B07D48\"> v-if</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">hasPermission('add')</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">></span><span style=\"color:#393A34\">新增</span><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">button</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">template</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">script</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#393A34\">export default </span><span style=\"color:#999999\">{</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">  data</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">    return </span><span style=\"color:#999999\">{</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">      // 模拟从接口获取的权限列表</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">      permissionList</span><span style=\"color:#999999\">:</span><span style=\"color:#999999\"> [</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">view</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">edit</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">]</span><span style=\"color:#393A34\"> </span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  },</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  methods</span><span style=\"color:#393A34\">: </span><span style=\"color:#999999\">{</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    // 权限校验方法</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">    hasPermission</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">code</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">      return</span><span style=\"color:#A65E2B\"> this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">permissionList</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">includes</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">code</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  },</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">  beforeCreate</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    // 动态路由处理（需在路由配置前完成）</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">    const </span><span style=\"color:#B07D48\">routes</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> asyncRoutes</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">filter</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">route</span><span style=\"color:#999999\"> =></span><span style=\"color:#393A34\"> </span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">      this</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">hasPermission</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">route</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">meta</span><span style=\"color:#999999\">?.</span><span style=\"color:#B07D48\">permission</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    )</span><span style=\"color:#393A34\">;</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">    this.$router.addRoutes(routes);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">script</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>3. 完整实现步骤</strong></p>\n<p><strong>步骤1：定义路由权限元信息</strong></p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#A0ADA0\">// router.js</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> routes</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> [</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  {</span></span>\n<span class=\"line\"><span style=\"color:#998418\">    path</span><span style=\"color:#999999\">:</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">/dashboard</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span></span>\n<span class=\"line\"><span style=\"color:#998418\">    component</span><span style=\"color:#999999\">:</span><span style=\"color:#B07D48\"> Dashboard</span><span style=\"color:#999999\">,</span></span>\n<span class=\"line\"><span style=\"color:#998418\">    meta</span><span style=\"color:#999999\">:</span><span style=\"color:#999999\"> {</span><span style=\"color:#998418\"> permission</span><span style=\"color:#999999\">:</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">view_dashboard</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\"> }</span><span style=\"color:#A0ADA0\"> // 权限标识</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  },</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  // ...其他路由</span></span>\n<span class=\"line\"><span style=\"color:#999999\">];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">// 异步路由（需动态加载）</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">export</span><span style=\"color:#AB5959\"> const</span><span style=\"color:#B07D48\"> asyncRoutes</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> [</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  {</span></span>\n<span class=\"line\"><span style=\"color:#998418\">    path</span><span style=\"color:#999999\">:</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">/admin</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span></span>\n<span class=\"line\"><span style=\"color:#998418\">    component</span><span style=\"color:#999999\">:</span><span style=\"color:#B07D48\"> Admin</span><span style=\"color:#999999\">,</span></span>\n<span class=\"line\"><span style=\"color:#998418\">    meta</span><span style=\"color:#999999\">:</span><span style=\"color:#999999\"> {</span><span style=\"color:#998418\"> permission</span><span style=\"color:#999999\">:</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">admin_access</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\"> }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">];</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>步骤2：路由守卫全局拦截</strong></p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B07D48\">router</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">beforeEach</span><span style=\"color:#999999\">((</span><span style=\"color:#B07D48\">to</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> from</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> next</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  // 已登录且需要权限的路由</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">  if</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">isLogin</span><span style=\"color:#AB5959\"> &#x26;&#x26;</span><span style=\"color:#B07D48\"> to</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">meta</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">permission</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    // 从Vuex获取权限列表</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">    const</span><span style=\"color:#B07D48\"> hasPermission</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> store</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">getters</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">permissions</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">includes</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">to</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">meta</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">permission</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    hasPermission</span><span style=\"color:#AB5959\"> ?</span><span style=\"color:#59873A\"> next</span><span style=\"color:#999999\">()</span><span style=\"color:#AB5959\"> :</span><span style=\"color:#59873A\"> next</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">/403</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span><span style=\"color:#1E754F\"> else</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">    next</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">});</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>步骤3：Vuex存储权限数据</strong></p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#A0ADA0\">// store/modules/user.js</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> state</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  permissions</span><span style=\"color:#999999\">:</span><span style=\"color:#999999\"> []</span></span>\n<span class=\"line\"><span style=\"color:#999999\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> mutations</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">  SET_PERMISSIONS</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">state</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> perms</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    state</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">permissions</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> perms</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">// 登录成功后存储权限</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">actions</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">login</span><span style=\"color:#999999\"> =</span><span style=\"color:#AB5959\"> async</span><span style=\"color:#999999\"> ({</span><span style=\"color:#B07D48\"> commit</span><span style=\"color:#999999\"> },</span><span style=\"color:#B07D48\"> creds</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#999999\"> {</span><span style=\"color:#B07D48\"> permissions</span><span style=\"color:#999999\"> }</span><span style=\"color:#999999\"> =</span><span style=\"color:#1E754F\"> await</span><span style=\"color:#B07D48\"> api</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">login</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">creds</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">  commit</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">SET_PERMISSIONS</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> permissions</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">};</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>步骤4：全局权限指令</strong></p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B07D48\">vue</span><span style=\"color:#A0ADA0\">// main.js</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">Vue</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">directive</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">permission</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">  inserted</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">el</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> binding</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> vnode</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">    const</span><span style=\"color:#999999\"> {</span><span style=\"color:#B07D48\"> value</span><span style=\"color:#999999\"> }</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> binding</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">    const</span><span style=\"color:#B07D48\"> hasPerm</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> store</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">getters</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">permissions</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">includes</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">value</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">    </span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">    if</span><span style=\"color:#999999\"> (</span><span style=\"color:#AB5959\">!</span><span style=\"color:#B07D48\">hasPerm</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">      el</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">parentNode</span><span style=\"color:#999999\">?.</span><span style=\"color:#59873A\">removeChild</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">el</span><span style=\"color:#999999\">);</span><span style=\"color:#A0ADA0\"> // 直接移除DOM</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">// 使用方式</span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">button</span><span style=\"color:#B07D48\"> v-permission</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">'delete'</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">></span><span style=\"color:#393A34\">删除</span><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">button</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>4. 高级优化方案</strong></p>\n<ul>\n<li>\n<p><strong>权限变更监听</strong>：WebSocket实时同步权限变化</p>\n</li>\n<li>\n<p><strong>按钮级组件封装</strong></p>\n<pre><code class=\"language-vue\"><div class=\"language-vue \"><span class=\"lang\">vue</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">Permission</span><span style=\"color:#999999\"> :</span><span style=\"color:#59873A\">code</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">export</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">\"</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#393A34\">  &#x3C;button>导出数据&#x3C;/button></span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">Permission</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>路由自动注册</strong>：根据权限树自动生成前端路由</p>\n</li>\n<li>\n<p><strong>接口权限映射</strong>：拦截请求验证是否有权限标识</p>\n</li>\n</ul>\n<p><strong>注意事项</strong></p>\n<ol>\n<li><strong>前端防篡改</strong>：后端必须做二次权限验证</li>\n<li><strong>默认拒绝原则</strong>：未明确授权的路由默认不可访问</li>\n<li><strong>权限粒度控制</strong>：建议使用RBAC（角色-权限-资源）模型</li>\n<li><strong>敏感操作日志</strong>：关键操作记录审计日志</li>\n</ol>\n<p>通过这套方案，可以实现从路由到按钮的全链路权限控制，且通过Vue指令和组件封装保持代码简洁性。</p>\n"},{"title":"设计一个无限滚动加载的列表 ","description":"","answer":"<ol>\n<li>监听滚动事件，计算触底条件</li>\n<li>触底时异步加载数据</li>\n<li>拼接新数据并更新状态</li>\n<li>处理加载状态和边界条件</li>\n</ol>\n<pre><code class=\"language-vue\"><div class=\"language-vue \"><span class=\"lang\">vue</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">template</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#B07D48\"> class</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">scroll-container</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\"> @</span><span style=\"color:#59873A\">scroll</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\">handleScroll</span><span style=\"color:#999999\">\"</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    &#x3C;!-- 数据列表 --></span></span>\n<span class=\"line\"><span style=\"color:#999999\">    &#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#1E754F\"> v-for</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\">item</span><span style=\"color:#AB5959\"> in</span><span style=\"color:#B07D48\"> list</span><span style=\"color:#999999\">\"</span><span style=\"color:#999999\"> :</span><span style=\"color:#59873A\">key</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\">item</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">id</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\"> class</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">item</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">>{{</span><span style=\"color:#B07D48\"> item</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">content</span><span style=\"color:#999999\"> }}&#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#393A34\">    </span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    &#x3C;!-- 加载状态提示 --></span></span>\n<span class=\"line\"><span style=\"color:#999999\">    &#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#1E754F\"> v-if</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\">isLoading</span><span style=\"color:#999999\">\"</span><span style=\"color:#999999\">></span><span style=\"color:#393A34\">加载中...</span><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">    &#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#1E754F\"> v-if</span><span style=\"color:#999999\">=</span><span style=\"color:#999999\">\"</span><span style=\"color:#B07D48\">isEnd</span><span style=\"color:#999999\">\"</span><span style=\"color:#999999\">></span><span style=\"color:#393A34\">没有更多数据了</span><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">template</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">script</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">export</span><span style=\"color:#1E754F\"> default</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">  data</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">    return</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#998418\">      list</span><span style=\"color:#999999\">:</span><span style=\"color:#999999\"> [],</span><span style=\"color:#A0ADA0\">       // 已加载数据</span></span>\n<span class=\"line\"><span style=\"color:#998418\">      page</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 1</span><span style=\"color:#999999\">,</span><span style=\"color:#A0ADA0\">        // 当前页码</span></span>\n<span class=\"line\"><span style=\"color:#998418\">      limit</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 20</span><span style=\"color:#999999\">,</span><span style=\"color:#A0ADA0\">      // 每页条数</span></span>\n<span class=\"line\"><span style=\"color:#998418\">      isLoading</span><span style=\"color:#999999\">:</span><span style=\"color:#1E754F\"> false</span><span style=\"color:#999999\">,</span><span style=\"color:#A0ADA0\">  // 加载锁</span></span>\n<span class=\"line\"><span style=\"color:#998418\">      isEnd</span><span style=\"color:#999999\">:</span><span style=\"color:#1E754F\"> false</span><span style=\"color:#A0ADA0\">    // 数据是否全部加载完毕</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    };</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  },</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">  mounted</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">    this</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">loadData</span><span style=\"color:#999999\">();</span><span style=\"color:#A0ADA0\">  // 初始化加载</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  },</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  methods</span><span style=\"color:#999999\">:</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    // 滚动事件处理</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">    handleScroll</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">e</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">      const</span><span style=\"color:#999999\"> {</span><span style=\"color:#B07D48\"> scrollTop</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> clientHeight</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> scrollHeight</span><span style=\"color:#999999\"> }</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> e</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">target</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">      // 距离底部 50px 触发加载（防抖已内置）</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">      if</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">scrollHeight</span><span style=\"color:#AB5959\"> -</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">scrollTop</span><span style=\"color:#AB5959\"> +</span><span style=\"color:#B07D48\"> clientHeight</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> &#x3C;</span><span style=\"color:#2F798A\"> 50</span><span style=\"color:#AB5959\"> &#x26;&#x26;</span><span style=\"color:#AB5959\"> !</span><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">isLoading</span><span style=\"color:#AB5959\"> &#x26;&#x26;</span><span style=\"color:#AB5959\"> !</span><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">isEnd</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">        this</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">loadData</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#999999\">      }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    },</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">    </span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    // 数据加载方法</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">    async</span><span style=\"color:#59873A\"> loadData</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">      this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">isLoading</span><span style=\"color:#999999\"> =</span><span style=\"color:#1E754F\"> true</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">      try</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">        // 模拟API请求</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">        const</span><span style=\"color:#999999\"> {</span><span style=\"color:#B07D48\"> data</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> total</span><span style=\"color:#999999\"> }</span><span style=\"color:#999999\"> =</span><span style=\"color:#1E754F\"> await</span><span style=\"color:#B07D48\"> api</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">getList</span><span style=\"color:#999999\">({</span></span>\n<span class=\"line\"><span style=\"color:#998418\">          page</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">page</span><span style=\"color:#999999\">,</span></span>\n<span class=\"line\"><span style=\"color:#998418\">          limit</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">limit</span></span>\n<span class=\"line\"><span style=\"color:#999999\">        });</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">        </span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">        this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">list</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> [...</span><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">list</span><span style=\"color:#999999\">,</span><span style=\"color:#999999\"> ...</span><span style=\"color:#B07D48\">data</span><span style=\"color:#999999\">];</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">        // 判断是否还有更多数据</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">        if</span><span style=\"color:#999999\"> (</span><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">list</span><span style=\"color:#999999\">.</span><span style=\"color:#998418\">length</span><span style=\"color:#999999\"> >=</span><span style=\"color:#B07D48\"> total</span><span style=\"color:#999999\">)</span><span style=\"color:#A65E2B\"> this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">isEnd</span><span style=\"color:#999999\"> =</span><span style=\"color:#1E754F\"> true</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">        this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">page</span><span style=\"color:#AB5959\">++</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">      }</span><span style=\"color:#1E754F\"> catch</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">err</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">        console</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">error</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">加载失败</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> err</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">      }</span><span style=\"color:#1E754F\"> finally</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">        this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">isLoading</span><span style=\"color:#999999\"> =</span><span style=\"color:#1E754F\"> false</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">      }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">};</span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">script</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">style</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">scroll-container</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  height</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 500</span><span style=\"color:#AB5959\">px</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\"> </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  overflow-y</span><span style=\"color:#999999\">:</span><span style=\"color:#A65E2B\"> auto</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#998418\">  border</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 1</span><span style=\"color:#AB5959\">px</span><span style=\"color:#A65E2B\"> solid</span><span style=\"color:#999999\"> #</span><span style=\"color:#A65E2B\">eee</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">item</span><span style=\"color:#999999\"> {</span><span style=\"color:#998418\"> padding</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 12</span><span style=\"color:#AB5959\">px</span><span style=\"color:#999999\">;</span><span style=\"color:#998418\"> border-bottom</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 1</span><span style=\"color:#AB5959\">px</span><span style=\"color:#A65E2B\"> solid</span><span style=\"color:#999999\"> #</span><span style=\"color:#A65E2B\">ccc</span><span style=\"color:#999999\">;</span><span style=\"color:#999999\"> }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">style</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n"},{"title":"解释 JWT（JSON Web Token）的验证流程","description":"","answer":"<p><strong>1. 生成阶段（用户登录）</strong></p>\n<ul>\n<li>\n<p>用户提交账号密码，服务端验证通过后生成 JWT，包含：</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">{</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  // Header（算法类型）</span></span>\n<span class=\"line\"><span style=\"color:#B5695977\">  \"</span><span style=\"color:#B56959\">alg</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#393A34\">: </span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">HS256</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">,</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#B5695977\">  \"</span><span style=\"color:#B56959\">typ</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#393A34\">: </span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">JWT</span><span style=\"color:#B5695977\">\"</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"><span style=\"color:#999999\">{</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  // Payload（业务数据）</span></span>\n<span class=\"line\"><span style=\"color:#B5695977\">  \"</span><span style=\"color:#B56959\">sub</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#393A34\">: </span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">user123</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">,</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#B5695977\">  \"</span><span style=\"color:#B56959\">exp</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#393A34\">: </span><span style=\"color:#2F798A\">1735689600</span><span style=\"color:#A0ADA0\">  // 过期时间</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>签名生成</strong>：使用密钥（如 <code>HMAC-SHA256</code>）对 <code>Header + Payload</code> 加密，生成签名（Signature）</p>\n</li>\n<li>\n<p>最终组合成 <code>Header.Base64Url + Payload.Base64Url + Signature</code> 格式的 Token 返回给客户端</p>\n</li>\n</ul>\n<p><strong>2. 传输阶段</strong></p>\n<ul>\n<li>客户端存储 Token（通常存于 <code>localStorage</code> 或 <code>Cookie</code>）</li>\n<li>后续请求通过 <code>Authorization: Bearer &lt;token&gt;</code> 携带 Token</li>\n</ul>\n<p><strong>3. 验证阶段（服务端校验）</strong></p>\n<ol>\n<li><strong>解码验证</strong>：\n<ul>\n<li>分割 Token 的三部分（Header/Payload/Signature）</li>\n<li>Base64Url 解码 Header 和 Payload</li>\n</ul>\n</li>\n<li><strong>签名校验</strong>：\n<ul>\n<li>用相同算法和密钥重新计算签名，比对是否与传入的 Signature 一致</li>\n<li><strong>防篡改关键</strong>：签名不匹配则直接拒绝请求</li>\n</ul>\n</li>\n<li><strong>业务校验</strong>：\n<ul>\n<li>检查 Payload 中的 <code>exp</code>（过期时间）是否有效</li>\n<li>验证 <code>sub</code>（用户标识）等业务字段是否合法</li>\n</ul>\n</li>\n</ol>\n<p><strong>4. 安全扩展</strong></p>\n<ul>\n<li><strong>密钥保护</strong>：使用非对称加密（如 RSA）时，私钥仅服务端持有</li>\n<li><strong>黑名单机制</strong>：如需实现主动失效，需额外维护 Token 黑名单（违背 JWT 无状态设计，慎用）</li>\n<li><strong>刷新 Token</strong>：通过独立的 Refresh Token 延长会话，降低主 Token 泄露风险</li>\n</ul>\n<p><strong>流程示意图</strong></p>\n<pre><code><div class=\"language-text \"><span class=\"lang\">text</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span>客户端 → 登录 → 服务端生成JWT → 客户端存储  </span></span>\n<span class=\"line\"><span>客户端 → 携带JWT请求 → 服务端验签 → 返回数据  </span></span>\n<span class=\"line\"><span></span></span></code></pre></div></code></pre>\n<p><strong>注意事项</strong>：</p>\n<ul>\n<li>JWT <strong>默认无加密</strong>，敏感数据需配合 HTTPS</li>\n<li>Token 存储需防 XSS（推荐 <code>HttpOnly Cookie</code>）</li>\n<li>Payload 不宜过大（影响性能）</li>\n</ul>\n"},{"title":"如何优化首屏加载时间到1秒以内？","description":"","answer":"<p><strong>一、关键渲染路径优化（Critical Rendering Path）</strong></p>\n<ol>\n<li><strong>内联关键CSS/JS</strong>\n<ul>\n<li>将首屏渲染必需的CSS（如布局、字体、关键组件样式）直接内联到HTML中，避免阻塞渲染的HTTP请求。</li>\n<li>关键JS（如初始化逻辑）可内联或通过<code>&lt;script defer&gt;</code>加载，避免阻塞DOM解析。</li>\n<li><strong>工具推荐</strong>：<code>critters</code>（提取关键CSS）、<code>webpack-inline-critical</code>。</li>\n</ul>\n</li>\n<li><strong>异步/延迟非关键资源</strong>\n<ul>\n<li>非关键JS使用<code>async</code>或<code>defer</code>，非关键CSS通过<code>&lt;link rel=&quot;preload&quot; as=&quot;style&quot; onload=&quot;this.rel='stylesheet'&quot;&gt;</code>异步加载。</li>\n<li>使用<code>Intersection Observer</code>实现图片/组件的懒加载（Lazy Load）。</li>\n</ul>\n</li>\n<li><strong>服务端渲染（SSR）或静态生成（SSG）</strong>\n<ul>\n<li>通过Next.js、Nuxt.js等框架实现SSR，或使用Gatsby、Astro生成静态HTML，减少客户端渲染耗时。</li>\n</ul>\n</li>\n</ol>\n<p><strong>二、资源加载优化</strong></p>\n<ol>\n<li><strong>资源压缩与格式优化</strong>\n<ul>\n<li><strong>图片</strong>：使用WebP/AVIF格式，通过<code>&lt;picture&gt;</code>标签兼容旧浏览器；对图标使用SVG；设置<code>srcset</code>按屏幕分辨率加载。</li>\n<li><strong>文本资源</strong>：启用Gzip/Brotli压缩（Nginx配置示例：<code>gzip on; brotli on;</code>）。</li>\n<li><strong>字体</strong>：使用<code>woff2</code>格式，通过<code>font-display: swap</code>避免阻塞渲染，子集化字体（工具：<code>pyftsubset</code>）。</li>\n</ul>\n</li>\n<li><strong>CDN与缓存策略</strong>\n<ul>\n<li>静态资源托管到CDN，启用HTTP/2或HTTP/3（QUIC协议）。</li>\n<li>设置强缓存（<code>Cache-Control: max-age=31536000</code>）和协商缓存（<code>ETag</code>）。</li>\n</ul>\n</li>\n<li><strong>预加载关键资源</strong>\n<ul>\n<li>使用<code>&lt;link rel=&quot;preload&quot;&gt;</code>提前加载关键字体、图片或JS模块。</li>\n<li>预连接第三方域名：<code>&lt;link rel=&quot;preconnect&quot; href=&quot;https://cdn.example.com&quot;&gt;</code>.</li>\n</ul>\n</li>\n</ol>\n<p><strong>三、代码与构建优化</strong></p>\n<ol>\n<li><strong>代码分割（Code Splitting）</strong>\n<ul>\n<li>按路由分割代码（React的<code>React.lazy</code> + <code>Suspense</code>，Vue的异步组件）。</li>\n<li>使用Webpack的<code>SplitChunksPlugin</code>提取公共依赖。</li>\n</ul>\n</li>\n<li><strong>Tree Shaking与Dead Code Elimination</strong>\n<ul>\n<li>确保ES6模块语法（<code>import/export</code>），通过Webpack/Rollup删除未使用代码。</li>\n<li>使用<code>babel-plugin-lodash</code>按需加载工具库。</li>\n</ul>\n</li>\n<li><strong>减少第三方依赖</strong>\n<ul>\n<li>替换臃肿库（如用<code>date-fns</code>代替<code>moment.js</code>）。</li>\n<li>延迟加载非核心第三方脚本（如分析工具、广告）。</li>\n</ul>\n</li>\n</ol>\n<p><strong>四、浏览器渲染优化</strong></p>\n<ol>\n<li><strong>避免布局抖动（Layout Thrashing）</strong>\n<ul>\n<li>批量DOM操作，使用<code>requestAnimationFrame</code>调度渲染任务。</li>\n<li>用CSS <code>transform</code>和<code>opacity</code>触发GPU加速（减少重排/重绘）。</li>\n</ul>\n</li>\n<li><strong>优化首屏内容可见性</strong>\n<ul>\n<li>使用骨架屏（Skeleton Screen）占位，优先渲染文本内容。</li>\n<li>对非首屏组件使用<code>&lt;div hidden&gt;</code>或CSS <code>content-visibility: auto</code>。</li>\n</ul>\n</li>\n</ol>\n<p><strong>五、基础设施优化</strong></p>\n<ol>\n<li><strong>边缘渲染（Edge SSR）</strong>\n<ul>\n<li>使用Cloudflare Workers、Vercel Edge Functions等边缘计算平台，将SSR部署到离用户最近的节点。</li>\n</ul>\n</li>\n<li><strong>HTTP/3与QUIC协议</strong>\n<ul>\n<li>启用HTTP/3（需服务器和CDN支持），通过多路复用和0-RTT加速连接。</li>\n</ul>\n</li>\n<li><strong>Service Worker缓存</strong>\n<ul>\n<li>对核心资源实现离线缓存（Workbox工具链），支持秒开二次访问。</li>\n</ul>\n</li>\n</ol>\n<p><strong>六、性能监控与测试</strong></p>\n<ol>\n<li><strong>性能指标分析</strong>\n<ul>\n<li>使用Lighthouse、WebPageTest测量FCP（First Contentful Paint）、LCP（Largest Contentful Paint）。</li>\n<li>通过Chrome DevTools的Performance面板分析长任务（Long Tasks）。</li>\n</ul>\n</li>\n<li><strong>真实用户监控（RUM）</strong>\n<ul>\n<li>部署Sentry、New Relic等工具监控真实用户的性能数据。</li>\n</ul>\n</li>\n</ol>\n<p><strong>极端优化案例（参考）</strong></p>\n<ul>\n<li><strong>Vue/Nuxt项目</strong>：SSR + 预渲染静态页面 + 内联关键CSS + Brotli压缩 + CDN，首屏时间可压缩至400-600ms。</li>\n<li><strong>React/Next.js项目</strong>：使用<code>next/dynamic</code>动态加载非首屏组件 + 图片懒加载 + 边缘渲染，首屏时间可达800ms以内。</li>\n</ul>\n<p><strong>总结</strong></p>\n<p>优化到1秒内的核心思路：</p>\n<ol>\n<li><strong>减少关键资源体积</strong>（HTML/CSS/JS控制在100KB以内）。</li>\n<li><strong>最小化网络往返次数</strong>（通过内联、预加载、HTTP/2多路复用）。</li>\n<li><strong>优先渲染可见内容</strong>（SSR/骨架屏 + 懒加载）。</li>\n<li><strong>利用现代浏览器特性</strong>（如HTTP/3、Service Worker）。</li>\n</ol>\n<p>需根据实际项目通过性能分析工具定位瓶颈，针对性优化。</p>\n"},{"title":"vue如何封装一个支持响应式更新的富文本编辑器?","description":"","answer":"<p><a href=\"https://juejin.cn/post/7429514987645435915\" target=\"_blank\" rel=\"noopener noreferrer\">封装 Quill 编辑器用于 Vue 3</a></p>\n"},{"title":"如何实现富文本编辑器的撤销重做功能？","description":"","answer":""},{"title":"如何实现文本的语法高亮和实时渲染？","description":"","answer":""},{"title":"如何实现多人协同编辑（如实时协作编程，腾讯文档）？","description":"","answer":""},{"title":"请求会弹出一个 toast,如何保证批量请求失败，只弹出一个toast?","description":"","answer":"<p>要保证批量请求失败只弹出一个toast,但又不能不同消息类型都弹出一个toast,所以需要用缓存池保证当前弹出的toast类型唯一</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#A0ADA0\">// utils/request.js  </span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> errorMap</span><span style=\"color:#999999\"> =</span><span style=\"color:#AB5959\"> new</span><span style=\"color:#59873A\"> Map</span><span style=\"color:#999999\">()</span><span style=\"color:#A0ADA0\">  // 错误缓存池  </span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> ERROR_TTL</span><span style=\"color:#999999\"> =</span><span style=\"color:#2F798A\"> 5000</span><span style=\"color:#A0ADA0\">      // 相同错误5秒内不重复提示  </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B07D48\">axios</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">interceptors</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">response</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">use</span><span style=\"color:#999999\">(</span><span style=\"color:#AB5959\">null</span><span style=\"color:#999999\">,</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">error</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  // 1. 生成错误标识（示例逻辑）  </span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> errorKey</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> error</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">response</span><span style=\"color:#999999\">?.</span><span style=\"color:#B07D48\">status</span><span style=\"color:#AB5959\"> ||</span><span style=\"color:#B07D48\"> error</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">code</span><span style=\"color:#AB5959\"> ||</span><span style=\"color:#B07D48\"> error</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">message</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  // 2. 判断是否需要展示  </span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">  if</span><span style=\"color:#999999\"> (</span><span style=\"color:#AB5959\">!</span><span style=\"color:#B07D48\">errorMap</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">has</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">errorKey</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#59873A\">    showToast</span><span style=\"color:#999999\">(</span><span style=\"color:#393A34\">error.message</span><span style=\"color:#999999\">)</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#393A34\">    errorMap.</span><span style=\"color:#59873A\">set</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">errorKey</span><span style=\"color:#999999\">,</span><span style=\"color:#393A34\"> Date.now(</span><span style=\"color:#999999\">)</span><span style=\"color:#393A34\">)  </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    // 3. 设置过期时间  </span></span>\n<span class=\"line\"><span style=\"color:#59873A\">    setTimeout</span><span style=\"color:#999999\">(</span><span style=\"color:#393A34\">(</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#2E8F82\">      errorMap</span><span style=\"color:#999999\">.</span><span style=\"color:#2E8F82\">delete</span><span style=\"color:#999999\">(</span><span style=\"color:#2E8F82\">errorKey</span><span style=\"color:#999999\">)</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">    },</span><span style=\"color:#393A34\"> ERROR_TTL)  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  return</span><span style=\"color:#998418\"> Promise</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">reject</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">error</span><span style=\"color:#999999\">)</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#393A34\">}</span><span style=\"color:#999999\">)</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n"},{"title":"如何做好前端的监控方案？","description":"","answer":"<p>前端监控需覆盖 <strong>错误追踪</strong>、<strong>性能指标</strong>、<strong>用户行为</strong> 三大维度，核心方案如下：</p>\n<ol>\n<li><strong>错误监控</strong>\n<ul>\n<li>全局捕获：<code>window.onerror</code> + <code>unhandledrejection</code></li>\n<li>框架集成：Vue/React错误边界（Error Boundary）</li>\n<li>资源异常：监听<code>&lt;img&gt;&lt;script&gt;</code>的<code>onerror</code>事件</li>\n</ul>\n</li>\n<li><strong>性能监控</strong>\n<ul>\n<li>关键指标：通过<code>Performance API</code>采集<code>FP/FCP/LCP/FID/CLS</code></li>\n<li>接口耗时：拦截AJAX/Fetch记录响应时间与成功率</li>\n</ul>\n</li>\n<li><strong>用户行为</strong>\n<ul>\n<li>PV/UV：路由切换监听（Hash/History API）</li>\n<li>点击热图：记录点击坐标与DOM路径</li>\n<li>自定义事件：关键操作埋点（如按钮点击）</li>\n</ul>\n</li>\n<li><strong>数据上报</strong>\n<ul>\n<li>节流合并：使用<code>sendBeacon</code>或<code>requestIdleCallback</code></li>\n<li>失败重试：本地存储失败日志，定时重发</li>\n</ul>\n</li>\n</ol>\n"},{"title":"px 如何转 rem?","description":"","answer":"<p><strong>核心原理</strong></p>\n<ul>\n<li><strong><code>rem</code> 单位</strong>：相对于根元素（<code>&lt;html&gt;</code>）的 <code>font-size</code>。例如，若根字体为 <code>16px</code>，则 <code>1rem = 16px</code>。</li>\n<li><strong>转换公式</strong>：rem值=px值基准字体大小rem值=基准字体大小px值</li>\n</ul>\n<p>转换主要分三步：</p>\n<ol>\n<li><strong>设置基准</strong>：在HTML根元素定义 <code>font-size: 62.5%</code>（浏览器默认16px → 1rem=10px）</li>\n<li><strong>换算规则</strong>：设计稿px值 ÷ 基准值（如10）→ 例：24px = 2.4rem</li>\n<li><strong>自动转换</strong>：用PostCSS插件<code>postcss-pxtorem</code>自动编译（配置示例）：</li>\n</ol>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#A0ADA0\">// postcss.config.js  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">module</span><span style=\"color:#999999\">.</span><span style=\"color:#998418\">exports</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">  plugins</span><span style=\"color:#999999\">:</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#B5695977\">    '</span><span style=\"color:#B56959\">postcss-pxtorem</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">:</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">      rootValue</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 10</span><span style=\"color:#999999\">,</span><span style=\"color:#A0ADA0\">    // 基准值  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">      propList</span><span style=\"color:#999999\">:</span><span style=\"color:#999999\"> [</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">*</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">],</span><span style=\"color:#A0ADA0\">  // 转换所有属性  </span></span>\n<span class=\"line\"><span style=\"color:#998418\">      selectorBlackList</span><span style=\"color:#999999\">:</span><span style=\"color:#999999\"> [</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">.norem</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">]</span><span style=\"color:#A0ADA0\"> // 黑名单类不转换  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n"},{"title":"如何实现面板折叠功能？","description":"","answer":"<p><a href=\"https://lsj97.com/posts/article/%E4%BD%BFcss%E9%AB%98%E5%BA%A6auto%E6%94%AF%E6%8C%81%E8%BF%87%E6%B8%A1%E5%8A%A8%E7%94%BB/\" target=\"_blank\" rel=\"noopener noreferrer\">使css高度auto支持过渡动画</a></p>\n"},{"title":"前端应用如何做国际化？","description":"","answer":"<p><strong>回答：</strong>\n前端国际化（i18n）的核心步骤：</p>\n<ol>\n<li><strong>多语言资源管理</strong>：用 JSON 文件按语言（如 <code>en.json</code>、<code>zh-CN.json</code>）组织文案，通过工具（如 <code>i18next</code>、<code>vue-i18n</code>）动态加载。</li>\n<li><strong>语言切换</strong>：通过 URL 参数、本地存储或全局状态（如 Redux、Vuex）传递语言标识（如 <code>en-US</code>），触发页面渲染更新。</li>\n<li><strong>动态内容处理</strong>：\n<ul>\n<li>文本：使用键值替换（如 <code>t('key')</code>），支持插值、复数形式。</li>\n<li>日期/数字：用 <code>Intl</code> API（如 <code>Intl.DateTimeFormat</code>）或库（如 <code>date-fns</code>）按语言格式化。</li>\n</ul>\n</li>\n<li><strong>优化实践</strong>：提取未翻译文本（如 <code>i18n-extract</code>），按需加载语言包，兼容 RTL 语言（如阿拉伯语）。</li>\n</ol>\n<p><strong>工具推荐</strong>：<code>i18next</code>、<code>react-intl</code>、<code>vue-i18n</code>，结合构建工具（如 Webpack）拆分语言包。</p>\n"},{"title":"用户访问页面白屏，如何排查？","description":"","answer":"<p>用户访问页面白屏可能由多种原因引起，以下是一些可能的原因和排查步骤:</p>\n<ol>\n<li>\n<p><strong>网络问题</strong>:用户的网络连接可能存在问题，无法正确加载页面内容。可以要求用户检查网络连接，或者自己尝试在不同网络环境下测试页面的加载情况。</p>\n</li>\n<li>\n<p><strong>服务端问题</strong>:服务器未正确响应用户请求，导致页面无法加载。可以检查服务器的状态、日志和错2误信息，查看是否有任何异常。同时，可以确认服务器上的相关服务是否正常运行。</p>\n</li>\n<li>\n<p><strong>前端代码问题</strong>:页面的前端代码可能存在错误或异常，导致页面无法正常渲染。可以检查浏览器的开发者工具，查看是否有任何错误信息或警告。同时，可以尝试将页面的JavaScript、CSs和HTML代码分离出来进行单独测试，以确定具体的问题所在。</p>\n</li>\n<li>\n<p><strong>浏览器兼容性问题</strong>:不同浏览器对于某些代码的支持可能不一致，导致页面在某些浏览器中无法正.常加载。可以尝试在不同浏览器中测试页面的加载情况，同时使用浏览器的开发者工具检查是否有任何错误或警告。</p>\n</li>\n<li>\n<p><strong>第三方资源加载问题</strong>:页面可能依赖于某些第三方资源(如外部脚本、样式表等)，如果这些资源\n无法加载，可能导致页面白屏。可以检查网络请求是否正常，是否有任何资源加载失败的情况。</p>\n</li>\n<li>\n<p><strong>缓存问题</strong>:浏览器可能在缓存中保存了旧版本的页面或资源，导致新版本无法加载。可以尝试清除6.\n浏览器缓存，或者通过添加随机参数或修改文件名的方式强制浏览器重新加载页面和资源。</p>\n</li>\n<li>\n<p><strong>其他可能原因</strong>:页面白屏问题还可能由于安全策略(如CSP、CORS等)限制、跨域问题、DNS解析问题等引起。可以使用浏览器的开发者工具检查网络请求和错误信息，查找可能的问题。</p>\n</li>\n</ol>\n<p>在排查问题时，可以根据具体情况逐步进行排查，并结合浏览器的开发者工具、服务器日志等工具来辅助定位问题所在，并且可以与用户进行进一步沟通以获取更多信息。如果问题无法解决，可以寻求专业的技术支持或咨询。</p>\n"},{"title":"站点如何防止爬虫？","description":"","answer":"<ol>\n<li><strong>基础防护</strong>：设置 <code>robots.txt</code> 限制合规爬虫，后端校验请求头（如 <code>User-Agent</code>、<code>Referer</code>）。</li>\n<li><strong>动态干扰</strong>：页面注入随机噪声数据（如隐藏假链接），频繁操作触发验证码。</li>\n<li><strong>反自动化</strong>：关键接口添加加密参数（如签名 <code>Token</code>），前端点击行为校验（如轨迹监测）。</li>\n<li><strong>深度防御</strong>：IP 限流/黑名单，使用反爬服务（如 Cloudflare Bot Management）。</li>\n</ol>\n"},{"title":"你是如何从零到一搭建一个项目的？","description":"","answer":"<p><strong>一、需求分析与技术选型</strong></p>\n<ol>\n<li><strong>明确需求</strong>\n<ul>\n<li>项目类型：SPA、SSR、静态网站、移动端H5？</li>\n<li>功能模块：是否需要路由、状态管理、数据可视化等？</li>\n<li>目标用户：兼容性要求（浏览器、分辨率、移动端适配）？</li>\n</ul>\n</li>\n<li><strong>技术选型</strong>\n<ul>\n<li><strong>框架</strong>：React（生态丰富）、Vue（轻量易上手）、Svelte（高性能）或纯原生。</li>\n<li><strong>构建工具</strong>：Vite（极速热更新）、Webpack（高度定制化）、Rollup（库开发）。</li>\n<li><strong>状态管理</strong>：Redux（复杂场景）、Zustand（轻量）、Pinia（Vue专属）。</li>\n<li><strong>CSS方案</strong>：CSS-in-JS（Styled-components）、Utility-First（Tailwind CSS）、预处理器（Sass/Less）。</li>\n<li><strong>其他</strong>：TypeScript（类型安全）、测试框架（Jest + Testing Library）、E2E工具（Cypress）。</li>\n</ul>\n</li>\n</ol>\n<p><strong>二、初始化项目</strong></p>\n<ol>\n<li><strong>脚手架创建</strong></li>\n<li><strong>安装核心依赖</strong></li>\n</ol>\n<p><strong>三、项目结构设计</strong></p>\n<p><strong>四、工程化配置</strong></p>\n<ol>\n<li>\n<p><strong>别名配置（vite.config.ts）</strong></p>\n</li>\n<li>\n<p><strong>代码规范</strong></p>\n</li>\n</ol>\n<ul>\n<li>ESLint + Airbnb规范：检查语法错误。</li>\n<li>Prettier：统一代码风格。</li>\n<li>Husky + lint-staged：提交前自动格式化。</li>\n</ul>\n<ol start=\"3\">\n<li><strong>环境变量</strong></li>\n</ol>\n<ul>\n<li>区分开发、测试、生产环境（<code>.env.development</code>, <code>.env.production</code>）。</li>\n<li>敏感数据通过VITE_前缀暴露给客户端（Vite专用）。</li>\n</ul>\n<p><strong>五、开发与联调</strong></p>\n<ol>\n<li><strong>Mock数据</strong>\n<ul>\n<li>使用 Mock.js 或 json-server 快速模拟接口。</li>\n<li>示例（json-server）：</li>\n</ul>\n</li>\n<li><strong>代理配置（解决跨域）</strong></li>\n</ol>\n<p><strong>六、性能优化</strong></p>\n<ol>\n<li><strong>构建优化</strong>\n<ul>\n<li>代码分割（动态import()、路由懒加载）。</li>\n<li>压缩资源：Terser压缩JS、CSSNano压缩CSS。</li>\n<li>静态资源CDN托管。</li>\n</ul>\n</li>\n<li><strong>运行时优化</strong>\n<ul>\n<li>虚拟列表（react-window）优化长列表渲染。</li>\n<li>图片懒加载（Intersection Observer API）。</li>\n<li>Web Worker处理复杂计算。</li>\n</ul>\n</li>\n</ol>\n<p><strong>七、部署与监控</strong></p>\n<ol>\n<li><strong>部署流程</strong>\n<ul>\n<li>CI/CD工具：GitHub Actions、Jenkins。</li>\n<li>容器化：Docker + Nginx（配置Gzip、缓存策略）</li>\n</ul>\n</li>\n<li><strong>监控与统计</strong>\n<ul>\n<li>错误收集：Sentry、Fundebug。</li>\n<li>性能分析：Google Lighthouse、Web Vitals。</li>\n<li>用户行为：Google Analytics、Hotjar。</li>\n</ul>\n</li>\n</ol>\n<p><strong>八、维护与迭代</strong></p>\n<ol>\n<li><strong>文档管理</strong>\n<ul>\n<li>使用 Storybook 或 Docusaurus 编写组件文档。</li>\n</ul>\n</li>\n<li><strong>依赖更新</strong>\n<ul>\n<li>定期运行 <code>npm outdated</code> 升级依赖版本。</li>\n</ul>\n</li>\n<li><strong>错误处理</strong>\n<ul>\n<li>全局异常捕获（React Error Boundary）。</li>\n</ul>\n</li>\n</ol>\n<p><strong>关键注意事项</strong></p>\n<ul>\n<li><strong>版本控制</strong>：合理设计 Git 分支策略（Git Flow/GitHub Flow）。</li>\n<li><strong>SEO优化</strong>：SPA项目需结合预渲染（prerender-spa-plugin）或SSR。</li>\n<li><strong>安全防护</strong>：XSS过滤、CSP配置、敏感信息加密。</li>\n</ul>\n"},{"title":"实现视差滚动效果","description":"","answer":"<p>实现视差滚动核心思路是<strong>多层元素以不同速率滚动</strong>，常用方法：</p>\n<ol>\n<li>\n<p><strong>纯CSS实现</strong>（简单场景）：</p>\n<pre><code class=\"language-CSS\"><div class=\"language-text \"><span class=\"lang\">text</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span>.parallax-container {  </span></span>\n<span class=\"line\"><span>  perspective: 1px; /* 透视效果 */  </span></span>\n<span class=\"line\"><span>  overflow-x: hidden;  </span></span>\n<span class=\"line\"><span>  height: 100vh;  </span></span>\n<span class=\"line\"><span>}  </span></span>\n<span class=\"line\"><span>.layer {  </span></span>\n<span class=\"line\"><span>  transform-style: preserve-3d;  </span></span>\n<span class=\"line\"><span>}  </span></span>\n<span class=\"line\"><span>.layer-slow {  </span></span>\n<span class=\"line\"><span>  transform: translateZ(-2px) scale(3); /* 滚动更慢 */  </span></span>\n<span class=\"line\"><span>}  </span></span>\n<span class=\"line\"><span>.layer-fast {  </span></span>\n<span class=\"line\"><span>  transform: translateZ(1px) scale(0.5); /* 滚动更快 */  </span></span>\n<span class=\"line\"><span>}  </span></span>\n<span class=\"line\"><span></span></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>JavaScript动态控制</strong>（灵活性强）：</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B07D48\">window</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">addEventListener</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">scroll</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#999999\"> ()</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> scrolled</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> window</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">pageYOffset</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  document</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">querySelector</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">.bg-layer</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">).</span><span style=\"color:#B07D48\">style</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">transform</span><span style=\"color:#999999\"> =</span><span style=\"color:#393A34\">   </span></span>\n<span class=\"line\"><span style=\"color:#B5695977\">    `</span><span style=\"color:#B56959\">translateY(</span><span style=\"color:#1E754F\">${</span><span style=\"color:#B56959\">scrolled </span><span style=\"color:#AB5959\">*</span><span style=\"color:#2F798A\"> 0.5</span><span style=\"color:#1E754F\">}</span><span style=\"color:#B56959\">px)</span><span style=\"color:#B5695977\">`</span><span style=\"color:#999999\">;</span><span style=\"color:#A0ADA0\"> // 背景层慢速移动  </span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  document</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">querySelector</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">.text-layer</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">).</span><span style=\"color:#B07D48\">style</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">transform</span><span style=\"color:#999999\"> =</span><span style=\"color:#393A34\">   </span></span>\n<span class=\"line\"><span style=\"color:#B5695977\">    `</span><span style=\"color:#B56959\">translateY(</span><span style=\"color:#1E754F\">${</span><span style=\"color:#B56959\">scrolled </span><span style=\"color:#AB5959\">*</span><span style=\"color:#2F798A\"> 1.2</span><span style=\"color:#1E754F\">}</span><span style=\"color:#B56959\">px)</span><span style=\"color:#B5695977\">`</span><span style=\"color:#999999\">;</span><span style=\"color:#A0ADA0\"> // 文字层快速移动  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">});</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>使用库（如Parallax.js）</strong>（快速集成）：</p>\n<pre><code class=\"language-HTML\"><div class=\"language-text \"><span class=\"lang\">text</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span>&#x3C;div data-parallax=\"scroll\" data-image-src=\"bg.jpg\">&#x3C;/div>  </span></span>\n<span class=\"line\"><span>&#x3C;script src=\"parallax.min.js\">&#x3C;/script>  </span></span>\n<span class=\"line\"><span></span></span></code></pre></div></code></pre>\n</li>\n</ol>\n"},{"title":"说说 Vue 封装组件的流程，需要注意些什么？你会有些什么样的原则？","description":"","answer":"<ul>\n<li>\n<p>封装Vue组件一般分为以下步骤和注意事项：</p>\n<p>流程：</p>\n<ol>\n<li>明确职责边界，拆分可复用功能</li>\n<li>定义props/emit接口，做好参数校验</li>\n<li>使用插槽机制保持扩展性</li>\n<li>添加必要的样式隔离（scoped）</li>\n<li>编写组件文档和使用示例</li>\n</ol>\n<p>注意事项：</p>\n<ul>\n<li>保持单一职责原则</li>\n<li>避免直接操作父组件DOM</li>\n<li>合理处理边界情况（空状态、加载态等）</li>\n<li>提供清晰的接口文档</li>\n</ul>\n<p>设计原则：</p>\n<ol>\n<li>高内聚低耦合</li>\n<li>受控组件优先</li>\n<li>合理的默认值配置</li>\n<li>良好的TS类型支持</li>\n<li>兼容性考虑（如v-model双向绑定）</li>\n</ol>\n</li>\n</ul>\n"},{"title":"如何判断当前脚本运行在浏览器还是 node 环境中？","description":"","answer":"<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#A0ADA0\">// 判断浏览器环境</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> isBrowser</span><span style=\"color:#999999\"> =</span><span style=\"color:#AB5959\"> typeof</span><span style=\"color:#B07D48\"> window</span><span style=\"color:#AB5959\"> !==</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">undefined</span><span style=\"color:#B5695977\">'</span><span style=\"color:#393A34\"> </span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  &#x26;&#x26;</span><span style=\"color:#AB5959\"> typeof</span><span style=\"color:#B07D48\"> window</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">document</span><span style=\"color:#AB5959\"> !==</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">undefined</span><span style=\"color:#B5695977\">'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">// 判断Node环境</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> isNode</span><span style=\"color:#999999\"> =</span><span style=\"color:#AB5959\"> typeof</span><span style=\"color:#B07D48\"> process</span><span style=\"color:#AB5959\"> !==</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">undefined</span><span style=\"color:#B5695977\">'</span><span style=\"color:#393A34\"> </span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  &#x26;&#x26;</span><span style=\"color:#B07D48\"> process</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">versions</span><span style=\"color:#393A34\"> </span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  &#x26;&#x26;</span><span style=\"color:#B07D48\"> process</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">versions</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">node</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n"},{"title":"你在项目中遇到过哪些性能瓶颈？是如何解决的？","description":"","answer":"<p>在项目中遇到的典型性能瓶颈及解决方案：</p>\n<ol>\n<li><strong>首屏加载慢</strong>：\n<ul>\n<li><strong>问题</strong>：资源过大（如图片/JS未压缩），接口串行请求。</li>\n<li><strong>解决</strong>：\n<ul>\n<li>代码分割（<code>Vue Router懒加载</code>）</li>\n<li>图片懒加载 + WebP格式</li>\n<li>接口请求合并 + HTTP2多路复用</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>长列表渲染卡顿</strong>：\n<ul>\n<li><strong>问题</strong>：DOM节点过多导致重绘耗时。</li>\n<li><strong>解决</strong>：\n<ul>\n<li>虚拟滚动（<code>vue-virtual-scroller</code>）</li>\n<li>分页加载 + 骨架屏占位</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>内存泄漏</strong>：\n<ul>\n<li><strong>问题</strong>：全局事件监听、定时器未销毁（如弹窗组件多次挂载）。</li>\n<li><strong>解决</strong>：\n<ul>\n<li>使用<code>beforeUnmount</code>移除事件/定时器</li>\n<li>Chrome DevTools Memory面板定位泄漏源</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>高频交互卡顿</strong>：\n<ul>\n<li><strong>问题</strong>：频繁触发<code>resize</code>/<code>scroll</code>导致函数重复执行。</li>\n<li><strong>解决</strong>：\n<ul>\n<li>防抖/节流（<code>lodash.throttle</code>）</li>\n<li>使用<code>requestAnimationFrame</code>优化动画</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>接口重复请求</strong>：\n<ul>\n<li><strong>问题</strong>：按钮快速点击导致重复提交。</li>\n<li><strong>解决</strong>：\n<ul>\n<li>请求锁（<code>isLoading</code>状态拦截）</li>\n<li>客户端缓存（如<code>localStorage</code>短期缓存）</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<p><strong>优化工具</strong>：</p>\n<ul>\n<li>Lighthouse分析性能指标</li>\n<li>Webpack Bundle Analyzer分析包体积</li>\n<li>Vue DevTools追踪组件渲染耗时</li>\n</ul>\n"},{"title":"如何监控页面卡顿？","description":"","answer":"<p>监控页面卡顿的核心方法：</p>\n<ol>\n<li><strong>FPS检测</strong>：通过<code>requestAnimationFrame</code>计算帧率，持续低于50FPS视为卡顿。</li>\n<li><strong>长任务监听</strong>：用<code>PerformanceObserver</code>捕获超过50ms的Long Tasks（主线程阻塞）。</li>\n<li><strong>用户交互延迟</strong>：监听点击/输入事件，统计响应时间（如从<code>pointerdown</code>到<code>next paint</code>）。</li>\n<li><strong>框架工具</strong>：Vue/React DevTools定位渲染耗时组件，Chrome Performance分析调用栈。</li>\n</ol>\n<p><strong>示例代码（长任务上报）</strong>：</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> observer</span><span style=\"color:#999999\"> =</span><span style=\"color:#AB5959\"> new</span><span style=\"color:#59873A\"> PerformanceObserver</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">list</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  list</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">getEntries</span><span style=\"color:#999999\">().</span><span style=\"color:#59873A\">forEach</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">entry</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">    if</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">entry</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">duration</span><span style=\"color:#999999\"> ></span><span style=\"color:#2F798A\"> 50</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">      console</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">log</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">卡顿：</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> entry</span><span style=\"color:#999999\">);</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">      // 上报至监控系统  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">  });</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#999999\">});</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">observer</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">observe</span><span style=\"color:#999999\">({</span><span style=\"color:#998418\"> entryTypes</span><span style=\"color:#999999\">:</span><span style=\"color:#999999\"> [</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">longtask</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">]</span><span style=\"color:#999999\"> });</span><span style=\"color:#393A34\">  </span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n"},{"title":"如何自定义鼠标右键菜单？","description":"","answer":"<p>实现自定义右键菜单的核心步骤：</p>\n<ol>\n<li>\n<p><strong>阻止默认右键菜单</strong>\n监听 <code>contextmenu</code> 事件，调用 <code>e.preventDefault()</code> 禁用浏览器默认菜单。</p>\n</li>\n<li>\n<p><strong>动态创建菜单元素</strong>\n用 JavaScript 动态生成一个 <code>div</code>，设置 CSS 样式（如 <code>position: absolute</code>、<code>z-index</code> 层级）。</p>\n</li>\n<li>\n<p><strong>定位菜单</strong>\n根据鼠标点击位置（<code>e.clientX</code> 和 <code>e.clientY</code>）设置菜单的 <code>left</code> 和 <code>top</code>，确保不超出视口边界。</p>\n</li>\n<li>\n<p><strong>添加菜单项与交互</strong>\n在菜单内插入按钮或列表项，绑定点击事件。例如：</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> menu</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> document</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">createElement</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">div</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">menu</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">innerHTML</span><span style=\"color:#999999\"> =</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">&#x3C;button>复制&#x3C;/button>&#x3C;button>粘贴&#x3C;/button></span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">menu</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">querySelector</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">button</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">).</span><span style=\"color:#59873A\">addEventListener</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">click</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> handleCopy</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>关闭菜单逻辑</strong>\n监听 <code>document</code> 的点击事件，点击非菜单区域时隐藏菜单。</p>\n</li>\n</ol>\n<p><strong>示例代码片段：</strong></p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B07D48\">document</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">addEventListener</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">contextmenu</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">e</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  e</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">preventDefault</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> menu</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> document</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">getElementById</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">custom-menu</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  menu</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">style</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">left</span><span style=\"color:#999999\"> =</span><span style=\"color:#B5695977\"> `</span><span style=\"color:#1E754F\">${</span><span style=\"color:#B56959\">e</span><span style=\"color:#999999\">.</span><span style=\"color:#B56959\">pageX</span><span style=\"color:#1E754F\">}</span><span style=\"color:#B56959\">px</span><span style=\"color:#B5695977\">`</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  menu</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">style</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">top</span><span style=\"color:#999999\"> =</span><span style=\"color:#B5695977\"> `</span><span style=\"color:#1E754F\">${</span><span style=\"color:#B56959\">e</span><span style=\"color:#999999\">.</span><span style=\"color:#B56959\">pageY</span><span style=\"color:#1E754F\">}</span><span style=\"color:#B56959\">px</span><span style=\"color:#B5695977\">`</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  menu</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">style</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">display</span><span style=\"color:#999999\"> =</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">block</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B07D48\">document</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">addEventListener</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">click</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#999999\"> ()</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  document</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">getElementById</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">custom-menu</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">).</span><span style=\"color:#B07D48\">style</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">display</span><span style=\"color:#999999\"> =</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">none</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">});</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>关键点：</strong></p>\n<ul>\n<li>使用 <code>position: fixed</code> 防止滚动偏移</li>\n<li>考虑边缘位置自适应（如贴近视口右/底部时反向定位）</li>\n<li>通过事件委托优化菜单项的事件绑定</li>\n</ul>\n<p><strong>扩展：</strong> 结合业务动态渲染菜单项，或集成第三方库（如 <code>context-menu</code>）提升交互体验。</p>\n"},{"title":"如果要设计一个转盘组件，你会考虑哪些方面？有哪些是需要和业务方确认的技术细节？另外，如何从前端的角度进行防刷？","description":"<p><strong>一、核心设计考虑因素</strong></p>\n<ol>\n<li>\n<p><strong>UI 与交互设计</strong></p>\n<ul>\n<li><strong>视觉呈现</strong>：转盘扇形区域布局（等分/不等分）、动态光影效果、指针/中心点设计</li>\n<li><strong>动画效果</strong>：旋转惯性模拟（缓动函数）、停止位置精准对齐、多段式动画（加速 → 匀速 → 减速）</li>\n<li><strong>响应式适配</strong>：不同屏幕尺寸下的比例缩放、横竖屏切换时的重绘策略</li>\n<li><strong>音效反馈</strong>：启动音效、旋转背景音、停止提示音</li>\n</ul>\n</li>\n<li>\n<p><strong>技术实现方案</strong></p>\n<ul>\n<li>\n<p><strong>动画引擎选择</strong>：</p>\n<ul>\n<li>CSS3 Transform + Transition（轻量级简单场景）</li>\n<li>GSAP（复杂缓动控制）</li>\n<li>Canvas（高性能复杂动画）</li>\n</ul>\n</li>\n<li>\n<p><strong>停止位置计算</strong>：</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#A0ADA0\">// 示例：根据后端返回的奖品索引计算停止角度</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> stopAngle</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> initialAngle</span><span style=\"color:#AB5959\"> +</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">targetIndex</span><span style=\"color:#AB5959\"> *</span><span style=\"color:#B07D48\"> sectorAngle</span><span style=\"color:#999999\">)</span><span style=\"color:#AB5959\"> +</span><span style=\"color:#2F798A\"> 360</span><span style=\"color:#AB5959\"> *</span><span style=\"color:#2F798A\"> 5</span><span style=\"color:#999999\">;</span><span style=\"color:#A0ADA0\"> // 多转5圈</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>数据驱动</strong>：动态奖品列表渲染（Vue/React 数据绑定）</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>异常处理</strong></p>\n<ul>\n<li>网络中断时的降级提示</li>\n<li>奖品加载失败后的占位图处理</li>\n<li>抽奖接口限流后的友好提示</li>\n</ul>\n</li>\n</ol>\n<p><strong>二、需与业务方确认的技术细节</strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\"><strong>分类</strong></th>\n<th style=\"text-align:left\"><strong>需确认内容</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><strong>抽奖规则</strong></td>\n<td style=\"text-align:left\">1. 中奖概率计算方式（前端静态配置/后端动态下发） 2. 用户资格判断条件（登录态、积分、每日次数限制）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>奖品逻辑</strong></td>\n<td style=\"text-align:left\">1. 奖品类型（实物/虚拟） 2. 多级奖品嵌套逻辑（如先抽奖池再抽具体奖品）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>交互流程</strong></td>\n<td style=\"text-align:left\">1. 抽奖结果展示方式（即时弹窗/独立页面） 2. 重复抽奖冷却时间</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>数据对接</strong></td>\n<td style=\"text-align:left\">1. 奖品列表接口格式 2. 抽奖动作的API触发时机（动画前预请求/动画后请求）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>安全要求</strong></td>\n<td style=\"text-align:left\">1. 是否需要前端加密参数 2. 防刷策略的严格程度</td>\n</tr>\n</tbody>\n</table>\n<p><strong>三、前端防刷方案</strong></p>\n<ol>\n<li>\n<p><strong>基础防护层</strong></p>\n<ul>\n<li>\n<p><strong>频率限制</strong>：</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#AB5959\">let</span><span style=\"color:#B07D48\"> isClickable</span><span style=\"color:#999999\"> =</span><span style=\"color:#1E754F\"> true</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">startButton</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">addEventListener</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">click</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#999999\"> ()</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">  if</span><span style=\"color:#999999\"> (</span><span style=\"color:#AB5959\">!</span><span style=\"color:#B07D48\">isClickable</span><span style=\"color:#999999\">)</span><span style=\"color:#1E754F\"> return</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  isClickable</span><span style=\"color:#999999\"> =</span><span style=\"color:#1E754F\"> false</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">  setTimeout</span><span style=\"color:#999999\">(()</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span><span style=\"color:#B07D48\"> isClickable</span><span style=\"color:#999999\"> =</span><span style=\"color:#1E754F\"> true</span><span style=\"color:#999999\">;</span><span style=\"color:#999999\"> },</span><span style=\"color:#2F798A\"> 3000</span><span style=\"color:#999999\">);</span><span style=\"color:#A0ADA0\"> // 3秒冷却</span></span>\n<span class=\"line\"><span style=\"color:#999999\">});</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n<li>\n<p><strong>操作验证</strong>：</p>\n<ul>\n<li>添加图形验证码（如旋转拼图）</li>\n<li>行为验证（检测连续点击间隔是否异常）</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>请求安全层</strong></p>\n<ul>\n<li>\n<p><strong>参数混淆</strong>：</p>\n<ul>\n<li>使用动态 token（由后端生成临时令牌）</li>\n<li>时间戳 + 随机数签名（防止重放攻击）</li>\n</ul>\n</li>\n<li>\n<p><strong>加密传输</strong>：</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#A0ADA0\">// 示例：使用 AES 加密抽奖请求参数</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> encryptedData</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> CryptoJS</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">AES</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">encrypt</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">JSON</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">stringify</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">data</span><span style=\"color:#999999\">),</span><span style=\"color:#B07D48\"> secretKey</span><span style=\"color:#999999\">).</span><span style=\"color:#59873A\">toString</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>环境检测层</strong></p>\n<ul>\n<li>\n<p><strong>设备指纹</strong>：</p>\n<ul>\n<li>通过 <code>navigator.userAgent</code> + Canvas 指纹生成唯一标识</li>\n</ul>\n</li>\n<li>\n<p><strong>脚本检测</strong>：</p>\n<ul>\n<li>检测常见自动化工具特征（如 Puppeteer 的 Headless 模式）</li>\n</ul>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> isHeadless</span><span style=\"color:#999999\"> =</span><span style=\"color:#AB5959\"> !</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">onshow</span><span style=\"color:#B5695977\">'</span><span style=\"color:#AB5959\"> in</span><span style=\"color:#B07D48\"> window</span><span style=\"color:#999999\">)</span><span style=\"color:#AB5959\"> ||</span><span style=\"color:#B07D48\"> navigator</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">webdriver</span><span style=\"color:#999999\">;</span><span style=\"color:#393A34\"> </span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">if</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">isHeadless</span><span style=\"color:#999999\">)</span><span style=\"color:#59873A\"> blockRequest</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>日志监控层</strong></p>\n<ul>\n<li>上报用户点击坐标轨迹（检测机械式点击模式）</li>\n<li>记录抽奖时间间隔分布（识别高频异常行为）</li>\n</ul>\n</li>\n</ol>\n<p><strong>四、推荐技术组合</strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\"><strong>模块</strong></th>\n<th style=\"text-align:left\"><strong>推荐方案</strong></th>\n</tr>\n</thead>\n</table>\n","answer":""},{"title":"写出一个函数 trans，将数字转换成汉语的输出","description":"","answer":"<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#AB5959\"> function</span><span style=\"color:#59873A\"> toChineseNumber</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">num</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">      //  四位四位的进行分割</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">      const</span><span style=\"color:#B07D48\"> parts</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> num</span></span>\n<span class=\"line\"><span style=\"color:#999999\">        .</span><span style=\"color:#59873A\">toString</span><span style=\"color:#999999\">()</span></span>\n<span class=\"line\"><span style=\"color:#999999\">        .</span><span style=\"color:#59873A\">replace</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">/</span><span style=\"color:#999999\">(?=(</span><span style=\"color:#5A6AA6\">\\d</span><span style=\"color:#2F798A\">{4}</span><span style=\"color:#999999\">)</span><span style=\"color:#2F798A\">+</span><span style=\"color:#1E754F\">$</span><span style=\"color:#999999\">)</span><span style=\"color:#B5695977\">/</span><span style=\"color:#1E754F\">g</span><span style=\"color:#999999\">,</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">,</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#999999\">        .</span><span style=\"color:#59873A\">split</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">,</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#999999\">        .</span><span style=\"color:#59873A\">filter</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">Boolean</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#393A34\"> </span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">      const</span><span style=\"color:#B07D48\"> map</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> [</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">零</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">一</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">二</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">三</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">四</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">五</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">六</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">七</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">八</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">九</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">]</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">      const</span><span style=\"color:#B07D48\"> units</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> [</span><span style=\"color:#B5695977\">''</span><span style=\"color:#999999\">,</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">十</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">百</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">千</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">]</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">      // 把连续的零给去掉 合并为1个零  当零在末尾的时候去掉</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">      function</span><span style=\"color:#59873A\"> _handleZero</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">str</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">        return</span><span style=\"color:#B07D48\"> str</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">replace</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">/</span><span style=\"color:#AB5E3F\">零</span><span style=\"color:#2F798A\">+</span><span style=\"color:#B5695977\">/</span><span style=\"color:#1E754F\">g</span><span style=\"color:#999999\">,</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">零</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">).</span><span style=\"color:#59873A\">replace</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">/</span><span style=\"color:#AB5E3F\">零</span><span style=\"color:#1E754F\">$</span><span style=\"color:#B5695977\">/</span><span style=\"color:#999999\">,</span><span style=\"color:#B5695977\"> ''</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#999999\">      }</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">      function</span><span style=\"color:#59873A\"> _transform</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">n</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">        let</span><span style=\"color:#B07D48\"> result</span><span style=\"color:#999999\"> =</span><span style=\"color:#B5695977\"> ''</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">        for</span><span style=\"color:#999999\"> (</span><span style=\"color:#AB5959\">let</span><span style=\"color:#B07D48\"> i</span><span style=\"color:#999999\"> =</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">;</span><span style=\"color:#B07D48\"> i</span><span style=\"color:#999999\"> &#x3C;</span><span style=\"color:#B07D48\"> n</span><span style=\"color:#999999\">.</span><span style=\"color:#998418\">length</span><span style=\"color:#999999\">;</span><span style=\"color:#B07D48\"> i</span><span style=\"color:#AB5959\">++</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">          const</span><span style=\"color:#B07D48\"> c</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> map</span><span style=\"color:#999999\">[</span><span style=\"color:#B07D48\">n</span><span style=\"color:#999999\">[</span><span style=\"color:#B07D48\">i</span><span style=\"color:#999999\">]]</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">          let</span><span style=\"color:#B07D48\"> u</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> units</span><span style=\"color:#999999\">[</span><span style=\"color:#B07D48\">n</span><span style=\"color:#999999\">.</span><span style=\"color:#998418\">length</span><span style=\"color:#AB5959\"> -</span><span style=\"color:#B07D48\"> i</span><span style=\"color:#AB5959\"> -</span><span style=\"color:#2F798A\"> 1</span><span style=\"color:#999999\">]</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">          if</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">c</span><span style=\"color:#AB5959\"> ===</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">零</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">            u</span><span style=\"color:#999999\"> =</span><span style=\"color:#B5695977\"> ''</span></span>\n<span class=\"line\"><span style=\"color:#999999\">          }</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">          result</span><span style=\"color:#AB5959\"> +=</span><span style=\"color:#B07D48\"> c</span><span style=\"color:#AB5959\"> +</span><span style=\"color:#B07D48\"> u</span></span>\n<span class=\"line\"><span style=\"color:#999999\">        }</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">        result</span><span style=\"color:#999999\"> =</span><span style=\"color:#59873A\"> _handleZero</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">result</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">        return</span><span style=\"color:#B07D48\"> result</span></span>\n<span class=\"line\"><span style=\"color:#999999\">      }</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">      const</span><span style=\"color:#B07D48\"> bigUnits</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> [</span><span style=\"color:#B5695977\">''</span><span style=\"color:#999999\">,</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">万</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">亿</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">]</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">      let</span><span style=\"color:#B07D48\"> result</span><span style=\"color:#999999\"> =</span><span style=\"color:#B5695977\"> ''</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">      for</span><span style=\"color:#999999\"> (</span><span style=\"color:#AB5959\">let</span><span style=\"color:#B07D48\"> i</span><span style=\"color:#999999\"> =</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">;</span><span style=\"color:#B07D48\"> i</span><span style=\"color:#999999\"> &#x3C;</span><span style=\"color:#B07D48\"> parts</span><span style=\"color:#999999\">.</span><span style=\"color:#998418\">length</span><span style=\"color:#999999\">;</span><span style=\"color:#B07D48\"> i</span><span style=\"color:#AB5959\">++</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">        const</span><span style=\"color:#B07D48\"> p</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> parts</span><span style=\"color:#999999\">[</span><span style=\"color:#B07D48\">i</span><span style=\"color:#999999\">]</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">        const</span><span style=\"color:#B07D48\"> c</span><span style=\"color:#999999\"> =</span><span style=\"color:#59873A\"> _transform</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">p</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">        const</span><span style=\"color:#B07D48\"> u</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> bigUnits</span><span style=\"color:#999999\">[</span><span style=\"color:#B07D48\">parts</span><span style=\"color:#999999\">.</span><span style=\"color:#998418\">length</span><span style=\"color:#AB5959\"> -</span><span style=\"color:#B07D48\"> i</span><span style=\"color:#AB5959\"> -</span><span style=\"color:#2F798A\"> 1</span><span style=\"color:#999999\">]</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">        if</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">c</span><span style=\"color:#AB5959\"> ===</span><span style=\"color:#B5695977\"> ''</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">          result</span><span style=\"color:#AB5959\"> +=</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">零</span><span style=\"color:#B5695977\">'</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">          continue</span></span>\n<span class=\"line\"><span style=\"color:#999999\">        }</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">        result</span><span style=\"color:#AB5959\"> +=</span><span style=\"color:#B07D48\"> c</span><span style=\"color:#AB5959\"> +</span><span style=\"color:#B07D48\"> u</span></span>\n<span class=\"line\"><span style=\"color:#999999\">      }</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">      result</span><span style=\"color:#999999\"> =</span><span style=\"color:#59873A\"> _handleZero</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">result</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">      return</span><span style=\"color:#B07D48\"> result</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n"},{"title":"怎么预防用户快速连续点击，造成数据多次提交？","description":"","answer":"<ul>\n<li>css设置 <code>pointer-events</code> 为 <code>none</code></li>\n<li>增加变量控制，当变量满足条件时才执行点击事件的后续代码（比如给按钮的点击事件增加防抖）</li>\n<li>如果按钮使用 button 标签实现，可以使用 <code>disabled</code> 属性</li>\n<li>加遮罩层，比如一个全屏的loading，避免触发按钮的点击事件</li>\n</ul>\n"},{"title":"有一个新的前端项目需要部署到线上，你有什么思路？","description":"","answer":"<ol>\n<li><strong>项目准备阶段</strong>：</li>\n</ol>\n<ul>\n<li><strong>检查项目构建配置</strong>：确保项目的构建配置文件（如 <code>webpack.config.js</code> 或 <code>vite.config.js</code>）已准备好并针对生产环境进行了优化（如代码压缩、Tree Shaking 等）。</li>\n<li><strong>环境变量</strong>：配置环境变量，确保生产环境下的 API 地址和其他配置项正确。</li>\n<li><strong>依赖检查</strong>：确保所有依赖项在 <code>package.json</code> 中已定义并通过 <code>npm install</code> 正确安装。</li>\n</ul>\n<ol start=\"2\">\n<li><strong>构建项目</strong>：</li>\n</ol>\n<ul>\n<li><strong>打包构建</strong>：使用构建命令（如 <code>npm run build</code>）生成生产环境的静态文件。</li>\n<li><strong>打包产物检查</strong>：检查打包后的文件，确保体积、性能、加载顺序等方面都正常。检查生成的 <code>index.html</code>、CSS 和 JS 文件等是否按预期生成。</li>\n<li>也可使用流水线进行构建</li>\n</ul>\n<ol start=\"3\">\n<li><strong>选择部署平台</strong>：</li>\n</ol>\n<ul>\n<li><strong>静态服务器（Nginx/Apache）</strong>：如需要自托管，选择 Nginx 或 Apache 来托管静态文件。为单页面应用（SPA）做好路由回退配置。</li>\n<li><strong>云服务平台</strong>：如 AWS S3、阿里云 OSS 等静态托管服务。</li>\n<li><strong>部署平台</strong>：如 Vercel、Netlify，这类平台支持自动化部署，并提供 CI/CD 集成。</li>\n</ul>\n<ol start=\"4\">\n<li><strong>上传构建文件</strong>：</li>\n</ol>\n<ul>\n<li>自托管服务器：\n<ul>\n<li>通过 FTP、SCP 或 Rsync 上传打包后的静态文件到服务器上的指定目录。</li>\n<li>如果使用 Docker，可以通过 Docker 容器化前端应用，并将其部署到云服务器上。</li>\n</ul>\n</li>\n<li>云服务平台：\n<ul>\n<li>使用对应的 SDK 或 CLI 工具（如 AWS CLI、OSS CLI）上传文件到云存储。</li>\n</ul>\n</li>\n<li>平台自动化部署：\n<ul>\n<li>如使用 Vercel 或 Netlify，可连接 Git 仓库，设置自动化构建和部署。</li>\n</ul>\n</li>\n</ul>\n<ol start=\"5\">\n<li><strong>配置服务器</strong>：</li>\n</ol>\n<ul>\n<li><strong>Nginx 配置</strong>：配置 Nginx 或其他服务器，指向项目的根目录，并处理 SPA 的路由问题。</li>\n<li><strong>缓存优化</strong>：配置 HTTP 缓存策略（如 <code>Cache-Control</code> 和 <code>ETag</code>），优化文件的缓存和加载速度。</li>\n<li><strong>CDN 配置</strong>：如果有全球用户，考虑使用 CDN 分发静态文件，提升加载速度。</li>\n</ul>\n<ol start=\"6\">\n<li><strong>设置域名和 HTTPS</strong>：</li>\n</ol>\n<ul>\n<li><strong>绑定域名</strong>：确保域名已解析到服务器的 IP 地址或绑定到云平台。</li>\n<li><strong>HTTPS 支持</strong>：通过 Let’s Encrypt 或购买 SSL 证书，确保项目可以通过 HTTPS 访问。</li>\n</ul>\n<ol start=\"7\">\n<li><strong>自动化部署（可选）</strong>：</li>\n</ol>\n<ul>\n<li><strong>CI/CD 集成</strong>：集成 CI/CD 工具（如 GitHub Actions、Jenkins），自动完成构建、测试和部署流程。</li>\n<li><strong>钩子配置</strong>：如使用 Vercel/Netlify 等平台，配置 Webhooks，确保每次代码变更后自动部署。</li>\n</ul>\n<ol start=\"8\">\n<li><strong>测试和监控</strong>：</li>\n</ol>\n<ul>\n<li><strong>测试部署环境</strong>：在生产环境下进行全面的功能测试，确保所有 API 调用、页面加载和用户交互正常。</li>\n<li><strong>性能监控</strong>：引入监控工具（如 Google Analytics、Sentry）监控性能和错误日志。</li>\n<li><strong>定期更新和维护</strong>：定期检查项目性能、修复潜在问题，并根据业务需求进行定期更新。</li>\n</ul>\n"},{"title":"Vue实现下拉菜单,要求点击区域外能关闭组件","description":"","answer":"<p>在 Vue 中实现点击外部关闭下拉菜单，可以通过以下步骤实现：</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">template</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;</span><span style=\"color:#1E754F\">div</span><span style=\"color:#B07D48\"> class</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">dropdown</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B07D48\"> v-click-outside</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">close</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">    &#x3C;</span><span style=\"color:#1E754F\">button</span><span style=\"color:#B31D28;font-style:italic\"> @click=\"toggle\">打开菜单&#x3C;/button></span></span>\n<span class=\"line\"><span style=\"color:#B31D28;font-style:italic\">    &#x3C;div</span><span style=\"color:#B07D48\"> v-show</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">isOpen</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B07D48\"> class</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">dropdown-menu</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#393A34\">      &#x3C;!-- 菜单内容 --></span></span>\n<span class=\"line\"><span style=\"color:#999999\">    &#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">  &#x3C;/</span><span style=\"color:#1E754F\">div</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">template</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">script</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"><span style=\"color:#393A34\">export default </span><span style=\"color:#999999\">{</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">  data</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">    return </span><span style=\"color:#999999\">{</span><span style=\"color:#59873A\"> isOpen</span><span style=\"color:#999999\">:</span><span style=\"color:#1E754F\"> false</span><span style=\"color:#999999\"> }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  },</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  methods</span><span style=\"color:#393A34\">: </span><span style=\"color:#999999\">{</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">    toggle</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A65E2B\">      this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">isOpen</span><span style=\"color:#999999\"> =</span><span style=\"color:#AB5959\"> !</span><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">isOpen</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    },</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">    close</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">      if</span><span style=\"color:#999999\"> (</span><span style=\"color:#A65E2B\">this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">isOpen</span><span style=\"color:#999999\">)</span><span style=\"color:#A65E2B\"> this</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">isOpen</span><span style=\"color:#999999\"> =</span><span style=\"color:#1E754F\"> false</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  },</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  directives</span><span style=\"color:#393A34\">: </span><span style=\"color:#999999\">{</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    // 自定义指令检测外部点击</span></span>\n<span class=\"line\"><span style=\"color:#B5695977\">    '</span><span style=\"color:#B56959\">click-outside</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">:</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">      bind</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">el</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> binding</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> vnode</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">        el</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">clickOutsideEvent</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">event</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">          if</span><span style=\"color:#999999\"> (</span><span style=\"color:#AB5959\">!</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">el</span><span style=\"color:#AB5959\"> ===</span><span style=\"color:#B07D48\"> event</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">target</span><span style=\"color:#AB5959\"> ||</span><span style=\"color:#B07D48\"> el</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">contains</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">event</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">target</span><span style=\"color:#999999\">)))</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">            vnode</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">context</span><span style=\"color:#999999\">[</span><span style=\"color:#B07D48\">binding</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">expression</span><span style=\"color:#999999\">]()</span></span>\n<span class=\"line\"><span style=\"color:#999999\">          }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">        }</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">        document</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">addEventListener</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">click</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> el</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">clickOutsideEvent</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#999999\">      },</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">      unbind</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">el</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">        document</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">removeEventListener</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">click</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> el</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">clickOutsideEvent</span><span style=\"color:#999999\">)</span></span>\n<span class=\"line\"><span style=\"color:#999999\">      }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"><span style=\"color:#999999\">&#x3C;/</span><span style=\"color:#1E754F\">script</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>核心要点</strong>：</p>\n<ol>\n<li>使用自定义指令 <code>v-click-outside</code> 检测外部点击</li>\n<li>通过事件委托绑定全局点击监听</li>\n<li>在组件销毁时移除事件监听（内存管理）</li>\n<li>使用 <code>contains()</code> 方法判断点击目标是否在容器内</li>\n</ol>\n<p><strong>实现优势</strong>：</p>\n<ul>\n<li>指令可复用</li>\n<li>自动处理事件解绑</li>\n<li>兼容动态生成的DOM元素</li>\n</ul>\n"},{"title":"如何封装一个请求，让其多次调用的时候，实际只发起一个请求的时候，返回同一份结果？","description":"","answer":"<p>可以通过 <strong>请求缓存池 + Promise 复用</strong> 实现：</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> cache</span><span style=\"color:#999999\"> =</span><span style=\"color:#AB5959\"> new</span><span style=\"color:#59873A\"> Map</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#AB5959\">function</span><span style=\"color:#59873A\"> createSingletonRequest</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">fn</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">  return</span><span style=\"color:#AB5959\"> async</span><span style=\"color:#999999\"> (...</span><span style=\"color:#B07D48\">args</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">    const</span><span style=\"color:#B07D48\"> key</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> JSON</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">stringify</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">args</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#393A34\">    </span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">    if</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">cache</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">has</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">key</span><span style=\"color:#999999\">))</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">      return</span><span style=\"color:#B07D48\"> cache</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">get</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">key</span><span style=\"color:#999999\">);</span><span style=\"color:#A0ADA0\"> // 返回已有 Promise</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#AB5959\">    const</span><span style=\"color:#B07D48\"> promise</span><span style=\"color:#999999\"> =</span><span style=\"color:#59873A\"> fn</span><span style=\"color:#999999\">(...</span><span style=\"color:#B07D48\">args</span><span style=\"color:#999999\">).</span><span style=\"color:#59873A\">finally</span><span style=\"color:#999999\">(()</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">      cache</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">delete</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">key</span><span style=\"color:#999999\">);</span><span style=\"color:#A0ADA0\"> // 请求完成清理缓存</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    });</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    cache</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">set</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">key</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> promise</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">    return</span><span style=\"color:#B07D48\"> promise</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">  };</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">// 使用示例</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> request</span><span style=\"color:#999999\"> =</span><span style=\"color:#59873A\"> createSingletonRequest</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">axios</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">get</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">request</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">/api/data</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">);</span><span style=\"color:#A0ADA0\"> // 实际发送请求</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">request</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">/api/data</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">);</span><span style=\"color:#A0ADA0\"> // 返回同一 Promise</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><strong>核心原理</strong>：</p>\n<ol>\n<li>用 <code>Map</code> 存储请求标识与对应 Promise</li>\n<li>相同参数的请求返回缓存中的 Promise</li>\n<li><code>finally</code> 确保请求结束后清除缓存</li>\n</ol>\n<p><strong>优势</strong>：</p>\n<ul>\n<li>避免重复请求</li>\n<li>自动处理并发场景</li>\n<li>适配任意请求库（Axios/Fetch 等）</li>\n</ul>\n"},{"title":"如何在浏览器中实现 PDF 文件的预览？","description":"","answer":"<ol>\n<li><strong>原生嵌入</strong></li>\n</ol>\n<pre><code class=\"language-html\"><div class=\"language-html \"><span class=\"lang\">html</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#999999\">&#x3C;</span><span style=\"color:#1E754F\">embed</span><span style=\"color:#B07D48\"> :src</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">pdfUrl</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B07D48\"> type</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">application/pdf</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B07D48\"> width</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">100%</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B07D48\"> height</span><span style=\"color:#999999\">=</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#B56959\">600px</span><span style=\"color:#B5695977\">\"</span><span style=\"color:#999999\">></span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><em>特点</em>：浏览器自带预览，但样式不可控，移动端兼容性差</p>\n<ol start=\"2\">\n<li><strong>PDF.js 方案</strong></li>\n</ol>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#A0ADA0\">// 安装 pdfjs-dist 后</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">import</span><span style=\"color:#1E754F\"> *</span><span style=\"color:#1E754F\"> as</span><span style=\"color:#B07D48\"> pdfjsLib</span><span style=\"color:#1E754F\"> from</span><span style=\"color:#B5695977\"> '</span><span style=\"color:#B56959\">pdfjs-dist/webpack</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#AB5959\">async</span><span style=\"color:#AB5959\"> function</span><span style=\"color:#59873A\"> renderPDF</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">url</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> canvasContainer</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> loadingTask</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> pdfjsLib</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">getDocument</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">url</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> pdf</span><span style=\"color:#999999\"> =</span><span style=\"color:#1E754F\"> await</span><span style=\"color:#B07D48\"> loadingTask</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">promise</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> page</span><span style=\"color:#999999\"> =</span><span style=\"color:#1E754F\"> await</span><span style=\"color:#B07D48\"> pdf</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">getPage</span><span style=\"color:#999999\">(</span><span style=\"color:#2F798A\">1</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> viewport</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> page</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">getViewport</span><span style=\"color:#999999\">({</span><span style=\"color:#998418\"> scale</span><span style=\"color:#999999\">:</span><span style=\"color:#2F798A\"> 1.5</span><span style=\"color:#999999\"> });</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">  const</span><span style=\"color:#B07D48\"> canvas</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> document</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">createElement</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">canvas</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  canvas</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">height</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> viewport</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">height</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  canvas</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">width</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> viewport</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">width</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  canvasContainer</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">appendChild</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">canvas</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  page</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">render</span><span style=\"color:#999999\">({</span><span style=\"color:#998418\"> canvasContext</span><span style=\"color:#999999\">:</span><span style=\"color:#B07D48\"> canvas</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">getContext</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">2d</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">),</span><span style=\"color:#B07D48\"> viewport</span><span style=\"color:#999999\"> });</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n<p><em>优势</em>：完全自定义渲染，支持文本选择/搜索，需处理分页加载</p>\n<ol start=\"3\">\n<li><strong>服务端转换</strong>\n通过后端将PDF转为图片序列（如用libreoffice/ghostscript），前端用swiper等组件展示\n<em>适用场景</em>：需要严格保持跨平台样式一致</li>\n</ol>\n"},{"title":"如何监控前端页面的崩溃？","description":"","answer":"<p>监控前端页面的崩溃通常涉及捕获和报告 JavaScript 错误、性能问题以及页面状态。</p>\n<p>以下是一些常见的方法和工具来实现这些监控：</p>\n<p><strong>1. 使用 <code>window.onerror</code></strong></p>\n<ul>\n<li>\n<p><strong>定义</strong>：<code>window.onerror</code> 是一个全局事件处理程序，用于捕获 JavaScript 执行时的错误。</p>\n</li>\n<li>\n<p>实现</p>\n<p>：</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B07D48\">window</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">onerror</span><span style=\"color:#999999\"> =</span><span style=\"color:#AB5959\"> function</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">message</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> source</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> lineno</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> colno</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> error</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  // 处理错误信息，例如发送到服务器</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  console</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">error</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">Error captured:</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#999999\"> {</span><span style=\"color:#B07D48\"> message</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> source</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> lineno</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> colno</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> error</span><span style=\"color:#999999\"> });</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  // 可以通过 HTTP 请求将错误信息发送到日志服务器</span></span>\n<span class=\"line\"><span style=\"color:#999999\">};</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n</ul>\n<p><strong>2. 使用 <code>window.addEventListener('unhandledrejection')</code></strong></p>\n<ul>\n<li>\n<p><strong>定义</strong>：捕获未处理的 Promise 拒绝（rejections）。</p>\n</li>\n<li>\n<p>实现</p>\n<p>：</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#B07D48\">window</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">addEventListener</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">unhandledrejection</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#AB5959\"> function</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">event</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  // 处理 Promise 拒绝，例如发送到服务器</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  console</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">error</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">Unhandled rejection:</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> event</span><span style=\"color:#999999\">.</span><span style=\"color:#B07D48\">reason</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  // 可以通过 HTTP 请求将错误信息发送到日志服务器</span></span>\n<span class=\"line\"><span style=\"color:#999999\">});</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n</ul>\n<p><strong>3. 使用 <code>try...catch</code></strong></p>\n<ul>\n<li>\n<p><strong>定义</strong>：在可能出现错误的代码块中使用 <code>try...catch</code> 捕获异常。</p>\n</li>\n<li>\n<p>实现</p>\n<p>：</p>\n<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#1E754F\">try</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  // 可能会抛出错误的代码</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span><span style=\"color:#1E754F\"> catch</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">error</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  // 处理错误，例如发送到服务器</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">  console</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">error</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">'</span><span style=\"color:#B56959\">Caught error:</span><span style=\"color:#B5695977\">'</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> error</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">  // 可以通过 HTTP 请求将错误信息发送到日志服务器</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n</li>\n</ul>\n<p><strong>4. 使用错误监控工具</strong></p>\n<ul>\n<li><strong>Sentry</strong>：捕获前端错误并提供详细的堆栈跟踪和上下文信息。</li>\n<li><strong>New Relic</strong>：提供全面的前端性能监控和错误捕获。</li>\n<li><strong>Rollbar</strong>：实时捕获和报告 JavaScript 错误和异常。</li>\n<li><strong>LogRocket</strong>：记录用户会话并捕获前端错误。</li>\n</ul>\n<p><strong>5. 性能监控和日志</strong></p>\n<ul>\n<li><strong>浏览器开发者工具</strong>：使用 DevTools 监控网络请求、性能和资源使用。</li>\n<li><strong>Web Vitals</strong>：跟踪核心 Web Vitals 指标（如 LCP、FID、CLS）来发现性能问题。</li>\n<li><strong>Custom Logging</strong>：自定义日志记录功能，将应用程序状态和错误发送到日志服务器。</li>\n</ul>\n<p><strong>6. 网络请求监控</strong></p>\n<ul>\n<li><strong>自定义错误日志</strong>：在 JavaScript 错误处理程序中，通过 HTTP 请求将错误信息发送到远程服务器进行存储和分析。</li>\n<li><strong>日志服务器</strong>：维护一个后端日志服务器，用于存储和分析前端错误和崩溃数据。</li>\n</ul>\n"},{"title":"实现一个批量请求函数，要求能够限制并发量","description":"","answer":"<pre><code class=\"language-javascript\"><div class=\"language-javascript \"><span class=\"lang\">javascript</span><pre class=\"shiki vitesse-light\" style=\"background-color:#ffffff;color:#393a34\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#AB5959\">function</span><span style=\"color:#59873A\"> multiRequest</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">urls</span><span style=\"color:#999999\"> =</span><span style=\"color:#999999\"> [],</span><span style=\"color:#B07D48\"> maxNum</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    // 请求总数量</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">    const</span><span style=\"color:#B07D48\"> sum</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> urls</span><span style=\"color:#999999\">.</span><span style=\"color:#998418\">length</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    // 根据请求数量创建一个数组来保存请求的结果</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">    const</span><span style=\"color:#B07D48\"> result</span><span style=\"color:#999999\"> =</span><span style=\"color:#AB5959\"> new</span><span style=\"color:#59873A\"> Array</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">sum</span><span style=\"color:#999999\">).</span><span style=\"color:#59873A\">fill</span><span style=\"color:#999999\">(</span><span style=\"color:#1E754F\">false</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">    // 当前完成的数量</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">    let</span><span style=\"color:#B07D48\"> count</span><span style=\"color:#999999\"> =</span><span style=\"color:#2F798A\"> 0</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#1E754F\">    return</span><span style=\"color:#AB5959\"> new</span><span style=\"color:#998418\"> Promise</span><span style=\"color:#999999\">((</span><span style=\"color:#B07D48\">resolve</span><span style=\"color:#999999\">,</span><span style=\"color:#B07D48\"> reject</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">        // 请求maxNum个</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">        while</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">count</span><span style=\"color:#999999\"> &#x3C;</span><span style=\"color:#B07D48\"> maxNum</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">            next</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#999999\">        }</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">        function</span><span style=\"color:#59873A\"> next</span><span style=\"color:#999999\">()</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">            let</span><span style=\"color:#B07D48\"> current</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> count</span><span style=\"color:#AB5959\">++</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">            // 处理边界条件</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">            if</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">current</span><span style=\"color:#999999\"> >=</span><span style=\"color:#B07D48\"> sum</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">                // 请求全部完成就将promise置为成功状态, 然后将result作为promise值返回</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">                !</span><span style=\"color:#B07D48\">result</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">includes</span><span style=\"color:#999999\">(</span><span style=\"color:#1E754F\">false</span><span style=\"color:#999999\">)</span><span style=\"color:#AB5959\"> &#x26;&#x26;</span><span style=\"color:#59873A\"> resolve</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">result</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">                return</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#999999\">            }</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">            const</span><span style=\"color:#B07D48\"> url</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> urls</span><span style=\"color:#999999\">[</span><span style=\"color:#B07D48\">current</span><span style=\"color:#999999\">];</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">            console</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">log</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">`</span><span style=\"color:#B56959\">开始 </span><span style=\"color:#1E754F\">${</span><span style=\"color:#B56959\">current</span><span style=\"color:#1E754F\">}</span><span style=\"color:#B5695977\">`</span><span style=\"color:#999999\">,</span><span style=\"color:#AB5959\"> new</span><span style=\"color:#59873A\"> Date</span><span style=\"color:#999999\">().</span><span style=\"color:#59873A\">toLocaleString</span><span style=\"color:#999999\">());</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">            fetch</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">url</span><span style=\"color:#999999\">).</span><span style=\"color:#59873A\">then</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">res</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">                // 保存请求结果</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">                result</span><span style=\"color:#999999\">[</span><span style=\"color:#B07D48\">current</span><span style=\"color:#999999\">]</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> res</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">                console</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">log</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">`</span><span style=\"color:#B56959\">完成 </span><span style=\"color:#1E754F\">${</span><span style=\"color:#B56959\">current</span><span style=\"color:#1E754F\">}</span><span style=\"color:#B5695977\">`</span><span style=\"color:#999999\">,</span><span style=\"color:#AB5959\"> new</span><span style=\"color:#59873A\"> Date</span><span style=\"color:#999999\">().</span><span style=\"color:#59873A\">toLocaleString</span><span style=\"color:#999999\">());</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">                // 请求没有全部完成, 就递归</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">                if</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">current</span><span style=\"color:#999999\"> &#x3C;</span><span style=\"color:#B07D48\"> sum</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">                    next</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#999999\">                }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">            }).</span><span style=\"color:#59873A\">catch</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">err</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">                console</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">log</span><span style=\"color:#999999\">(</span><span style=\"color:#B5695977\">`</span><span style=\"color:#B56959\">结束 </span><span style=\"color:#1E754F\">${</span><span style=\"color:#B56959\">current</span><span style=\"color:#1E754F\">}</span><span style=\"color:#B5695977\">`</span><span style=\"color:#999999\">,</span><span style=\"color:#AB5959\"> new</span><span style=\"color:#59873A\"> Date</span><span style=\"color:#999999\">().</span><span style=\"color:#59873A\">toLocaleString</span><span style=\"color:#999999\">());</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">                result</span><span style=\"color:#999999\">[</span><span style=\"color:#B07D48\">current</span><span style=\"color:#999999\">]</span><span style=\"color:#999999\"> =</span><span style=\"color:#B07D48\"> err</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#A0ADA0\">                // 请求没有全部完成, 就递归</span></span>\n<span class=\"line\"><span style=\"color:#1E754F\">                if</span><span style=\"color:#999999\"> (</span><span style=\"color:#B07D48\">current</span><span style=\"color:#999999\"> &#x3C;</span><span style=\"color:#B07D48\"> sum</span><span style=\"color:#999999\">)</span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#59873A\">                    next</span><span style=\"color:#999999\">();</span></span>\n<span class=\"line\"><span style=\"color:#999999\">                }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">            });</span></span>\n<span class=\"line\"><span style=\"color:#999999\">        }</span></span>\n<span class=\"line\"><span style=\"color:#999999\">    });</span></span>\n<span class=\"line\"><span style=\"color:#999999\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> url</span><span style=\"color:#999999\"> =</span><span style=\"color:#B5695977\"> `</span><span style=\"color:#B56959\">https://www.baidu.com/s?wd=javascript</span><span style=\"color:#B5695977\">`</span><span style=\"color:#999999\">;</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">const</span><span style=\"color:#B07D48\"> urls</span><span style=\"color:#999999\"> =</span><span style=\"color:#AB5959\"> new</span><span style=\"color:#59873A\"> Array</span><span style=\"color:#999999\">(</span><span style=\"color:#2F798A\">100</span><span style=\"color:#999999\">).</span><span style=\"color:#59873A\">fill</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">url</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#999999\">(</span><span style=\"color:#AB5959\">async</span><span style=\"color:#999999\"> ()</span><span style=\"color:#999999\"> =></span><span style=\"color:#999999\"> {</span></span>\n<span class=\"line\"><span style=\"color:#AB5959\">    const</span><span style=\"color:#B07D48\"> res</span><span style=\"color:#999999\"> =</span><span style=\"color:#1E754F\"> await</span><span style=\"color:#59873A\"> multiRequest</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">urls</span><span style=\"color:#999999\">,</span><span style=\"color:#2F798A\"> 10</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#B07D48\">    console</span><span style=\"color:#999999\">.</span><span style=\"color:#59873A\">log</span><span style=\"color:#999999\">(</span><span style=\"color:#B07D48\">res</span><span style=\"color:#999999\">);</span></span>\n<span class=\"line\"><span style=\"color:#999999\">})();</span></span>\n<span class=\"line\"></span></code></pre></div></code></pre>\n"},{"title":"实现购物车商品总价计算","description":"","answer":""},{"title":"验证手机号码的格式和真实性","description":"","answer":""},{"title":"基于 axios 实现请求超时后，自动重试","description":"","answer":""},{"title":"若发现前端应用在不同分辨率屏幕上布局错乱该怎么办？","description":"","answer":""},{"title":"当多人协作开发导致 Git 出现复杂合并冲突问题时该怎么办？","description":"","answer":""},{"title":"页面在滚动过程中出现卡顿、不流畅的问题该怎么办？","description":"","answer":""},{"title":"发现 Webpack 打包后的文件体积过大，影响加载效率该怎么办？","description":"","answer":""},{"title":"若开发的单页应用出现路由跳转白屏问题该怎么办？","description":"","answer":""},{"title":"项目中发现 console.log 打印大量信息，影响调试且降低性能该怎么办？","description":"","answer":""},{"title":"当 ECharts 图表在数据量过大时渲染缓慢、甚至崩溃该怎么办？","description":"","answer":""},{"title":"前端代码被恶意篡改，存在安全漏洞问题该怎么办？","description":"","answer":""},{"title":"项目中引入第三方库后，出现代码冲突或功能异常该怎么办？","description":"","answer":""},{"title":"IE 低版本不支持 ES6 语法，如何处理？","description":"","answer":""},{"title":"图片在部分浏览器中默认有间距的问题，如何优化？","description":"","answer":""},{"title":"HTTPS 混合内容（HTTP 资源）被浏览器拦截的问题，如何修复？","description":"","answer":""},{"title":"localStorage 存储空间不足的问题，如何设计数据清理策略？","description":"","answer":""},{"title":"前端 JavaScript 代码中未捕获的 Promise 错误，如何全局监听并上报？","description":"","answer":""},{"title":"生产环境用户操作报错但无法复现的问题，如何设计错误追踪机制？","description":"","answer":""},{"title":"CSS 动画在低端设备上卡顿的问题，如何优化性能？","description":"","answer":""},{"title":"canvas 绘制复杂图形时内存泄漏的问题，如何排查和修复？","description":"","answer":""},{"title":"transform 和 position 属性同时使用导致渲染层级混乱的问题，如何调整？","description":"","answer":""},{"title":"多人协作时 package-lock.json 冲突的问题，如何规范解决？","description":"","answer":""},{"title":"生产环境构建产物因 CDN 缓存未更新导致的功能异常，如何强制刷新？","description":"","answer":""},{"title":"开发中遇到图片加载失败或加载过慢影响页面展示如何处理？","description":"","answer":""},{"title":"前端框架更新后，如何解决项目出现兼容性问题？","description":"","answer":""},{"title":"WebSocket 断线的时候消息返回是怎么处理的，怎么保证数据一致性？","description":"","answer":""},{"title":"如果有 git 仓库需要迁移，应该怎么操作？","description":"","answer":""},{"title":"WebPack 迁移 Vite 的流程是什么？","description":"","answer":""},{"title":"Vue2 升级 Vue3 的流程是什么？","description":"","answer":""},{"title":"项目中使用的前端组件库不符合项目 UI 风格该怎么办？","description":"","answer":""},{"title":"如何处理大数相加问题？","description":"","answer":""},{"title":"出入处理项目中使用的 WebSocket 连接频繁断开重连","description":"","answer":""},{"title":"WebGL 绘制的 3D 场景在低端设备上帧率极低、画面卡顿该怎么办？","description":"","answer":""},{"title":"项目上线后，发现搜索引擎无法正确抓取页面内容进行索引该怎么办？","description":"","answer":""},{"title":"React/Vue 开发时，组件状态更新未触发视图刷新该怎么办？","description":"","answer":""},{"title":"浏览器控制台频繁报错，但不影响页面主要功能，难以定位问题根源该怎么办？","description":"","answer":""},{"title":"如何处理项目中的拖拽交互功能在移动端触摸操作时响应不灵敏问题","description":"","answer":""},{"title":"地图应用在加载大量标记点后，地图操作变得非常缓慢怎么处理？","description":"","answer":""},{"title":"项目中使用的表单提交功能，如何保证在网络不稳定时不现重复提交数据","description":"","answer":""},{"title":"如何处理项目中分页功能在频繁切换页面后数据展示错乱问题？","description":"","answer":""},{"title":"项目中使用的树形结构组件，在数据量大时展开收缩响应缓慢，卡顿如何优化？","description":"","answer":""},{"title":"开发过程中，发现前端项目依赖的 npm 包存在安全漏洞该怎么办？","description":"","answer":""},{"title":"倒计时功能 setInterval 计时不准确怎么办？","description":"","answer":""},{"title":"如何处理 Vue 开发的组件时父子组件传值时出现数据更新不及时问题？","description":"","answer":""},{"title":"如何实现一个根据输入内容自适应高度的 textarea 文本框?","description":"","answer":""},{"title":"canvas 绘制图片模糊怎么办？","description":"","answer":""}]