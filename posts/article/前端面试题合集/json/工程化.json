[{"title":"你对前端工程化有什么了解？","answer":""},{"title":"package.json 配置了解多少？","answer":""},{"title":"谈谈你对Webpack的看法？","answer":""},{"title":"Webpack的主要配置项有哪些？","answer":""},{"title":"谈谈你对Vite的看法?","answer":""},{"title":"Vite的主要配置项有哪些？","answer":""},{"title":" Webpack和Vite的核心差异？","answer":""},{"title":"为什么Vite速度比Webpack快？","answer":""},{"title":"Webpack的Loader和Plugin的区别是什么？","answer":""},{"title":"如何编写一个Webpack Loader？","answer":""},{"title":"如何编写一个Webpack Plugin？","answer":""},{"title":"什么是Polyfill？","answer":""},{"title":"解释Babel的工作原理","answer":""},{"title":"如何编写一个bable插件？","answer":""},{"title":"什么是Tree Shaking？如何实现？","answer":""},{"title":"什么情况下会导致 webpack treeShaking 失效？","answer":"Webpack 的 tree-shaking 是一种优化技术，用于去除未使用的代码，从而减小最终打包文件的大小。尽管 tree-shaking 是一个强大的工具，但在一些情况下，它可能会失效。以下是导致 Webpack tree-shaking 失效的一些常见情况：\r\n\r\n**1. 未使用 ES6 模块语法**\r\n\r\n- **问题**：Webpack 的 tree-shaking 依赖于 ES6 模块语法（`import` 和 `export`）来确定哪些代码是未使用的。如果你使用了 CommonJS 模块语法（`require` 和 `module.exports`），Webpack 将无法进行有效的 tree-shaking。\r\n- **解决方案**：确保在你的代码中使用 ES6 模块语法。\r\n\r\n**2. 动态导入和动态属性访问**\r\n\r\n- **问题**：动态导入（`import()`）和动态属性访问（例如 `require(variable)` 或 `import(variable)`）使得 Webpack 无法静态分析和确定哪些模块或代码是未使用的。\r\n- **解决方案**：尽量避免在 tree-shaking 的上下文中使用动态导入或动态属性访问。如果必须使用，确保它们在编译时能够被正确解析。\r\n\r\n**3. 非纯函数的副作用**\r\n\r\n- **问题**：如果模块或函数具有副作用（例如修改全局状态、改变外部变量），Webpack 可能无法安全地移除这些模块，因为它不能确定这些副作用是否被实际使用。\r\n- **解决方案**：将副作用从纯函数中分离，并使用 `sideEffects` 配置项告诉 Webpack 哪些模块有副作用，哪些没有副作用。\r\n\r\n**4. Webpack 配置问题**\r\n\r\n- **问题**：错误的 Webpack 配置可能会导致 tree-shaking 失效。例如，`mode` 配置项应该设置为 `'production'`，因为 Webpack 在开发模式下不会进行 tree-shaking。\r\n- **解决方案**：确保 Webpack 的 `mode` 配置为 `'production'`，并检查 `optimization` 配置项以确保启用了相关的优化选项。\r\n\r\n **5. `package.json` 中的 `sideEffects` 配置**\r\n\r\n- **问题**：如果 `package.json` 文件中的 `sideEffects` 配置不正确，Webpack 可能会保留那些实际上可以被移除的代码。\r\n- **解决方案**：确保在 `package.json` 中正确配置 `sideEffects` 字段。例如，如果你的项目没有副作用的代码，可以将其设置为 `false`，否则需要显式列出哪些文件或模块有副作用。\r\n\r\n**6. 引用外部库**\r\n\r\n- **问题**：引用外部库时，如果外部库没有正确使用 ES6 模块语法，Webpack 无法进行有效的 tree-shaking。\r\n- **解决方案**：选择支持 ES6 模块语法的外部库，并尽量避免引用不支持 tree-shaking 的库。\r\n\r\n**7. Webpack 插件和加载器**\r\n\r\n- **问题**：某些 Webpack 插件和加载器可能会影响 tree-shaking 过程。例如，某些插件可能会在构建过程中引入额外的代码或修改输出。\r\n- **解决方案**：仔细检查使用的插件和加载器，确保它们不会干扰 tree-shaking 过程。使用官方推荐的插件和加载器，以确保与 Webpack 的兼容性。"},{"title":"package.json 里面 sideEffects 属性的作用是啥","answer":""},{"title":"npm 包管理了解多少？","answer":""},{"title":"npm 和 pnpm还有 yran 的区别？","answer":""},{"title":"npm lock 文件是做什么的？","answer":""},{"title":"webpack热更新原理是什么？","answer":""},{"title":"CDN 了解多少？","answer":""},{"title":"分包的方式有哪些？","answer":""},{"title":" 异步加载原理是啥？","answer":""},{"title":"source map 了解多少？","answer":""},{"title":"SSR 了解多少？","answer":""},{"title":"webpack有哪些优化项目的手段？","answer":""},{"title":"如何配置多入口应用， 且区分公共依赖的？","answer":""},{"title":"衡量页面性能的指标有哪些？","answer":""},{"title":"谈谈你对压缩和混淆的理解","answer":""},{"title":"如何进行前端代码的测试？","answer":""},{"title":"聊聊 npm 的语义化版本","answer":""}]